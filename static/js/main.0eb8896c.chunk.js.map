{"version":3,"sources":["fbase.js","coordinateSystem.js","interactionStateMachine.js","makePassiveEventOption.js","canvasDrawIndex.js","drawImage.js","components/Csubmit.js","routes/Profile.js","routes/Auth.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storage","NULL_VIEW_POINT","Object","freeze","x","y","untransformedX","untransformedY","NULL_BOUNDS","canvasWidth","canvasHeight","left","top","right","bottom","viewMin","viewMax","IDENTITY","a","b","c","d","e","f","CoordinateSystem","_ref","_this","this","scaleExtents","documentSize","classCallCheck","_canvas","_view","scale","_viewChangeListeners","Set","setScale","setView","clampView","_ref2","_this$scaleExtents","min","max","_this$documentSize","width","height","_ref3","canvasRect","maxx","minx","maxy","miny","Math","resetView","view","newView","objectSpread","_this$_view","forEach","listener","scaleAtClientPoint","deltaScale","clientPoint","viewPt","clientPointToViewPoint","clientPtPostScale","viewPointToClientPoint","clientX","clientY","_ref4","arguments","length","undefined","_ref5","relativeClientX","relativeClientY","_ref6","_ref7","relativeX","relativeY","attachViewChangeListener","add","_scaleExtents","_documentSize","canvas","_ref8","_ref9","_this$_canvas$getBoun","getBoundingClientRect","SUPPRESS_SCROLL","preventDefault","DefaultState","_this2","handleMouseWheel","canvasDraw","_canvasDraw$props","props","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","ctrlKey","coordSystem","deltaY","clientPointFromEvent","handleDrawStart","PanState","WaitForPinchState","handleDrawMove","_viewPointFromEvent","viewPointFromEvent","lazy","update","handleDrawEnd","_this3","_this4","bind","dragStart","panStart","_clientPointFromEvent","dx","dy","_this5","touches","ScaleOrPanState","DrawingState","clientPt","deferredPoints","push","Date","valueOf","startTimestamp","startClientPoint","abs","issueDeferredPoints","nextState","i","deferredPt","syntheticEvt","SyntheticEvent","_this6","start","getTouchMetrics","scaleStart","_this6$recentMetrics","recentMetrics","centroid","distance","TouchScaleState","TouchPanState","_clientPointFromEvent2","t1x","t1y","_clientPointFromEvent3","t2x","t2y","t1","t2","sqrt","scaleOrPanState","_this7","ref","_ref$recentMetrics","_this8","_ref$recentMetrics2","dScale","_this9","_viewPointFromEvent2","both","_viewPointFromEvent3","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","brush","toObject","drawPoints","brushColor","brushRadius","saveLine","changedTouches","passiveSupported","options","passive","window","addEventListener","removeEventListener","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","CanvasDraw","possibleConstructorReturn","getPrototypeOf","call","undo","lines","slice","erasedLines","pop","clearExceptErasedLines","simulateDrawingLines","immediate","triggerOnChange","eraseAll","toConsumableArray","clear","getSaveData","JSON","stringify","getDataURL","fileType","useBgImage","backgroundColour","canvasToExport","drawing","context","getContext","storedImageData","getImageData","compositeOperation","globalCompositeOperation","imgSrc","drawImage","fillStyle","fillRect","imageData","toDataURL","concat","clearRect","putImageData","loadSaveData","saveData","immediateLoading","Error","_JSON$parse","parse","scaleX","scaleY","scaleAvg","map","line","p","componentWillUnmount","canvasObserver","unobserve","canvasContainer","interface","handleWheel","interactionSM","assertThisInitialized","mouseHasMoved","applyView","ctx","name","clearWindow","m","transformMatrix","setTransform","deferRedrawOnViewChange","drawGrid","grid","redrawImage","loop","once","handleCanvasResize","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","_entry$contentRect","value","contentRect","setCanvasSize","temp","err","point","clampLinesToDocument","image","complete","img","w","h","offsetX","offsetY","cx","cy","cw","ch","iw","ih","r","nw","nh","ar","curTime","timeoutGap","loadTimeOffset","_loop","setTimeout","style","lineJoin","lineCap","strokeStyle","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","inClientSpace","onChange","valuesChanged","_ref4$once","pointer","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","ctxs","action","save","restore","Image","crossOrigin","onload","src","hideGrid","_this$coordSystem$can","canvasBounds","floor","setLineDash","gridColor","gridLineWidth","hideGridX","countX","gridSizeX","hideGridY","countY","gridSizeY","hideInterface","arc","PI","fill","catenaryColor","catenary","drawToCanvas","chainLength","Catenary","isPressing","zoomExtents","LazyBrush","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","ResizeObserver","observer","observe","initX","initY","prevProps","setRadius","react_default","createElement","className","background","backgroundColor","touchAction","container","isInterface","key","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","PureComponent","defaultProps","CCsubmit","CsubmitObj","isOwner","_useState","viewDeleyToggle","useState","_useState2","slicedToArray","editing","setEditing","_useState3","text","_useState4","canvasRef2","useRef","_useState5","_useState6","setOnOff","uploadDay","createdAt","_useState7","_useState8","viewRefPin","setViewRefpin","onHeartClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","doc","id","heart","console","log","stop","apply","float","border","Fragment","canvasDrawIndex_CanvasDraw","onClick","current","margin","dataUrl","confirm","delete","pre","toLocaleString","navigator","language","userLanguage","refPinUrl","frameBorder","scrolling","Profile","userObj","Csubmits","setCsubmits","useEffect","collection","where","uid","orderBy","onSnapshot","snapshot","CsubmitArray","docs","data","signOut","Csubmit","components_Csubmit","creatorId","viewsToggle","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","event","_event$target","target","onSubmit","createUserWithEmailAndPassword","sent","signInWithEmailAndPassword","t0","message","_x","type","placeholder","required","Home","setCsubmit","canvasRef","pinNum","setPinNum","_useState9","_useState10","randomPinNum","setRandomPinNum","_useState11","_useState12","pinReload","setPinreload","_useState13","_useState14","pinID","setPinID","_useState15","_useState16","croquisTime","setCroquisTime","_useState17","_useState18","setMin","_useState19","_useState20","sec","setSec","time","timeId","_useState21","croquisTimeDB","_useState22","drawSetting","setDrawSetting","_useState23","_useState24","timeSetBottonToggle","setTimeSetBottonToggle","refreshAndSubmit","now","drawingTime","setInterval","parseInt","clearInterval","get","then","exists","random","refUrl","sort","catch","prevState","j","k","ordinal_suffix_of","transform","textAlign","match","pinDocRef","split","FieldValue","arrayUnion","Navigation","borderLeft","padding","react_router_dom","to","AppRouter","isLoggedIn","components_Navigation","react_router","exact","path","routes_Home","from","routes_Auth","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","Router","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0eb8896c.chunk.js","sourcesContent":["import   firebase from \"firebase/compat/app\";\r\n\r\n\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\"\r\nconst firebaseConfig = {\r\n    // apiKey: \"AIzaSyDH6rySddl7QAoqkwATwz7CgXrPe7LQis8\",\r\n    // authDomain: \"croquistool.firebaseapp.com\",\r\n    // projectId: \"croquistool\",\r\n    // storageBucket: \"croquistool.appspot.com\",\r\n    // messagingSenderId: \"843301254465\",\r\n    // appId: \"1:843301254465:web:046d03ff7cf7e8619f9dc0\",\r\n    // measurementId: \"G-JT9C23VQFT\"\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\n\r\n  export default firebase.initializeApp(firebaseConfig);\r\n \r\n const authService =  firebase.auth();\r\n const dbService = firebase.firestore();\r\n const storageService = firebase.storage();\r\nexport {firebase, authService,dbService,storageService}","/**\r\n * @type {ViewPoint}\r\n */\r\nconst NULL_VIEW_POINT = Object.freeze({\r\n  x: 0, y: 0, untransformedX: 0, untransformedY: 0\r\n});\r\n\r\n/**\r\n * @type {CanvasBounds}\r\n */\r\nconst NULL_BOUNDS = Object.freeze({\r\n  canvasWidth: 0, canvasHeight: 0,\r\n  left: 0, top: 0, right: 0, bottom: 0,\r\n  viewMin: NULL_VIEW_POINT, viewMax: NULL_VIEW_POINT,\r\n});\r\n\r\n/**\r\n * The identity matrix (a transform that results in view coordinates that are\r\n * identical to relative client coordinates).\r\n * @type {Matrix}\r\n */\r\nexport const IDENTITY = Object.freeze({ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 });\r\n\r\nfunction valueOrDefault(value, defaultValue) {\r\n  if (value === null || (typeof value) === \"undefined\") {\r\n    return defaultValue;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\r\n * canvas.\r\n */\r\nexport default class CoordinateSystem {\r\n  /**\r\n   * @typedef Extents\r\n   * @property {number} min the minimal value in the range\r\n   * @property {number} max the maximal value in the range\r\n   */\r\n\r\n  /**\r\n   * @typedef Size\r\n   * @property {number} width the span of the element's horizontal axis\r\n   * @property {number} height the span of the element's vertical axis\r\n   */\r\n\r\n  /**\r\n   * @param {Object} parameters the initialization parameters for this instance.\r\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\r\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\r\n   */\r\n  constructor({ scaleExtents, documentSize }) {\r\n    this._scaleExtents = scaleExtents;\r\n    this._documentSize = documentSize;\r\n  }\r\n\r\n  /**\r\n   * @type {Extents}\r\n   */\r\n  _scaleExtents;\r\n\r\n  /**\r\n   * @type {Size}\r\n   */\r\n  _documentSize;\r\n\r\n  /**\r\n   * @typedef Canvas\r\n   * @property {number} width the canvas's width\r\n   * @property {number} height the canvas's height\r\n   * @property {() => Object} getBoundingClientRect returns the client bounds\r\n   */\r\n\r\n  /**\r\n   * @type {Canvas}\r\n   * @private\r\n   */\r\n  _canvas = null;\r\n\r\n  /**\r\n   * @typedef View\r\n   * @property {number} scale the zoom factor\r\n   * @property {number} x the current x offset\r\n   * @property {number} y the current y offset\r\n   */\r\n\r\n  /**\r\n   * @type {View}\r\n   * @private\r\n   */\r\n  _view = { scale: 1.0, x: 0, y: 0 };\r\n\r\n  /**\r\n   * Describes a callback function that receives info about view changes\r\n   * @typedef {(update: { view: View, transform: Matrix }) => void} ViewListener\r\n   */\r\n\r\n   /**\r\n    * @type {ViewListener[]}\r\n    * @private\r\n    */\r\n   _viewChangeListeners = new Set();\r\n\r\n  /**\r\n   * @returns {Canvas} the canvas currently associated with this instance.\r\n   */\r\n  get canvas() {\r\n    return this._canvas;\r\n  }\r\n\r\n  /**\r\n   * Updates the canvas for this coordinate system and recalculates the view.\r\n   * @param {Canvas} canvas the new canvas to associate with this instance.\r\n   */\r\n  set canvas(canvas) {\r\n    this._canvas = canvas;\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the current zoom factor\r\n   */\r\n  get scale() {\r\n    return this._view.scale;\r\n  }\r\n\r\n  /**\r\n   * Sets the zoom factor (clamped by the scale extents) and updates the view.\r\n   * @param {number} the new zoom factor\r\n   */\r\n  setScale = (scale) => {\r\n    this.setView({ scale });\r\n  };\r\n\r\n  /**\r\n   * @returns {number} the horizontal component of the current pan offset\r\n   */\r\n  get x() {\r\n    return this._view.x;\r\n  }\r\n\r\n  /**\r\n   * Sets the horizontal pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} x the new offset\r\n   */\r\n  set x(x) {\r\n    this.setView({ x });\r\n  }\r\n\r\n  /**\r\n   * @retruns {number} the vertical component of the current pan offset\r\n   */\r\n  get y() {\r\n    return this._view.y;\r\n  }\r\n\r\n  /**\r\n   * Sets the vertical pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} y the new offset\r\n   */\r\n  set y(y) {\r\n    this.setView({ y });\r\n  }\r\n\r\n  /**\r\n   * @returns {View} a copy of this instance's current view state.\r\n   */\r\n  get view() {\r\n    return { ...this._view };\r\n  }\r\n\r\n  /**\r\n   * @returns {Extents} a copy of the scale extents currently applied to this\r\n   * instance.\r\n   */\r\n  get scaleExtents() {\r\n    return { ...this._scaleExtents };\r\n  }\r\n\r\n  /**\r\n   * Updates the minimum and maximum scale and resets the view transform if it\r\n   * is outside the new extents.\r\n   * @param {Extents} extents the new scale extents.\r\n   */\r\n  set scaleExtents({ min, max }) {\r\n    this._scaleExtents = { min, max };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {Size} the current document size (used to constrain the pan\r\n   * offset).\r\n   */\r\n  get documentSize() {\r\n    return { ...this._documentSize };\r\n  }\r\n\r\n  /**\r\n   * Sets the document size and recalculates the view if it is outside the new\r\n   * bounds.\r\n   * @param {Size} size the new document size.\r\n   */\r\n  set documentSize({ width, height }) {\r\n    this._documentSize = { width, height };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * A view matrix expressing a series of transformations.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n   * @typedef Matrix\r\n   * @property {number} a horizontal scaling factor (1 == unscaled)\r\n   * @property {number} b vertical skewing factor (0 == unskewed)\r\n   * @property {number} c horizontal skewing factor (0 == unskewed)\r\n   * @property {number} d vertical scaling factor (1 == unscaled)\r\n   * @property {number} e horizontal translation (0 == untranslated)\r\n   * @property {number} f vertical translation (0 == untranslated)\r\n   */\r\n\r\n  /**\r\n   * @returns {Matrix} this coordinate system's current transformation matrix\r\n   */\r\n  get transformMatrix() {\r\n    //\r\n    return {\r\n      a: this._view.scale, // horizontal scaling\r\n      b: 0, // vertical skewing\r\n      c: 0, // horizontal skewing\r\n      d: this._view.scale, // vertical scaling\r\n      e: this._view.x,\r\n      f: this._view.y,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * An object expressing the bounds of a canvas object in terms of the\r\n   * coordinate system.\r\n   * @typedef CanvasBounds\r\n   * @property {number} left the left edge of the canvas in client space\r\n   * @property {number} right the right edge of the canvas in client space\r\n   * @property {number} top the top edge of the canvas in client space\r\n   * @property {number} bottom the bottom edge of the canvas in client space\r\n   * @property {number} canvasWidth the width of the canvas in client space\r\n   * @property {number} canvasHeight the height of the canvas in client space\r\n   * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\r\n   * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\r\n   */\r\n\r\n  /**\r\n   * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\r\n   * this coordinate system, or undefined if no canvas is set.\r\n   */\r\n  get canvasBounds() {\r\n    if (this._canvas) {\r\n      const { left, top, right, bottom } = this._canvas.getBoundingClientRect();\r\n      return {\r\n        viewMin: this.clientPointToViewPoint({ clientX: left, clientY: top }),\r\n        viewMax: this.clientPointToViewPoint({ clientX: right, clientY: bottom }),\r\n        left, top, right, bottom,\r\n        canvasWidth: this._canvas.width,\r\n        canvasHeight: this._canvas.height,\r\n      };\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {{left: number, top: number} | undefined}\r\n   */\r\n  get canvasRect() {\r\n    if (this.canvas) {\r\n      return this.canvas.getBoundingClientRect();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates a variant of the given view clamped according to the scale and\r\n   * document bounds. Does not modify this instance.\r\n   * @param {View} view the view constraints to clamp.\r\n   * @returns {View} a new view object representing the constrained input.\r\n   */\r\n  clampView = ({ scale, x, y }) => {\r\n    const { min, max } = this.scaleExtents;\r\n    const { width, height } = this.documentSize;\r\n    const { left, top, right, bottom } = this.canvasRect || NULL_BOUNDS;\r\n\r\n    const canvasWidth = right - left;\r\n    const canvasHeight = bottom - top;\r\n\r\n    const maxx = canvasWidth / 2;\r\n    const minx = -(width * this._view.scale - canvasWidth / 2);\r\n    const maxy = canvasHeight / 2;\r\n    const miny = -(height * this._view.scale - canvasHeight / 2);\r\n\r\n    // Clamp values to acceptible range.\r\n    return {\r\n      scale: Math.min(Math.max(scale, min), max),\r\n      x: Math.min(Math.max(x, minx), maxx),\r\n      y: Math.min(Math.max(y, miny), maxy),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resets the view transform to its default state.\r\n   */\r\n  resetView = () => {\r\n    this.setView({ scale: 1.0, x: 0, y: 0 });\r\n  };\r\n\r\n  /**\r\n   * Updates the view, ensuring that it is within the document and scale bounds.\r\n   * @param {View} view\r\n   *    the new view state. Any view property not specified will remain\r\n   *    unchanged.\r\n   * @return {View}\r\n   *    a copy of the view state after having been constrained and applied.\r\n   */\r\n  setView = (view) => {\r\n    const newView = this.clampView({ ...this._view, ...(view || {}) });\r\n    const { scale, x, y } = this._view;\r\n\r\n    // Only trigger if the view actually changed.\r\n    if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\r\n      this._view = newView;\r\n      this._viewChangeListeners.forEach(listener => listener && listener(newView));\r\n    }\r\n\r\n    return { ...this._view };\r\n  };\r\n\r\n  /**\r\n   * Updates the current view scale while attempting to keep the given point\r\n   * fixed within the canvas.\r\n   *\r\n   * @param {number} deltaScale the amount by which to change the current scale factor.\r\n   * @param {ClientPoint} clientPoint the origin of the zoom, in client space.\r\n   *\r\n   * @returns {View} the newly computed view.\r\n   */\r\n  scaleAtClientPoint = (deltaScale, clientPoint) => {\r\n    const viewPt = this.clientPointToViewPoint(clientPoint);\r\n    const newView = this.clampView({ ...this._view, scale: this._view.scale + deltaScale });\r\n    const clientPtPostScale = this.viewPointToClientPoint(viewPt, newView);\r\n\r\n    newView.x = this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\r\n    newView.y = this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\r\n\r\n    return this.setView(newView);\r\n  };\r\n\r\n  /**\r\n   * Describes a point in view space (client space after the viewport transform\r\n   * has been applied).\r\n   * @typedef ViewPoint\r\n   * @property {number} x\r\n   *    the x-coordinate in view space\r\n   * @property {number} y\r\n   *    the y-coordinate in view space\r\n   * @property {number} relativeClientX\r\n   *    the x-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   * @property {number} relativeClientY\r\n   *    the y-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   */\r\n\r\n  /**\r\n   * @param {ClientPoint} point the point to transform in client space\r\n   * @param {View} view the view transform to apply (defaults to the current view)\r\n   * @returns {ViewPoint} the result of converting the given client coordinate\r\n   * to view space. If there is no canvas set, a top-left corner of (0, 0) is\r\n   * assumed.\r\n   */\r\n  clientPointToViewPoint = ({ clientX, clientY }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeClientX = clientX - left;\r\n    const relativeClientY = clientY - top;\r\n\r\n    return {\r\n      x: (relativeClientX - view.x) / view.scale,\r\n      y: (relativeClientY - view.y) / view.scale,\r\n      relativeClientX,\r\n      relativeClientY,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @typedef ClientPoint\r\n   * @property {number} clientX\r\n   *    the x-coordinate in client space\r\n   * @property {number} clientY\r\n   *    the y-coordinate in client space\r\n   * @property {number} x\r\n   *    an alias for clientX\r\n   * @property {number} y\r\n   *    an alias for clientY\r\n   * @property {number} relativeX\r\n   *    the x-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   * @property {number} relativeY\r\n   *    the y-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   */\r\n\r\n   /**\r\n    * @param {ViewPoint} point the point to transform in view space\r\n    * @param {number} point.x the point's x-coordinate\r\n    * @param {number} point.y the point's y-coordinate\r\n    * @param {View} view the view transform to apply (defaults to the current view)\r\n    * @returns {ClientPoint} the result of converting the given coordinate to\r\n    * client space. If there is no canvas set, a top-left corner of (0, 0) is\r\n    * assumed.\r\n    */\r\n  viewPointToClientPoint = ({ x, y }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeX = x * view.scale + view.x;\r\n    const relativeY = y * view.scale + view.y;\r\n    const clientX = relativeX + left;\r\n    const clientY = relativeY + top;\r\n\r\n    return { clientX, clientY, relativeX, relativeY, x: clientX, y: clientY };\r\n  };\r\n\r\n  /**\r\n   * Adds a new callback function that will be invoked each time the view\r\n   * transform changes.\r\n   * @param {ViewListener} listener the callback to execute.\r\n   */\r\n  attachViewChangeListener = (listener) => {\r\n    this._viewChangeListeners.add(listener);\r\n  };\r\n}\r\n","const TOUCH_SLOP = 10;\r\nconst PINCH_TIMEOUT_MS = 250;\r\nconst SUPPRESS_SCROLL = (e) => {\r\n  // No zooming while drawing, but we'll cancel the scroll event.\r\n  e.preventDefault();\r\n  return this;\r\n};\r\n\r\n/**\r\n * The default state for the interaction state machine. Supports zoom and\r\n * initiating pan and drawing actions.\r\n */\r\nexport class DefaultState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    const { disabled, enablePanAndZoom, mouseZoomFactor } = canvasDraw.props;\r\n    if (disabled ) {\r\n      return new DisabledState();\r\n    } else if (enablePanAndZoom && e.ctrlKey) {\r\n      e.preventDefault();\r\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\r\n    }\r\n    return this;\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\r\n      return (new PanState()).handleDrawStart(e, canvasDraw);\r\n    } else {\r\n      return (new WaitForPinchState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else {\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y });\r\n      return this;\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    return canvasDraw.props.disabled ? (new DisabledState()) : this;\r\n  };\r\n};\r\n\r\n/**\r\n * This state is used as long as the disabled prop is active. It ignores all\r\n * events and doesn't prevent default actions. The disabled state can only be\r\n * triggered from the default state (i.e., while no action is actively being\r\n * performed).\r\n */\r\nexport class DisabledState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleMouseWheel(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawMove(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawEnd(e, canvasDraw);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This state is active as long as the user is panning the image. This state is\r\n * retained until the pan ceases.\r\n */\r\nexport class PanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    this.dragStart = clientPointFromEvent(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { clientX, clientY } = clientPointFromEvent(e);\r\n    const dx = clientX - this.dragStart.clientX;\r\n    const dy = clientY - this.dragStart.clientY;\r\n    canvasDraw.coordSystem.setView({ x: this.panStart.x + dx, y: this.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user has initiated the drawing action but has\r\n * not yet created any lines. We use this state to try and detect a second touch\r\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\r\n * or movement happens without a second touch.\r\n */\r\nexport class WaitForPinchState {\r\n  constructor() {\r\n    this.startClientPoint = null;\r\n    this.startTimestamp = (new Date()).valueOf();\r\n    this.deferredPoints = [];\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart  = (e, canvasDraw) => {\r\n    const { enablePanAndZoom } = canvasDraw.props;\r\n    e.preventDefault();\r\n\r\n    // We're going to transition immediately into lazy-drawing mode if\r\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\r\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\r\n      return (new DrawingState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    // If we already have two touch events, we can move straight into pinch/pan\r\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // If we have two touches, move to pinch/pan (we don't have to recheck\r\n    // whether zoom is enabled because that happend in draw start).\r\n    if (e.touches && e.touches.length >= 2) {\r\n      // Use the start draw to handler to transition.\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    const clientPt = clientPointFromEvent(e);\r\n    this.deferredPoints.push(clientPt);\r\n\r\n    // If we've already moved far enough, or if enough time has passed, give up\r\n    // and switch over to drawing.\r\n    if ((new Date()).valueOf() - this.startTimestamp < PINCH_TIMEOUT_MS) {\r\n      if (this.startClientPoint === null) {\r\n        this.startClientPoint = clientPt;\r\n      }\r\n\r\n      // Note that we're using \"manhattan distance\" rather than computing a\r\n      // hypotenuse here as a cheap approximation\r\n      const d =\r\n        Math.abs(clientPt.clientX - this.startClientPoint.clientX)\r\n        + Math.abs(clientPt.clientY - this.startClientPoint.clientY);\r\n\r\n      if (d < TOUCH_SLOP) {\r\n        // We're not ready to give up yet.\r\n        return this;\r\n      }\r\n    }\r\n\r\n    // Okay, give up and start drawing.\r\n    return this.issueDeferredPoints(canvasDraw);\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    // The user stopped drawing before we decided what to do. Just treat this as\r\n    // if they were drawing all along.\r\n    return this.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\r\n  };\r\n\r\n  issueDeferredPoints = (canvasDraw) => {\r\n    // Time to give up. Play our deferred points out to the drawing state.\r\n    // The first point will have been a start draw.\r\n    let nextState = new DrawingState();\r\n    for (let i = 0; i < this.deferredPoints.length; i++) {\r\n      const deferredPt = this.deferredPoints[i];\r\n      const syntheticEvt = new SyntheticEvent(deferredPt);\r\n      const func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\r\n      nextState = func(syntheticEvt, canvasDraw);\r\n    }\r\n    return nextState;\r\n  };\r\n}\r\n\r\n/**\r\n * This state is active when the user has added at least two touch points but we\r\n * don't yet know if they intend to pan or zoom.\r\n */\r\nexport class ScaleOrPanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n    this.start = this.getTouchMetrics(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n    this.scaleStart = canvasDraw.coordSystem.scale;\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const { centroid, distance } = this.recentMetrics = this.getTouchMetrics(e);\r\n\r\n    // Switch to scaling?\r\n    const dd = Math.abs(distance - this.start.distance);\r\n    if (dd >= TOUCH_SLOP) {\r\n      return new TouchScaleState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Switch to panning?\r\n    const dx = centroid.clientX - this.start.centroid.clientX;\r\n    const dy = centroid.clientY - this.start.centroid.clientY;\r\n    const dc = Math.abs(dx) + Math.abs(dy);\r\n    if (dc >= TOUCH_SLOP) {\r\n      return new TouchPanState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Not enough movement yet\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n\r\n  getTouchMetrics = (e) => {\r\n    const { clientX: t1x, clientY: t1y } = clientPointFromEvent(e.touches[0]);\r\n    const { clientX: t2x, clientY: t2y } = clientPointFromEvent(e.touches[1]);\r\n\r\n    const dx = t2x - t1x;\r\n    const dy = t2y - t1y;\r\n\r\n    return {\r\n      t1: { clientX: t1x, clientY: t1y },\r\n      t2: { clientX: t2x, clientY: t2y },\r\n      distance: Math.sqrt(dx * dx + dy * dy),\r\n      centroid: { clientX: (t1x + t2x) / 2.0, clientY: (t1y + t2y) / 2.0 },\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to pan the image.\r\n */\r\nexport class TouchPanState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const dx = centroid.clientX - ref.start.centroid.clientX;\r\n    const dy = centroid.clientY - ref.start.centroid.clientY;\r\n\r\n    canvasDraw.setView({ x: ref.panStart.x + dx, y: ref.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to scale the drawing.\r\n */\r\nexport class TouchScaleState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const targetScale = ref.scaleStart * (distance / ref.start.distance);\r\n    const dScale = targetScale - canvasDraw.coordSystem.scale;\r\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user is drawing.\r\n */\r\nexport class DrawingState {\r\n  constructor() {\r\n    this.isDrawing = false;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    if (e.touches && e.touches.length) {\r\n      // on touch, set catenary position to touch pos\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y }, { both: true });\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n    canvasDraw.lazy.update({ x, y });\r\n    const isDisabled = !canvasDraw.lazy.isEnabled();\r\n\r\n    if (!this.isDrawing || isDisabled) {\r\n      // Start drawing and add point\r\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n      this.isDrawing = true;\r\n    }\r\n\r\n    // Add new point\r\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n\r\n    // Draw current points\r\n    canvasDraw.drawPoints({\r\n      points: canvasDraw.points,\r\n      brushColor: canvasDraw.props.brushColor,\r\n      brushRadius: canvasDraw.props.brushRadius\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // Draw to this end pos\r\n    this.handleDrawMove(e, canvasDraw);\r\n    canvasDraw.saveLine();\r\n\r\n    return new DefaultState();\r\n  };\r\n}\r\n\r\nexport class SyntheticEvent {\r\n  constructor({ clientX, clientY }) {\r\n    this.clientX = clientX;\r\n    this.clientY = clientY;\r\n    this.touches = [ { clientX, clientY } ];\r\n  }\r\n\r\n  preventDefault = () => {};\r\n}\r\n\r\nexport function clientPointFromEvent(e) {\r\n  // use cursor pos as default\r\n  let clientX = e.clientX;\r\n  let clientY = e.clientY;\r\n\r\n  // use first touch if available\r\n  if (e.changedTouches && e.changedTouches.length > 0) {\r\n    clientX = e.changedTouches[0].clientX;\r\n    clientY = e.changedTouches[0].clientY;\r\n  }\r\n\r\n  return { clientX, clientY };\r\n}\r\n\r\nexport function viewPointFromEvent(coordSystem, e) {\r\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\r\n}\r\n","// Determines if the browser supprots passive events\r\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\nlet passiveSupported = false;\r\ntry {\r\n  const options = {\r\n    get passive() {\r\n      passiveSupported = true;\r\n      return false; \r\n    }\r\n  };\r\n  window.addEventListener(\"test\", options, options);\r\n  window.removeEventListener(\"test\", options, options);\r\n} catch(e) {\r\n  passiveSupported = false;\r\n}\r\n\r\nexport default function makePassiveEventOption(passive) {\r\n  return passiveSupported ? { passive } : passive;\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyBrush } from \"lazy-brush\";\r\nimport { Catenary } from \"catenary-curve\";\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\r\nimport drawImage from \"./drawImage\";\r\nimport { DefaultState } from \"./interactionStateMachine\";\r\nimport makePassiveEventOption from \"./makePassiveEventOption\";\r\n\r\nfunction midPointBtw(p1, p2) {\r\n  return {\r\n    x: p1.x + (p2.x - p1.x) / 2,\r\n    y: p1.y + (p2.y - p1.y) / 2,\r\n  };\r\n}\r\n\r\nconst canvasStyle = {\r\n  display: \"block\",\r\n  position: \"absolute\",\r\n};\r\n\r\n// The order of these is important: grid > drawing > temp > interface\r\nconst canvasTypes = [\"grid\", \"drawing\", \"temp\", \"interface\"];\r\n\r\nconst dimensionsPropTypes = PropTypes.oneOfType([\r\n  PropTypes.number,\r\n  PropTypes.string,\r\n]);\r\n\r\nconst boundsProp = PropTypes.shape({\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default class CanvasDraw extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    loadTimeOffset: PropTypes.number,\r\n    lazyRadius: PropTypes.number,\r\n    brushRadius: PropTypes.number,\r\n    brushColor: PropTypes.string,\r\n    catenaryColor: PropTypes.string,\r\n    gridColor: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    hideGrid: PropTypes.bool,\r\n    canvasWidth: dimensionsPropTypes,\r\n    canvasHeight: dimensionsPropTypes,\r\n    disabled: PropTypes.bool,\r\n    imgSrc: PropTypes.string,\r\n    saveData: PropTypes.string,\r\n    immediateLoading: PropTypes.bool,\r\n    hideInterface: PropTypes.bool,\r\n    gridSizeX: PropTypes.number,\r\n    gridSizeY: PropTypes.number,\r\n    gridLineWidth: PropTypes.number,\r\n    hideGridX: PropTypes.bool,\r\n    hideGridY: PropTypes.bool,\r\n    enablePanAndZoom: PropTypes.bool,\r\n    mouseZoomFactor: PropTypes.number,\r\n    zoomExtents: boundsProp,\r\n    clampLinesToDocument: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChange: null,\r\n    loadTimeOffset: 5,\r\n    lazyRadius: 12,\r\n    brushRadius: 10,\r\n    brushColor: \"#444\",\r\n    catenaryColor: \"#0a0302\",\r\n    gridColor: \"rgba(150,150,150,0.17)\",\r\n    backgroundColor: \"#FFF\",\r\n    hideGrid: false,\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false,\r\n    imgSrc: \"\",\r\n    saveData: \"\",\r\n    immediateLoading: false,\r\n    hideInterface: false,\r\n    gridSizeX: 25,\r\n    gridSizeY: 25,\r\n    gridLineWidth: 0.5,\r\n    hideGridX: false,\r\n    hideGridY: false,\r\n    enablePanAndZoom: false,\r\n    mouseZoomFactor: 0.01,\r\n    zoomExtents: { min: 0.33, max: 3 },\r\n    clampLinesToDocument: false,\r\n  };\r\n\r\n  ///// public API /////////////////////////////////////////////////////////////\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvas = {};\r\n    this.ctx = {};\r\n\r\n    this.catenary = new Catenary();\r\n\r\n    this.points = [];\r\n    this.lines = [];\r\n    this.erasedLines = [];\r\n\r\n    this.mouseHasMoved = true;\r\n    this.valuesChanged = true;\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n    this.deferRedrawOnViewChange = false;\r\n\r\n    this.interactionSM = new DefaultState();\r\n    this.coordSystem = new CoordinateSystem({\r\n      scaleExtents: props.zoomExtents,\r\n      documentSize: { width: props.canvasWidth, height: props.canvasHeight },\r\n    });\r\n    this.coordSystem.attachViewChangeListener(this.applyView.bind(this));\r\n  }\r\n\r\n  undo = () => {\r\n    let lines = [];\r\n    if (this.lines.length) {\r\n      lines = this.lines.slice(0, -1);\r\n    } else if (this.erasedLines.length) {\r\n      lines = this.erasedLines.pop();\r\n    }\r\n    this.clearExceptErasedLines();\r\n    this.simulateDrawingLines({ lines, immediate: true });\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  eraseAll = () => {\r\n    this.erasedLines.push([...this.lines]);\r\n    this.clearExceptErasedLines();\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  clear = () => {\r\n    this.erasedLines = [];\r\n    this.clearExceptErasedLines();\r\n    this.resetView();\r\n  };\r\n\r\n  resetView = () => {\r\n    return this.coordSystem.resetView();\r\n  };\r\n\r\n  setView = (view) => {\r\n    return this.coordSystem.setView(view);\r\n  };\r\n\r\n  getSaveData = () => {\r\n    // Construct and return the stringified saveData object\r\n    return JSON.stringify({\r\n      lines: this.lines,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Combination of work by Ernie Arrowsmith and emizz\r\n   * References:\r\n   * https://stackoverflow.com/questions/32160098/change-html-canvas-black-background-to-white-background-when-creating-jpg-image\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n\r\n   * This function will export the canvas to a data URL, which can subsequently be used to share or manipulate the image file.\r\n   * @param {string} fileType Specifies the file format to export to. Note: should only be the file type, not the \"image/\" prefix.\r\n   *  For supported types see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n   * @param {bool} useBgImage Specifies whether the canvas' current background image should also be exported. Default is false.\r\n   * @param {string} backgroundColour The desired background colour hex code, e.g. \"#ffffff\" for white.\r\n   */\r\n  getDataURL = (fileType, useBgImage, backgroundColour) => {\r\n    // Get a reference to the \"drawing\" layer of the canvas\r\n    let canvasToExport = this.canvas.drawing;\r\n\r\n    let context = canvasToExport.getContext(\"2d\");\r\n\r\n    //cache height and width\r\n    let width = canvasToExport.width;\r\n    let height = canvasToExport.height;\r\n\r\n    //get the current ImageData for the canvas\r\n    let storedImageData = context.getImageData(0, 0, width, height);\r\n\r\n    //store the current globalCompositeOperation\r\n    var compositeOperation = context.globalCompositeOperation;\r\n\r\n    //set to draw behind current content\r\n    context.globalCompositeOperation = \"destination-over\";\r\n\r\n    // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\r\n    if (useBgImage) {\r\n      if (!this.props.imgSrc) return \"Background image source not set\";\r\n\r\n      // Write the background image\r\n      this.drawImage();\r\n    } else if (backgroundColour != null) {\r\n      //set background color\r\n      context.fillStyle = backgroundColour;\r\n\r\n      //fill entire canvas with background colour\r\n      context.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    // If the file type has not been specified, default to PNG\r\n    if (!fileType) fileType = \"png\";\r\n\r\n    // Export the canvas to data URL\r\n    let imageData = canvasToExport.toDataURL(`image/${fileType}`);\r\n\r\n    //clear the canvas\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    //restore it with original / cached ImageData\r\n    context.putImageData(storedImageData, 0, 0);\r\n\r\n    //reset the globalCompositeOperation to what it was\r\n    context.globalCompositeOperation = compositeOperation;\r\n\r\n    return imageData;\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\r\n    if (typeof saveData !== \"string\") {\r\n      throw new Error(\"saveData needs to be of type string!\");\r\n    }\r\n\r\n    const { lines, width, height } = JSON.parse(saveData);\r\n\r\n    if (!lines || typeof lines.push !== \"function\") {\r\n      throw new Error(\"saveData.lines needs to be an array!\");\r\n    }\r\n\r\n    this.clear();\r\n\r\n    if (\r\n      width === this.props.canvasWidth &&\r\n      height === this.props.canvasHeight\r\n    ) {\r\n      this.simulateDrawingLines({\r\n        lines,\r\n        immediate,\r\n      });\r\n    } else {\r\n      // we need to rescale the lines based on saved & current dimensions\r\n      const scaleX = this.props.canvasWidth / width;\r\n      const scaleY = this.props.canvasHeight / height;\r\n      const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n      this.simulateDrawingLines({\r\n        lines: lines.map((line) => ({\r\n          ...line,\r\n          points: line.points.map((p) => ({\r\n            x: p.x * scaleX,\r\n            y: p.y * scaleY,\r\n          })),\r\n          brushRadius: line.brushRadius * scaleAvg,\r\n        })),\r\n        immediate,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///// private API ////////////////////////////////////////////////////////////\r\n\r\n  ///// React Lifecycle\r\n\r\n  componentDidMount() {\r\n    this.lazy = new LazyBrush({\r\n      radius: this.props.lazyRadius * window.devicePixelRatio,\r\n      enabled: true,\r\n      initialPoint: {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2,\r\n      },\r\n    });\r\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n\r\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\r\n      this.handleCanvasResize(entries, observer)\r\n    );\r\n    this.canvasObserver.observe(this.canvasContainer);\r\n\r\n    this.drawImage();\r\n    this.loop();\r\n\r\n    window.setTimeout(() => {\r\n      const initX = window.innerWidth / 2;\r\n      const initY = window.innerHeight / 2;\r\n      this.lazy.update(\r\n        { x: initX - this.chainLength / 4, y: initY },\r\n        { both: true }\r\n      );\r\n      this.lazy.update(\r\n        { x: initX + this.chainLength / 4, y: initY },\r\n        { both: false }\r\n      );\r\n      this.mouseHasMoved = true;\r\n      this.valuesChanged = true;\r\n      this.clearExceptErasedLines();\r\n\r\n      // Load saveData from prop if it exists\r\n      if (this.props.saveData) {\r\n        this.loadSaveData(this.props.saveData);\r\n      }\r\n    }, 100);\r\n\r\n    // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\r\n    // This is necessary to prevent the default event action on chrome.\r\n    // https://github.com/facebook/react/issues/14856\r\n    this.canvas.interface &&\r\n      this.canvas.interface.addEventListener(\r\n        \"wheel\",\r\n        this.handleWheel,\r\n        makePassiveEventOption()\r\n      );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\r\n      // Set new lazyRadius values\r\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\r\n    }\r\n\r\n    if (prevProps.saveData !== this.props.saveData) {\r\n      this.loadSaveData(this.props.saveData);\r\n    }\r\n\r\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\r\n      // Signal this.loop function that values changed\r\n      this.valuesChanged = true;\r\n    }\r\n\r\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\r\n    if (!this.props.enablePanAndZoom) {\r\n      this.coordSystem.resetView();\r\n    }\r\n\r\n    if (prevProps.imgSrc !== this.props.imgSrc) {\r\n      this.drawImage();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.canvasObserver.unobserve(this.canvasContainer);\r\n    this.canvas.interface &&\r\n      this.canvas.interface.removeEventListener(\"wheel\", this.handleWheel);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"block\",\r\n          background: this.props.backgroundColor,\r\n          touchAction: \"none\",\r\n          width: this.props.canvasWidth,\r\n          height: this.props.canvasHeight,\r\n          ...this.props.style,\r\n        }}\r\n        ref={(container) => {\r\n          if (container) {\r\n            this.canvasContainer = container;\r\n          }\r\n        }}\r\n      >\r\n        {canvasTypes.map((name) => {\r\n          const isInterface = name === \"interface\";\r\n          return (\r\n            <canvas\r\n              key={name}\r\n              ref={(canvas) => {\r\n                if (canvas) {\r\n                  this.canvas[name] = canvas;\r\n                  this.ctx[name] = canvas.getContext(\"2d\");\r\n                  if (isInterface) {\r\n                    this.coordSystem.canvas = canvas;\r\n                  }\r\n                }\r\n              }}\r\n              style={{ ...canvasStyle }}\r\n              onMouseDown={isInterface ? this.handleDrawStart : undefined}\r\n              onMouseMove={isInterface ? this.handleDrawMove : undefined}\r\n              onMouseUp={isInterface ? this.handleDrawEnd : undefined}\r\n              onMouseOut={isInterface ? this.handleDrawEnd : undefined}\r\n              onTouchStart={isInterface ? this.handleDrawStart : undefined}\r\n              onTouchMove={isInterface ? this.handleDrawMove : undefined}\r\n              onTouchEnd={isInterface ? this.handleDrawEnd : undefined}\r\n              onTouchCancel={isInterface ? this.handleDrawEnd : undefined}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ///// Event Handlers\r\n\r\n  handleWheel = (e) => {\r\n    this.interactionSM = this.interactionSM.handleMouseWheel(e, this);\r\n  };\r\n\r\n  handleDrawStart = (e) => {\r\n    this.interactionSM = this.interactionSM.handleDrawStart(e, this);\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleDrawMove = (e) => {\r\n    this.interactionSM = this.interactionSM.handleDrawMove(e, this);\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleDrawEnd = (e) => {\r\n    this.interactionSM = this.interactionSM.handleDrawEnd(e, this);\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  applyView = () => {\r\n    if (!this.ctx.drawing) {\r\n      return;\r\n    }\r\n\r\n    canvasTypes\r\n      .map((name) => this.ctx[name])\r\n      .forEach((ctx) => {\r\n        this.clearWindow(ctx);\r\n        const m = this.coordSystem.transformMatrix;\r\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\r\n      });\r\n\r\n    if (!this.deferRedrawOnViewChange) {\r\n      this.drawGrid(this.ctx.grid);\r\n      this.redrawImage();\r\n      this.loop({ once: true });\r\n\r\n      const lines = this.lines;\r\n      this.lines = [];\r\n      this.simulateDrawingLines({ lines, immediate: true });\r\n    }\r\n  };\r\n\r\n  handleCanvasResize = (entries) => {\r\n    const saveData = this.getSaveData();\r\n    this.deferRedrawOnViewChange = true;\r\n    try {\r\n      for (const entry of entries) {\r\n        const { width, height } = entry.contentRect;\r\n        this.setCanvasSize(this.canvas.interface, width, height);\r\n        this.setCanvasSize(this.canvas.drawing, width, height);\r\n        this.setCanvasSize(this.canvas.temp, width, height);\r\n        this.setCanvasSize(this.canvas.grid, width, height);\r\n\r\n        this.coordSystem.documentSize = { width, height };\r\n        this.drawGrid(this.ctx.grid);\r\n        this.drawImage();\r\n        this.loop({ once: true });\r\n      }\r\n      this.loadSaveData(saveData, true);\r\n    } finally {\r\n      this.deferRedrawOnViewChange = false;\r\n    }\r\n  };\r\n\r\n  ///// Helpers\r\n\r\n  clampPointToDocument = (point) => {\r\n    if (this.props.clampLinesToDocument) {\r\n      return {\r\n        x: Math.max(Math.min(point.x, this.props.canvasWidth), 0),\r\n        y: Math.max(Math.min(point.y, this.props.canvasHeight), 0),\r\n      };\r\n    } else {\r\n      return point;\r\n    }\r\n  };\r\n\r\n  redrawImage = () => {\r\n    this.image &&\r\n      this.image.complete &&\r\n      drawImage({ ctx: this.ctx.grid, img: this.image });\r\n  };\r\n\r\n  simulateDrawingLines = ({ lines, immediate }) => {\r\n    // Simulate live-drawing of the loaded lines\r\n    // TODO use a generator\r\n    let curTime = 0;\r\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\r\n\r\n    lines.forEach((line) => {\r\n      const { points, brushColor, brushRadius } = line;\r\n\r\n      // Draw all at once if immediate flag is set, instead of using setTimeout\r\n      if (immediate) {\r\n        // Draw the points\r\n        this.drawPoints({\r\n          points,\r\n          brushColor,\r\n          brushRadius,\r\n        });\r\n\r\n        // Save line with the drawn points\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n        return;\r\n      }\r\n\r\n      // Use timeout to draw\r\n      for (let i = 1; i < points.length; i++) {\r\n        curTime += timeoutGap;\r\n        window.setTimeout(() => {\r\n          this.drawPoints({\r\n            points: points.slice(0, i + 1),\r\n            brushColor,\r\n            brushRadius,\r\n          });\r\n        }, curTime);\r\n      }\r\n\r\n      curTime += timeoutGap;\r\n      window.setTimeout(() => {\r\n        // Save this line with its props instead of this.props\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n      }, curTime);\r\n    });\r\n  };\r\n\r\n  setCanvasSize = (canvas, width, height) => {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width;\r\n    canvas.style.height = height;\r\n  };\r\n\r\n  drawPoints = ({ points, brushColor, brushRadius }) => {\r\n    this.ctx.temp.lineJoin = \"round\";\r\n    this.ctx.temp.lineCap = \"round\";\r\n    this.ctx.temp.strokeStyle = brushColor;\r\n\r\n    this.clearWindow(this.ctx.temp);\r\n    this.ctx.temp.lineWidth = brushRadius * 2;\r\n\r\n    let p1 = points[0];\r\n    let p2 = points[1];\r\n\r\n    this.ctx.temp.moveTo(p2.x, p2.y);\r\n    this.ctx.temp.beginPath();\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      // we pick the point between pi+1 & pi+2 as the\r\n      // end point and p1 as our control point\r\n      var midPoint = midPointBtw(p1, p2);\r\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      p1 = points[i];\r\n      p2 = points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    this.ctx.temp.lineTo(p1.x, p1.y);\r\n    this.ctx.temp.stroke();\r\n  };\r\n\r\n  saveLine = ({ brushColor, brushRadius } = {}) => {\r\n    if (this.points.length < 2) return;\r\n\r\n    // Save as new line\r\n    this.lines.push({\r\n      points: [...this.points],\r\n      brushColor: brushColor || this.props.brushColor,\r\n      brushRadius: brushRadius || this.props.brushRadius,\r\n    });\r\n\r\n    // Reset points array\r\n    this.points.length = 0;\r\n\r\n    // Copy the line to the drawing canvas\r\n    this.inClientSpace([this.ctx.drawing, this.ctx.temp], () => {\r\n      this.ctx.drawing.drawImage(\r\n        this.canvas.temp,\r\n        0,\r\n        0,\r\n        this.canvas.drawing.width,\r\n        this.canvas.drawing.height\r\n      );\r\n    });\r\n\r\n    // Clear the temporary line-drawing canvas\r\n    this.clearWindow(this.ctx.temp);\r\n\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  triggerOnChange = () => {\r\n    this.props.onChange && this.props.onChange(this);\r\n  };\r\n\r\n  clearWindow = (ctx) => {\r\n    this.inClientSpace([ctx], () =>\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    );\r\n  };\r\n\r\n  clearExceptErasedLines = () => {\r\n    this.lines = [];\r\n    this.valuesChanged = true;\r\n    this.clearWindow(this.ctx.drawing);\r\n    this.clearWindow(this.ctx.temp);\r\n  };\r\n\r\n  loop = ({ once = false } = {}) => {\r\n    if (this.mouseHasMoved || this.valuesChanged) {\r\n      const pointer = this.lazy.getPointerCoordinates();\r\n      const brush = this.lazy.getBrushCoordinates();\r\n\r\n      this.drawInterface(this.ctx.interface, pointer, brush);\r\n      this.mouseHasMoved = false;\r\n      this.valuesChanged = false;\r\n    }\r\n\r\n    if (!once) {\r\n      window.requestAnimationFrame(() => {\r\n        this.loop();\r\n      });\r\n    }\r\n  };\r\n\r\n  inClientSpace = (ctxs, action) => {\r\n    ctxs.forEach((ctx) => {\r\n      ctx.save();\r\n      ctx.setTransform(\r\n        IDENTITY.a,\r\n        IDENTITY.b,\r\n        IDENTITY.c,\r\n        IDENTITY.d,\r\n        IDENTITY.e,\r\n        IDENTITY.f\r\n      );\r\n    });\r\n\r\n    try {\r\n      action();\r\n    } finally {\r\n      ctxs.forEach((ctx) => ctx.restore());\r\n    }\r\n  };\r\n\r\n  ///// Canvas Rendering\r\n\r\n  drawImage = () => {\r\n    if (!this.props.imgSrc) return;\r\n\r\n    // Load the image\r\n    this.image = new Image();\r\n\r\n    // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\r\n    this.image.crossOrigin = \"anonymous\";\r\n\r\n    // Draw the image once loaded\r\n    this.image.onload = this.redrawImage;\r\n    this.image.src = this.props.imgSrc;\r\n  };\r\n\r\n  drawGrid = (ctx) => {\r\n    if (this.props.hideGrid) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    const gridSize = 25;\r\n    const { viewMin, viewMax } = this.coordSystem.canvasBounds;\r\n    const minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\r\n    const miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\r\n    const maxx = viewMax.x + gridSize;\r\n    const maxy = viewMax.y + gridSize;\r\n\r\n    ctx.beginPath();\r\n    ctx.setLineDash([5, 1]);\r\n    ctx.setLineDash([]);\r\n    ctx.strokeStyle = this.props.gridColor;\r\n    ctx.lineWidth = this.props.gridLineWidth;\r\n\r\n    if (!this.props.hideGridX) {\r\n      let countX = minx;\r\n      const gridSizeX = this.props.gridSizeX;\r\n      while (countX < maxx) {\r\n        countX += gridSizeX;\r\n        ctx.moveTo(countX, miny);\r\n        ctx.lineTo(countX, maxy);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n\r\n    if (!this.props.hideGridY) {\r\n      let countY = miny;\r\n      const gridSizeY = this.props.gridSizeY;\r\n      while (countY < maxy) {\r\n        countY += gridSizeY;\r\n        ctx.moveTo(minx, countY);\r\n        ctx.lineTo(maxx, countY);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  drawInterface = (ctx, pointer, brush) => {\r\n    if (this.props.hideInterface) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    // Draw brush preview\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.brushColor;\r\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw mouse point (the one directly at the cursor)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw catenary\r\n    if (this.lazy.isEnabled()) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.lineCap = \"round\";\r\n      ctx.setLineDash([2, 4]);\r\n      ctx.strokeStyle = this.props.catenaryColor;\r\n      this.catenary.drawToCanvas(\r\n        this.ctx.interface,\r\n        brush,\r\n        pointer,\r\n        this.chainLength\r\n      );\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw brush point (the one in the middle of the brush preview)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  };\r\n}\r\n","/** \r\n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\r\n * Original By Ken Fyrstenberg Nilsen\r\n * \r\n * Note: img must be fully loaded or have correct width & height set.\r\n */\r\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\r\n  // Defaults\r\n  if (typeof x !== \"number\") x = 0;\r\n  if (typeof y !== \"number\") y = 0;\r\n  if (typeof w !== \"number\") w = ctx.canvas.width;\r\n  if (typeof h !== \"number\") h = ctx.canvas.height;\r\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\r\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\r\n\r\n  // keep bounds [0.0, 1.0]\r\n  if (offsetX < 0) offsetX = 0;\r\n  if (offsetY < 0) offsetY = 0;\r\n  if (offsetX > 1) offsetX = 1;\r\n  if (offsetY > 1) offsetY = 1;\r\n\r\n  var iw = img.width,\r\n    ih = img.height,\r\n    r = Math.min(w / iw, h / ih),\r\n    nw = iw * r, // new prop. width\r\n    nh = ih * r, // new prop. height\r\n    cx,\r\n    cy,\r\n    cw,\r\n    ch,\r\n    ar = 1;\r\n\r\n  // decide which gap to fill\r\n  if (nw < w) ar = w / nw;\r\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\r\n  nw *= ar;\r\n  nh *= ar;\r\n\r\n  // calc source rectangle\r\n  cw = iw / (nw / w);\r\n  ch = ih / (nh / h);\r\n\r\n  cx = (iw - cw) * offsetX;\r\n  cy = (ih - ch) * offsetY;\r\n\r\n  // make sure source rectangle is valid\r\n  if (cx < 0) cx = 0;\r\n  if (cy < 0) cy = 0;\r\n  if (cw > iw) cw = iw;\r\n  if (ch > ih) ch = ih;\r\n\r\n  // fill image in dest. rectangle\r\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\r\n}\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef,useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\n\r\nconst CCsubmit =({CsubmitObj, isOwner,viewDeleyToggle})=>{\r\n    const [editing,setEditing]= useState(false);\r\n    const [newCsubmit,setnewCsubmit]=useState(CsubmitObj.text);\r\n    // const [givedHeart,setGivedHeart]=useState(false)\r\n    // const [yourheart,setYourHeart]=useState(CsubmitObj.heart);\r\n    const canvasRef2 = useRef();\r\n    const [onOff,setOnOff]=useState(true);\r\n    // const [onReview,setOnReview]= useState(false);\r\n    // const [offReview,setoffReview]= useState(false);\r\n    // // canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n    let uploadDay= new Date(CsubmitObj.createdAt);\r\n    const [viewRefPin,setViewRefpin]=useState(false);\r\n    // useEffect(() => {\r\n    //    \r\n    //     //  if(viewsToggle && onOff){\r\n    //     //     canvasRef2.current.loadSaveData(CsubmitObj.text,true);\r\n    //     //     setOnOff(false)\r\n    //     //  }\r\n        \r\n    // },[editing]);\r\n    const onDeleteClick= () => {\r\n        const ok = window.confirm(\"wanna delete this?\")\r\n        if(ok){\r\n            dbService.doc(`Csubmit/${CsubmitObj.id}`).delete();\r\n            \r\n        }\r\n    };\r\n    const toggleReview=()=> {\r\n        canvasRef2.current.clear();\r\n        // canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n        canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n        \r\n    };\r\n    const offReview=()=>{\r\n        setEditing(false);\r\n            // 강제 이미지추가\r\n            // console.log('none')\r\n            // const dataUrl=canvasRef2.current.getDataURL();\r\n        \r\n    \r\n        \r\n            // dbService.doc(`Csubmit/${CsubmitObj.id}`).update({\r\n            \r\n            // dataUrl:dataUrl,\r\n           //  refPhoto:{refPhoto},\r\n            //pinNumber:randomPinNum,\r\n        // });\r\n        \r\n    }\r\n    const onReview=()=> {setEditing(true);\r\n        setTimeout(function() {\r\n            canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n            \r\n            \r\n          }, 5);\r\n        }\r\n    const onSubmit = (event)=> {\r\n        event.preventDefault();\r\n        dbService.doc(`Csubmit/${CsubmitObj.id}`).update({\r\n            text:newCsubmit,\r\n        });\r\n        setEditing(false);\r\n\r\n    }\r\n    const onChange = (event)=> {\r\n        const {target:{value},\r\n        }=event;\r\n        setnewCsubmit(value);\r\n    }\r\n    //const toggleheart=()=> setYourHeart(prev => !prev);\r\n    const onHeartClick= async() =>{\r\n        setOnOff(prev => !prev);\r\n        await dbService.doc(`Csubmit/${CsubmitObj.id}`).update({\r\n           heart:(1+(CsubmitObj.heart)),\r\n        })\r\n        console.log(CsubmitObj.heart)\r\n\r\n    }\r\n    return(\r\n        <div   style={{float:'left', border: '10px solid rgba(0, 0, 0, 0.05)',width:\"420px\"\r\n        }}>\r\n            \r\n        {\r\n            editing ? (\r\n            <>\r\n            {/* <form onSubmit={onSubmit}><input value={newCsubmit} required onChange={onChange}/>\r\n            <input type={\"submit\"} value=\"Update croquis\"/>\r\n            </form> */}\r\n            \r\n            <div><CanvasDraw \r\n            style={{ touchAction: 'disabled'  ? 'auto' : 'none' }}\r\n            ref={canvasRef2}\r\n             disabled\r\n            hideInterface\r\n            \r\n             loadTimeOffset={5}\r\n             /></div>\r\n             \r\n             <button onClick={toggleReview}>Rewind</button>\r\n             <button onClick={offReview}>Cancel</button>\r\n             \r\n            </>\r\n            ):(\r\n            <>\r\n            <div style={{margin: '0 auto'}}><img src={CsubmitObj.dataUrl} height=\"400px\" ></img></div>\r\n            \r\n            \r\n        {isOwner ? (\r\n            <>\r\n\r\n            {/* <button disabled>❤ {CsubmitObj.heart}</button> */}\r\n            <button onClick={onHeartClick}>❤{CsubmitObj.heart}</button>\r\n            <button onClick={onDeleteClick}>Delete</button>\r\n            <button onClick={onReview}>Review</button>\r\n            \r\n            \r\n            </>\r\n        ):(\r\n            <>\r\n            <button onClick={onHeartClick}>❤ {CsubmitObj.heart}</button>\r\n            \r\n            </>\r\n        )}\r\n\r\n            \r\n            \r\n                \r\n            \r\n            \r\n            \r\n            \r\n        </>\r\n            \r\n            \r\n            \r\n            \r\n\r\n            )}\r\n            <button onClick={()=>{setViewRefpin(pre=>!pre)}}>Ref Pin</button>\r\n            {\"   \"}  {uploadDay.toLocaleString(navigator.language || navigator.userLanguage)}\r\n            {viewRefPin ? (<>\r\n                <div><iframe  src={\"https://assets.pinterest.com/ext/embed.html?id=\"+CsubmitObj.refPinUrl} height=\"600\" width=\"300\" frameBorder={0} scrolling=\"no\" ></iframe>\r\n                </div></>):(<></>)}\r\n    </div>\r\n)\r\n};\r\n    \r\n\r\nexport default CCsubmit;","import CCsubmit from \"components/Csubmit\";\r\nimport { authService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nexport default ({userObj}) => {\r\n    const onLogOutClick = () => authService.signOut();\r\n    \r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [viewToggle,setViewToggle]=useState(false);\r\n    const [viewDeleyToggle,setViewDeleyToggle]=useState(false);\r\n    // const getMyCroquis = async()=>{\r\n    //     const croquisPost = await dbService.collection(\"Csubmit\")\r\n    //     .where(\"creatorId\",\"==\",userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"desc\")\r\n    //     .get();\r\n    //     console.log(croquisPost.docs.map((doc)=>doc.data()));\r\n    //     setCsubmits(croquisPost.docs.map((doc)=>doc.data()));\r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //     getMyCroquis();\r\n    // },[]);\r\n    useEffect(()=> { \r\n    dbService.collection(\"Csubmit\")\r\n        .where(\"creatorId\",\"==\",userObj.uid)\r\n        .orderBy(\"createdAt\",\"desc\")\r\n        .onSnapshot((snapshot) =>{\r\n        const CsubmitArray = snapshot.docs.map((doc)=>({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        \r\n        setCsubmits(CsubmitArray);\r\n        //console.log(Csubmits);\r\n    });\r\n\r\n\r\n    },[]);\r\n    return (\r\n    <>\r\n        \r\n        <span>Profile</span>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        <div>\r\n          {Csubmits.map((Csubmit)=>(\r\n              \r\n              <CCsubmit \r\n            //   key={Csubmit.id} \r\n              CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} viewsToggle={viewDeleyToggle}  />\r\n              \r\n          ))}\r\n      </div>\r\n        {/* {viewToggle ?(<>\r\n            <button onClick={(e)=>{setViewToggle(false)}}>\r\n          Close Drawings</button>\r\n          \r\n      </>):(<>\r\n        <button onClick={(e)=>{setViewToggle(true)}}>\r\n        \r\n          Show Drawings</button>\r\n      \r\n        </>)} */}\r\n        \r\n       \r\n            {/* <button onClick={(e)=>{setViewToggle(true)}}>\r\n          Close Drawings</button>\r\n          <div>\r\n          {Csubmits.map((Csubmit)=>(\r\n              \r\n              <CCsubmit \r\n            //   key={Csubmit.id} \r\n              CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} viewsToggle={viewToggle}  />\r\n              \r\n          ))}\r\n      </div> */}\r\n         \r\n        \r\n    </>\r\n    \r\n    )\r\n};","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail]= useState(\"\");\r\n    const [password, setPassword]= useState(\"\");\r\n    const [newAccount, setNewAccount]= useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event)=>{\r\n        \r\n        const {target: {name,value}}= event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event)=>{\r\n            event.preventDefault();\r\n            try{\r\n                let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            console.log(data)\r\n        } catch (error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = ()=> setNewAccount(prev => !prev)\r\n    return(\r\n\r\n    <div>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                name=\"email\" \r\n                type={\"email\"} \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email} \r\n                onChange={onChange}/>\r\n            <input name=\"password\" type={\"password\"} placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n            <input type={\"submit\"} value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}> \r\n        {newAccount ? \"Sign In\" : \"Create Account\" }</span>\r\n        <div>\r\n            <button>Continue with Google</button>\r\n            <button>Continue with Github</button>\r\n        </div>\r\n    </div>\r\n    )};\r\n    \r\nexport default Auth;","//import CCsubmit from \"../components/Csubmit\";\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { dbService ,storageService} from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\n\r\n const Home=({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [Line,setLine]= useState([]);\r\n    const canvasRef = useRef();\r\n    const [pinNum,setPinNum]=useState(\"\");\r\n    const [randomPinNum,setRandomPinNum]=useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const [pinID,setPinID]=useState(0);\r\n    const [croquisTime,setCroquisTime]=useState(60);\r\n    \r\n        const [min,setMin]=useState(0);\r\n        const [sec,setSec]=useState(0);\r\n        const time=useRef(croquisTime);\r\n        const timeId=useRef(null);\r\n        const [drawSetting,setDrawSetting]=useState({\r\n            croquisTimeDB:croquisTime,\r\n            brushRadius:1,\r\n            lazyRadius:1,\r\n\r\n\r\n        })\r\n    const [timeSetBottonToggle,setTimeSetBottonToggle]=useState(false);\r\n\r\n\r\n    const getMyCroquisSettings = ()=>{\r\n              dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDrawSetting({\r\n                    brushRadius:doc.data().brushRadius,\r\n                    lazyRadius:doc.data().lazyRadius,})\r\n                    setCroquisTime(doc.data().croquisTimeDB)\r\n                console.log(doc.data())\r\n                \r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such setting document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n    }\r\n    const updateSetting =(event)=>{\r\n        dbService.collection(\"usersetting\").doc(userObj.uid).update({\r\n            brushRadius:drawSetting.brushRadius,\r\n            lazyRadius:drawSetting.lazyRadius,\r\n            croquisTimeDB:drawSetting.croquisTimeDB,\r\n            \r\n            \r\n        });\r\n    }\r\n    const refreshAndSubmit =()=>{\r\n        setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n            //console.log(\"timeout\",randomPinNum[pinID])\r\n            \r\n            time.current=croquisTime;\r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:croquisTime-min*60-sec,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:randomPinNum[pinID]\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n    useEffect(()=> {\r\n        timeId.current= setInterval(()=>{\r\n            setMin(parseInt(time.current/60));\r\n            setSec(time.current % 60);\r\n            time.current -= 1;\r\n        },1000);\r\n        return()=> clearInterval(timeId.current);\r\n    },[]);\r\n\r\n    useEffect(()=> {\r\n        if(time.current<=-1){\r\n            refreshAndSubmit();\r\n            \r\n            \r\n        }\r\n    },[sec]);\r\n\r\n    useEffect(()=> {\r\n      \r\n             \r\n     \r\n       \r\n             dbService.doc(`RefDB/refStrings`).get().then((doc) => {\r\n            if (doc.exists) {\r\n                //console.log(\"Document data:\", doc.data().refUrl);\r\n                //setRandomPinNum(doc.data().refUrl);\r\n                //console.log(\"doc\",doc.data().refUrl)\r\n                const random=doc.data().refUrl.sort(() => Math.random() - 0.5);\r\n                \r\n                \r\n                setRandomPinNum(random);\r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n       \r\n        // dbService.collection(\"Csubmit\").onSnapshot((snapshot) =>{\r\n        //     const CsubmitArray = snapshot.docs.map((doc)=>({\r\n        //         id: doc.id,\r\n        //         ...doc.data(),\r\n        //     }));\r\n            \r\n        //     setCsubmits(CsubmitArray);\r\n        //     //console.log(Csubmits);\r\n        // });\r\n\r\n        getMyCroquisSettings();\r\n\r\n    },[]);\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n        //  const data = canvasRef.current.getSaveData();\r\n        //  canvasRef.current.clear();\r\n     \r\n         \r\n        //  await dbService.collection(\"Csubmit\").add({\r\n        //      text:data,\r\n        //      createdAt: Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //      heart:(0),\r\n        //     //  refPhoto:{refPhoto},\r\n        //      //pinNumber:randomPinNum,\r\n        //  });\r\n        //  setCsubmit(\"\"); \r\n        refreshAndSubmit();\r\n     };\r\n     const onSubmitPinNum= (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(pinNum.match(\",\")){\r\n            \r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n         \r\n            pinNum.split(\",\").forEach(e => {\r\n                console.log(e)\r\n                pinDocRef.update({\r\n                    refUrl:firebase.firestore.FieldValue.arrayUnion(e)\r\n            }); \r\n            \r\n        });\r\n        }else{\r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n            pinDocRef.update({\r\n            refUrl:firebase.firestore.FieldValue.arrayUnion(pinNum)\r\n        });\r\n        }\r\n\r\n        \r\n           \r\n        setPinNum(\"\")\r\n\r\n     }\r\n     const onChange = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setPinNum(value);\r\n     }\r\n     const onChangeTime = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setCroquisTime(value);\r\n         setDrawSetting(prevState=>({...prevState, croquisTimeDB: event.target.value }))\r\n         \r\n     }\r\n\r\n     const onSubmitTime= (event) => {\r\n        event.preventDefault();\r\n        setTimeSetBottonToggle(false)\r\n        \r\n        //setCroquisTime(0)\r\n     }\r\n\r\n     const onClearClick= () => {\r\n        canvasRef.current.clear();\r\n    };\r\n\r\n    function ordinal_suffix_of(i) {\r\n        var j = i % 10,\r\n            k = i % 100;\r\n        if (j == 1 && k != 11) {\r\n            return i + \"st\";\r\n        }\r\n        if (j == 2 && k != 12) {\r\n            return i + \"nd\";\r\n        }\r\n        if (j == 3 && k != 13) {\r\n            return i + \"rd\";\r\n        }\r\n        return i + \"th\";\r\n    }\r\n    function sexagesimal(i) {\r\n        if(i <= 9){\r\n            return \"0\"+i;\r\n        }else{\r\n            return i;\r\n        }\r\n    }\r\n    //  const onChange = (event)=> {\r\n    //      const {\r\n    //          target:{value},\r\n    //      }=event;\r\n    //      setCsubmit(value);\r\n    //  }\r\n\r\n    //  const onSubmitImage= async(event) => {\r\n    //     event.preventDefault();\r\n    //     const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n    //     const response = await fileRef.putString(imageString,\"data_url\");\r\n    //     const imageUrl =await response.ref.getDownloadURL();\r\n    //     setImageString(\"\");\r\n    //  }\r\n    //  const onFileChange= (event)=>{\r\n    //     const {\r\n    //         target:{files}\r\n    //     }= event;\r\n    //     const theFile = files[0];\r\n    //     const reader= new FileReader();\r\n    //     reader.onloadend = (finishedEvent)=>{\r\n    //         const {\r\n    //             currentTarget:{result},\r\n    //         }=finishedEvent;\r\n            \r\n    //         setImageString(result);\r\n    //     }\r\n    //     reader.readAsDataURL(theFile);\r\n    //  }\r\n\r\n  return(\r\n      \r\n<div >\r\n        {/* <PieChart style={{ height: '35px' }}\r\n        data={[{ value: 1, key: 1, color: '#E38627' }]}\r\n        startAngle={-90}\r\n        reveal={-100*(min*60+sec)/croquisTime}\r\n        lineWidth={100}\r\n        // background=\"#f3f3f3\"\r\n        lengthAngle={360}\r\n        /> */}\r\n        <div style={{float:'right'}}>\r\n      {timeSetBottonToggle ?(<>\r\n        <form onSubmit={onSubmitTime} >\r\n          <input value={croquisTime} onChange= {onChangeTime} type={\"number\"}  placeholder=\"Input Croquis Time\"  />\r\n          <input type={\"submit\"} value=\"Set Time\"/>\r\n          \r\n      </form>\r\n      </>):(<>\r\n        {ordinal_suffix_of(pinID+1)}\r\n      <button onClick={(e)=>{setTimeSetBottonToggle(true)}}>\r\n          Set Croquis Time</button>\r\n      \r\n        </>)\r\n        }\r\n        <button onClick={updateSetting}>Update Setting</button>\r\n        </div>\r\n        <div style={{position: 'absolute',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            width:'70px',\r\n            textAlign: 'center',\r\n            \r\n            background:'linear-gradient(to left,#FFC365 '+(min*60+sec)*100/croquisTime+'%,#E8E8E8 '+(min*60+sec)*100/croquisTime+'%)',\r\n            }}>\r\n          {min} : {sexagesimal(sec)} \r\n      </div>\r\n     \r\n      \r\n     \r\n       \r\n      <div >\r\n      <form onSubmit={onSubmitPinNum}>\r\n          <input value={pinNum} onChange= {onChange} type={\"text\"}  placeholder=\"You Can Upload Pinterst Pin By Url Number\"  />\r\n          <input type={\"submit\"} value=\"Upload Pin\"/>\r\n          \r\n      </form>\r\n      \r\n      \r\n        \r\n        \r\n      </div>\r\n      \r\n      \r\n            {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n      <div style={{float:'left'}}>\r\n      <iframe key={pinReload} src={\"https://assets.pinterest.com/ext/embed.html?id=\"+randomPinNum[pinID]} height=\"600\" width=\"400\" frameBorder={0} scrolling=\"no\" ></iframe>\r\n      </div>\r\n      \r\n      <div style={{float:'left'}}>\r\n      <div>\r\n        \r\n      \r\n      \r\n        <div style={{float:'right'}}> \r\n            <label>Lazy-Radius:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" \r\n              max=\"100\"\r\n              style={{ width: \"30px\" }}\r\n              value={drawSetting.lazyRadius}\r\n              onChange={e =>\r\n                setDrawSetting(prevState=>({...prevState, lazyRadius: e.target.value }))\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{float:'right'}}>\r\n            <label>Brush-Radius:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\" \r\n              max=\"100\"\r\n              style={{ width: \"30px\" }}\r\n              value={drawSetting.brushRadius}\r\n              onChange={e =>\r\n                setDrawSetting(prevState=>({...prevState, brushRadius: e.target.value }))\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{float:'right'}}>\r\n          <button onClick={onClearClick}>Clear Canvas</button>\r\n          </div>\r\n          <div style={{float:'right'}}>\r\n        <form onSubmit={onSubmit}>\r\n      \r\n      {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n      <input type={\"submit\"} value=\"Upload Drawing\"/>\r\n       \r\n      </form>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n      <div style={{float:'right'}}>\r\n      <CanvasDraw \r\n        canvasWidth={600}\r\n        canvasHeight={600}\r\n        brushRadius={drawSetting.brushRadius}\r\n        lazyRadius={drawSetting.lazyRadius}\r\n        ref={canvasRef}\r\n      />\r\n      </div>\r\n        </div>\r\n      \r\n     \r\n      \r\n      {/* <form onSubmit={onSubmitImage}>\r\n            <input type={\"file\"} accept=\"image/*\" onChange={onFileChange}/>\r\n            <input type={\"submit\"} value=\"Upload Croquis Images\"/>        \r\n      </form> */}\r\n        \r\n\r\n        \r\n\r\n      \r\n      {/* <div>\r\n          {Csubmits.map((Csubmit)=>(\r\n              <CCsubmit key={Csubmit.id} CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} />\r\n          ))}\r\n      </div> */}\r\n  </div>\r\n  )\r\n };\r\n export default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navigation =() => (\r\n<nav> \r\n    <ul>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/\">Home</Link>\r\n        </li>\r\n        \r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/profile\">My Drawings</Link>\r\n        </li>\r\n\r\n        </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter=({isLoggedIn,userObj}) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn &&<Navigation />}\r\n            <Switch>\r\n                {isLoggedIn ?(\r\n                    <>\r\n                        <Route exact path= \"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/profile\">\r\n                            <Profile userObj={userObj}/>\r\n                        </Route>\r\n                        <Redirect from={\"*\"} to={\"/\"} />\r\n                    </>\r\n                 ) : (\r\n                     <>\r\n                    <Route exact path= \"/\">\r\n                          <Auth /> \r\n                    </Route>\r\n                    <Redirect from={\"*\"} to={\"/\"} />\r\n                    </>\r\n                 )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter; ","\r\nimport { authService } from \"fbase\"; \r\nimport React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"./Router\";  \r\n//import { authService } from \"fbase\"; \r\n\r\nfunction App() {\r\n  const [init,setInit]= useState(false);\r\n  //console.log(authService.currentUser);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj,setUserObj]= useState(null);\r\n  useEffect(()=> {\r\n    \r\n    authService.onAuthStateChanged((user) => {\r\n    if(user){\r\n      setIsLoggedIn(true);\r\n      setUserObj(user);\r\n    }else{\r\n      setIsLoggedIn(false);\r\n    }\r\n    setInit(true);\r\n  });\r\n  }, []);\r\n  return (\r\n    <>\r\n    {init ? (<AppRouter  isLoggedIn= {isLoggedIn} userObj={userObj}/>\r\n    ):( \"Inisializing..\" )}\r\n    </>\r\n  ) \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\n\r\nimport App from './components/App';\r\nimport firebase from \"./fbase\";\r\nimport \"./styles.css\";\r\nconsole.log(firebase)\r\n \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}