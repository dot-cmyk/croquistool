{"version":3,"sources":["fbase.js","routes/Profile.js","routes/Auth.js","coordinateSystem.js","interactionStateMachine.js","makePassiveEventOption.js","canvasDrawIndex.js","drawImage.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storage","Profile","react_default","a","createElement","Fragment","onClick","signOut","Auth","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","newAccount","setNewAccount","_useState7","_useState8","error","setError","onChange","event","_event$target","target","name","value","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","preventDefault","createUserWithEmailAndPassword","sent","signInWithEmailAndPassword","console","log","t0","message","stop","_x","apply","this","arguments","type","placeholder","required","NULL_VIEW_POINT","freeze","x","y","untransformedX","untransformedY","NULL_BOUNDS","canvasWidth","canvasHeight","left","top","right","bottom","viewMin","viewMax","IDENTITY","b","c","d","e","f","CoordinateSystem","_this","scaleExtents","documentSize","classCallCheck","_canvas","_view","scale","_viewChangeListeners","Set","setScale","setView","clampView","_ref2","_this$scaleExtents","min","max","_this$documentSize","width","height","_ref3","canvasRect","maxx","minx","maxy","miny","Math","resetView","view","newView","objectSpread","_this$_view","forEach","listener","scaleAtClientPoint","deltaScale","clientPoint","viewPt","clientPointToViewPoint","clientPtPostScale","viewPointToClientPoint","clientX","clientY","_ref4","length","undefined","_ref5","relativeClientX","relativeClientY","_ref6","_ref7","relativeX","relativeY","attachViewChangeListener","add","_scaleExtents","_documentSize","canvas","_ref8","_ref9","_this$_canvas$getBoun","getBoundingClientRect","SUPPRESS_SCROLL","DefaultState","_this2","handleMouseWheel","canvasDraw","_canvasDraw$props","props","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","ctrlKey","coordSystem","deltaY","clientPointFromEvent","handleDrawStart","PanState","WaitForPinchState","handleDrawMove","_viewPointFromEvent","viewPointFromEvent","lazy","update","handleDrawEnd","_this3","_this4","bind","dragStart","panStart","_clientPointFromEvent","dx","dy","_this5","touches","ScaleOrPanState","DrawingState","clientPt","deferredPoints","push","Date","valueOf","startTimestamp","startClientPoint","abs","issueDeferredPoints","nextState","i","deferredPt","syntheticEvt","SyntheticEvent","_this6","start","getTouchMetrics","scaleStart","_this6$recentMetrics","recentMetrics","centroid","distance","TouchScaleState","TouchPanState","_clientPointFromEvent2","t1x","t1y","_clientPointFromEvent3","t2x","t2y","t1","t2","sqrt","scaleOrPanState","_this7","ref","_ref$recentMetrics","_this8","_ref$recentMetrics2","dScale","_this9","_viewPointFromEvent2","both","_viewPointFromEvent3","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","brush","toObject","drawPoints","brushColor","brushRadius","saveLine","changedTouches","passiveSupported","options","passive","window","addEventListener","removeEventListener","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","CanvasDraw","possibleConstructorReturn","getPrototypeOf","call","undo","lines","slice","erasedLines","pop","clearExceptErasedLines","simulateDrawingLines","immediate","triggerOnChange","eraseAll","toConsumableArray","clear","getSaveData","JSON","stringify","getDataURL","fileType","useBgImage","backgroundColour","canvasToExport","drawing","context","getContext","storedImageData","getImageData","compositeOperation","globalCompositeOperation","imgSrc","drawImage","fillStyle","fillRect","imageData","toDataURL","concat","clearRect","putImageData","loadSaveData","saveData","immediateLoading","Error","_JSON$parse","parse","scaleX","scaleY","scaleAvg","map","line","p","componentWillUnmount","canvasObserver","unobserve","canvasContainer","interface","handleWheel","interactionSM","assertThisInitialized","mouseHasMoved","applyView","ctx","clearWindow","m","transformMatrix","setTransform","deferRedrawOnViewChange","drawGrid","grid","redrawImage","loop","once","handleCanvasResize","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","_entry$contentRect","contentRect","setCanvasSize","temp","err","point","clampLinesToDocument","image","complete","img","w","h","offsetX","offsetY","cx","cy","cw","ch","iw","ih","r","nw","nh","ar","curTime","timeoutGap","loadTimeOffset","_loop","setTimeout","style","lineJoin","lineCap","strokeStyle","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","inClientSpace","valuesChanged","_ref4$once","pointer","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","ctxs","action","save","restore","Image","crossOrigin","onload","src","hideGrid","_this$coordSystem$can","canvasBounds","floor","setLineDash","gridColor","gridLineWidth","hideGridX","countX","gridSizeX","hideGridY","countY","gridSizeY","hideInterface","arc","PI","fill","catenaryColor","catenary","drawToCanvas","chainLength","Catenary","isPressing","zoomExtents","LazyBrush","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","ResizeObserver","observer","observe","initX","initY","prevProps","setRadius","className","background","backgroundColor","touchAction","container","isInterface","key","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","PureComponent","defaultProps","Home","userObj","setCsubmit","setCsubmits","canvasRef","useRef","pinNum","setPinNum","_useState9","_useState10","randomPinNum","setRandomPinNum","_useState11","_useState12","pinReload","setPinreload","_useState13","_useState14","pinID","setPinID","_useState15","_useState16","croquisTime","setCroquisTime","_useState17","_useState18","setMin","_useState19","_useState20","sec","setSec","time","timeId","refreshAndSubmit","current","collection","text","createdAt","now","creatorId","uid","heart","useEffect","setInterval","parseInt","clearInterval","doc","get","then","exists","random","refUrl","sort","catch","onSnapshot","snapshot","CsubmitArray","docs","id","onSubmitPinNum","_callee2","_context2","FieldValue","arrayUnion","_x2","onSubmitTime","_callee3","_context3","_x3","float","frameBorder","scrolling","canvasDrawIndex_CanvasDraw","Navigation","react_router_dom","to","AppRouter","isLoggedIn","components_Navigation","react_router","exact","path","routes_Home","from","routes_Auth","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","Router","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b5f98eb8.chunk.js","sourcesContent":["import   firebase from \"firebase/compat/app\";\r\n\r\n\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\"\r\nconst firebaseConfig = {\r\n    // apiKey: \"AIzaSyDH6rySddl7QAoqkwATwz7CgXrPe7LQis8\",\r\n    // authDomain: \"croquistool.firebaseapp.com\",\r\n    // projectId: \"croquistool\",\r\n    // storageBucket: \"croquistool.appspot.com\",\r\n    // messagingSenderId: \"843301254465\",\r\n    // appId: \"1:843301254465:web:046d03ff7cf7e8619f9dc0\",\r\n    // measurementId: \"G-JT9C23VQFT\"\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\n\r\n  export default firebase.initializeApp(firebaseConfig);\r\n \r\n const authService =  firebase.auth();\r\n const dbService = firebase.firestore();\r\n const storageService = firebase.storage();\r\nexport {firebase, authService,dbService,storageService}","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\n\r\nexport default () => {\r\n    const onLogOutClick = () => authService.signOut();\r\n    return (\r\n    <>\r\n        <span>Profile</span>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n    </>)\r\n};","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail]= useState(\"\");\r\n    const [password, setPassword]= useState(\"\");\r\n    const [newAccount, setNewAccount]= useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event)=>{\r\n        \r\n        const {target: {name,value}}= event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event)=>{\r\n            event.preventDefault();\r\n            try{\r\n                let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            console.log(data)\r\n        } catch (error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = ()=> setNewAccount(prev => !prev)\r\n    return(\r\n\r\n    <div>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                name=\"email\" \r\n                type={\"email\"} \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email} \r\n                onChange={onChange}/>\r\n            <input name=\"password\" type={\"password\"} placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n            <input type={\"submit\"} value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}> \r\n        {newAccount ? \"Sign In\" : \"Create Account\" }</span>\r\n        <div>\r\n            <button>Continue with Google</button>\r\n            <button>Continue with Github</button>\r\n        </div>\r\n    </div>\r\n    )};\r\n    \r\nexport default Auth;","/**\r\n * @type {ViewPoint}\r\n */\r\nconst NULL_VIEW_POINT = Object.freeze({\r\n  x: 0, y: 0, untransformedX: 0, untransformedY: 0\r\n});\r\n\r\n/**\r\n * @type {CanvasBounds}\r\n */\r\nconst NULL_BOUNDS = Object.freeze({\r\n  canvasWidth: 0, canvasHeight: 0,\r\n  left: 0, top: 0, right: 0, bottom: 0,\r\n  viewMin: NULL_VIEW_POINT, viewMax: NULL_VIEW_POINT,\r\n});\r\n\r\n/**\r\n * The identity matrix (a transform that results in view coordinates that are\r\n * identical to relative client coordinates).\r\n * @type {Matrix}\r\n */\r\nexport const IDENTITY = Object.freeze({ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 });\r\n\r\nfunction valueOrDefault(value, defaultValue) {\r\n  if (value === null || (typeof value) === \"undefined\") {\r\n    return defaultValue;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\r\n * canvas.\r\n */\r\nexport default class CoordinateSystem {\r\n  /**\r\n   * @typedef Extents\r\n   * @property {number} min the minimal value in the range\r\n   * @property {number} max the maximal value in the range\r\n   */\r\n\r\n  /**\r\n   * @typedef Size\r\n   * @property {number} width the span of the element's horizontal axis\r\n   * @property {number} height the span of the element's vertical axis\r\n   */\r\n\r\n  /**\r\n   * @param {Object} parameters the initialization parameters for this instance.\r\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\r\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\r\n   */\r\n  constructor({ scaleExtents, documentSize }) {\r\n    this._scaleExtents = scaleExtents;\r\n    this._documentSize = documentSize;\r\n  }\r\n\r\n  /**\r\n   * @type {Extents}\r\n   */\r\n  _scaleExtents;\r\n\r\n  /**\r\n   * @type {Size}\r\n   */\r\n  _documentSize;\r\n\r\n  /**\r\n   * @typedef Canvas\r\n   * @property {number} width the canvas's width\r\n   * @property {number} height the canvas's height\r\n   * @property {() => Object} getBoundingClientRect returns the client bounds\r\n   */\r\n\r\n  /**\r\n   * @type {Canvas}\r\n   * @private\r\n   */\r\n  _canvas = null;\r\n\r\n  /**\r\n   * @typedef View\r\n   * @property {number} scale the zoom factor\r\n   * @property {number} x the current x offset\r\n   * @property {number} y the current y offset\r\n   */\r\n\r\n  /**\r\n   * @type {View}\r\n   * @private\r\n   */\r\n  _view = { scale: 1.0, x: 0, y: 0 };\r\n\r\n  /**\r\n   * Describes a callback function that receives info about view changes\r\n   * @typedef {(update: { view: View, transform: Matrix }) => void} ViewListener\r\n   */\r\n\r\n   /**\r\n    * @type {ViewListener[]}\r\n    * @private\r\n    */\r\n   _viewChangeListeners = new Set();\r\n\r\n  /**\r\n   * @returns {Canvas} the canvas currently associated with this instance.\r\n   */\r\n  get canvas() {\r\n    return this._canvas;\r\n  }\r\n\r\n  /**\r\n   * Updates the canvas for this coordinate system and recalculates the view.\r\n   * @param {Canvas} canvas the new canvas to associate with this instance.\r\n   */\r\n  set canvas(canvas) {\r\n    this._canvas = canvas;\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the current zoom factor\r\n   */\r\n  get scale() {\r\n    return this._view.scale;\r\n  }\r\n\r\n  /**\r\n   * Sets the zoom factor (clamped by the scale extents) and updates the view.\r\n   * @param {number} the new zoom factor\r\n   */\r\n  setScale = (scale) => {\r\n    this.setView({ scale });\r\n  };\r\n\r\n  /**\r\n   * @returns {number} the horizontal component of the current pan offset\r\n   */\r\n  get x() {\r\n    return this._view.x;\r\n  }\r\n\r\n  /**\r\n   * Sets the horizontal pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} x the new offset\r\n   */\r\n  set x(x) {\r\n    this.setView({ x });\r\n  }\r\n\r\n  /**\r\n   * @retruns {number} the vertical component of the current pan offset\r\n   */\r\n  get y() {\r\n    return this._view.y;\r\n  }\r\n\r\n  /**\r\n   * Sets the vertical pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} y the new offset\r\n   */\r\n  set y(y) {\r\n    this.setView({ y });\r\n  }\r\n\r\n  /**\r\n   * @returns {View} a copy of this instance's current view state.\r\n   */\r\n  get view() {\r\n    return { ...this._view };\r\n  }\r\n\r\n  /**\r\n   * @returns {Extents} a copy of the scale extents currently applied to this\r\n   * instance.\r\n   */\r\n  get scaleExtents() {\r\n    return { ...this._scaleExtents };\r\n  }\r\n\r\n  /**\r\n   * Updates the minimum and maximum scale and resets the view transform if it\r\n   * is outside the new extents.\r\n   * @param {Extents} extents the new scale extents.\r\n   */\r\n  set scaleExtents({ min, max }) {\r\n    this._scaleExtents = { min, max };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {Size} the current document size (used to constrain the pan\r\n   * offset).\r\n   */\r\n  get documentSize() {\r\n    return { ...this._documentSize };\r\n  }\r\n\r\n  /**\r\n   * Sets the document size and recalculates the view if it is outside the new\r\n   * bounds.\r\n   * @param {Size} size the new document size.\r\n   */\r\n  set documentSize({ width, height }) {\r\n    this._documentSize = { width, height };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * A view matrix expressing a series of transformations.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n   * @typedef Matrix\r\n   * @property {number} a horizontal scaling factor (1 == unscaled)\r\n   * @property {number} b vertical skewing factor (0 == unskewed)\r\n   * @property {number} c horizontal skewing factor (0 == unskewed)\r\n   * @property {number} d vertical scaling factor (1 == unscaled)\r\n   * @property {number} e horizontal translation (0 == untranslated)\r\n   * @property {number} f vertical translation (0 == untranslated)\r\n   */\r\n\r\n  /**\r\n   * @returns {Matrix} this coordinate system's current transformation matrix\r\n   */\r\n  get transformMatrix() {\r\n    //\r\n    return {\r\n      a: this._view.scale, // horizontal scaling\r\n      b: 0, // vertical skewing\r\n      c: 0, // horizontal skewing\r\n      d: this._view.scale, // vertical scaling\r\n      e: this._view.x,\r\n      f: this._view.y,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * An object expressing the bounds of a canvas object in terms of the\r\n   * coordinate system.\r\n   * @typedef CanvasBounds\r\n   * @property {number} left the left edge of the canvas in client space\r\n   * @property {number} right the right edge of the canvas in client space\r\n   * @property {number} top the top edge of the canvas in client space\r\n   * @property {number} bottom the bottom edge of the canvas in client space\r\n   * @property {number} canvasWidth the width of the canvas in client space\r\n   * @property {number} canvasHeight the height of the canvas in client space\r\n   * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\r\n   * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\r\n   */\r\n\r\n  /**\r\n   * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\r\n   * this coordinate system, or undefined if no canvas is set.\r\n   */\r\n  get canvasBounds() {\r\n    if (this._canvas) {\r\n      const { left, top, right, bottom } = this._canvas.getBoundingClientRect();\r\n      return {\r\n        viewMin: this.clientPointToViewPoint({ clientX: left, clientY: top }),\r\n        viewMax: this.clientPointToViewPoint({ clientX: right, clientY: bottom }),\r\n        left, top, right, bottom,\r\n        canvasWidth: this._canvas.width,\r\n        canvasHeight: this._canvas.height,\r\n      };\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {{left: number, top: number} | undefined}\r\n   */\r\n  get canvasRect() {\r\n    if (this.canvas) {\r\n      return this.canvas.getBoundingClientRect();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates a variant of the given view clamped according to the scale and\r\n   * document bounds. Does not modify this instance.\r\n   * @param {View} view the view constraints to clamp.\r\n   * @returns {View} a new view object representing the constrained input.\r\n   */\r\n  clampView = ({ scale, x, y }) => {\r\n    const { min, max } = this.scaleExtents;\r\n    const { width, height } = this.documentSize;\r\n    const { left, top, right, bottom } = this.canvasRect || NULL_BOUNDS;\r\n\r\n    const canvasWidth = right - left;\r\n    const canvasHeight = bottom - top;\r\n\r\n    const maxx = canvasWidth / 2;\r\n    const minx = -(width * this._view.scale - canvasWidth / 2);\r\n    const maxy = canvasHeight / 2;\r\n    const miny = -(height * this._view.scale - canvasHeight / 2);\r\n\r\n    // Clamp values to acceptible range.\r\n    return {\r\n      scale: Math.min(Math.max(scale, min), max),\r\n      x: Math.min(Math.max(x, minx), maxx),\r\n      y: Math.min(Math.max(y, miny), maxy),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resets the view transform to its default state.\r\n   */\r\n  resetView = () => {\r\n    this.setView({ scale: 1.0, x: 0, y: 0 });\r\n  };\r\n\r\n  /**\r\n   * Updates the view, ensuring that it is within the document and scale bounds.\r\n   * @param {View} view\r\n   *    the new view state. Any view property not specified will remain\r\n   *    unchanged.\r\n   * @return {View}\r\n   *    a copy of the view state after having been constrained and applied.\r\n   */\r\n  setView = (view) => {\r\n    const newView = this.clampView({ ...this._view, ...(view || {}) });\r\n    const { scale, x, y } = this._view;\r\n\r\n    // Only trigger if the view actually changed.\r\n    if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\r\n      this._view = newView;\r\n      this._viewChangeListeners.forEach(listener => listener && listener(newView));\r\n    }\r\n\r\n    return { ...this._view };\r\n  };\r\n\r\n  /**\r\n   * Updates the current view scale while attempting to keep the given point\r\n   * fixed within the canvas.\r\n   *\r\n   * @param {number} deltaScale the amount by which to change the current scale factor.\r\n   * @param {ClientPoint} clientPoint the origin of the zoom, in client space.\r\n   *\r\n   * @returns {View} the newly computed view.\r\n   */\r\n  scaleAtClientPoint = (deltaScale, clientPoint) => {\r\n    const viewPt = this.clientPointToViewPoint(clientPoint);\r\n    const newView = this.clampView({ ...this._view, scale: this._view.scale + deltaScale });\r\n    const clientPtPostScale = this.viewPointToClientPoint(viewPt, newView);\r\n\r\n    newView.x = this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\r\n    newView.y = this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\r\n\r\n    return this.setView(newView);\r\n  };\r\n\r\n  /**\r\n   * Describes a point in view space (client space after the viewport transform\r\n   * has been applied).\r\n   * @typedef ViewPoint\r\n   * @property {number} x\r\n   *    the x-coordinate in view space\r\n   * @property {number} y\r\n   *    the y-coordinate in view space\r\n   * @property {number} relativeClientX\r\n   *    the x-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   * @property {number} relativeClientY\r\n   *    the y-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   */\r\n\r\n  /**\r\n   * @param {ClientPoint} point the point to transform in client space\r\n   * @param {View} view the view transform to apply (defaults to the current view)\r\n   * @returns {ViewPoint} the result of converting the given client coordinate\r\n   * to view space. If there is no canvas set, a top-left corner of (0, 0) is\r\n   * assumed.\r\n   */\r\n  clientPointToViewPoint = ({ clientX, clientY }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeClientX = clientX - left;\r\n    const relativeClientY = clientY - top;\r\n\r\n    return {\r\n      x: (relativeClientX - view.x) / view.scale,\r\n      y: (relativeClientY - view.y) / view.scale,\r\n      relativeClientX,\r\n      relativeClientY,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @typedef ClientPoint\r\n   * @property {number} clientX\r\n   *    the x-coordinate in client space\r\n   * @property {number} clientY\r\n   *    the y-coordinate in client space\r\n   * @property {number} x\r\n   *    an alias for clientX\r\n   * @property {number} y\r\n   *    an alias for clientY\r\n   * @property {number} relativeX\r\n   *    the x-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   * @property {number} relativeY\r\n   *    the y-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   */\r\n\r\n   /**\r\n    * @param {ViewPoint} point the point to transform in view space\r\n    * @param {number} point.x the point's x-coordinate\r\n    * @param {number} point.y the point's y-coordinate\r\n    * @param {View} view the view transform to apply (defaults to the current view)\r\n    * @returns {ClientPoint} the result of converting the given coordinate to\r\n    * client space. If there is no canvas set, a top-left corner of (0, 0) is\r\n    * assumed.\r\n    */\r\n  viewPointToClientPoint = ({ x, y }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeX = x * view.scale + view.x;\r\n    const relativeY = y * view.scale + view.y;\r\n    const clientX = relativeX + left;\r\n    const clientY = relativeY + top;\r\n\r\n    return { clientX, clientY, relativeX, relativeY, x: clientX, y: clientY };\r\n  };\r\n\r\n  /**\r\n   * Adds a new callback function that will be invoked each time the view\r\n   * transform changes.\r\n   * @param {ViewListener} listener the callback to execute.\r\n   */\r\n  attachViewChangeListener = (listener) => {\r\n    this._viewChangeListeners.add(listener);\r\n  };\r\n}\r\n","const TOUCH_SLOP = 10;\r\nconst PINCH_TIMEOUT_MS = 250;\r\nconst SUPPRESS_SCROLL = (e) => {\r\n  // No zooming while drawing, but we'll cancel the scroll event.\r\n  e.preventDefault();\r\n  return this;\r\n};\r\n\r\n/**\r\n * The default state for the interaction state machine. Supports zoom and\r\n * initiating pan and drawing actions.\r\n */\r\nexport class DefaultState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    const { disabled, enablePanAndZoom, mouseZoomFactor } = canvasDraw.props;\r\n    if (disabled ) {\r\n      return new DisabledState();\r\n    } else if (enablePanAndZoom && e.ctrlKey) {\r\n      e.preventDefault();\r\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\r\n    }\r\n    return this;\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\r\n      return (new PanState()).handleDrawStart(e, canvasDraw);\r\n    } else {\r\n      return (new WaitForPinchState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else {\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y });\r\n      return this;\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    return canvasDraw.props.disabled ? (new DisabledState()) : this;\r\n  };\r\n};\r\n\r\n/**\r\n * This state is used as long as the disabled prop is active. It ignores all\r\n * events and doesn't prevent default actions. The disabled state can only be\r\n * triggered from the default state (i.e., while no action is actively being\r\n * performed).\r\n */\r\nexport class DisabledState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleMouseWheel(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawMove(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawEnd(e, canvasDraw);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This state is active as long as the user is panning the image. This state is\r\n * retained until the pan ceases.\r\n */\r\nexport class PanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    this.dragStart = clientPointFromEvent(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { clientX, clientY } = clientPointFromEvent(e);\r\n    const dx = clientX - this.dragStart.clientX;\r\n    const dy = clientY - this.dragStart.clientY;\r\n    canvasDraw.coordSystem.setView({ x: this.panStart.x + dx, y: this.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user has initiated the drawing action but has\r\n * not yet created any lines. We use this state to try and detect a second touch\r\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\r\n * or movement happens without a second touch.\r\n */\r\nexport class WaitForPinchState {\r\n  constructor() {\r\n    this.startClientPoint = null;\r\n    this.startTimestamp = (new Date()).valueOf();\r\n    this.deferredPoints = [];\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart  = (e, canvasDraw) => {\r\n    const { enablePanAndZoom } = canvasDraw.props;\r\n    e.preventDefault();\r\n\r\n    // We're going to transition immediately into lazy-drawing mode if\r\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\r\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\r\n      return (new DrawingState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    // If we already have two touch events, we can move straight into pinch/pan\r\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // If we have two touches, move to pinch/pan (we don't have to recheck\r\n    // whether zoom is enabled because that happend in draw start).\r\n    if (e.touches && e.touches.length >= 2) {\r\n      // Use the start draw to handler to transition.\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    const clientPt = clientPointFromEvent(e);\r\n    this.deferredPoints.push(clientPt);\r\n\r\n    // If we've already moved far enough, or if enough time has passed, give up\r\n    // and switch over to drawing.\r\n    if ((new Date()).valueOf() - this.startTimestamp < PINCH_TIMEOUT_MS) {\r\n      if (this.startClientPoint === null) {\r\n        this.startClientPoint = clientPt;\r\n      }\r\n\r\n      // Note that we're using \"manhattan distance\" rather than computing a\r\n      // hypotenuse here as a cheap approximation\r\n      const d =\r\n        Math.abs(clientPt.clientX - this.startClientPoint.clientX)\r\n        + Math.abs(clientPt.clientY - this.startClientPoint.clientY);\r\n\r\n      if (d < TOUCH_SLOP) {\r\n        // We're not ready to give up yet.\r\n        return this;\r\n      }\r\n    }\r\n\r\n    // Okay, give up and start drawing.\r\n    return this.issueDeferredPoints(canvasDraw);\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    // The user stopped drawing before we decided what to do. Just treat this as\r\n    // if they were drawing all along.\r\n    return this.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\r\n  };\r\n\r\n  issueDeferredPoints = (canvasDraw) => {\r\n    // Time to give up. Play our deferred points out to the drawing state.\r\n    // The first point will have been a start draw.\r\n    let nextState = new DrawingState();\r\n    for (let i = 0; i < this.deferredPoints.length; i++) {\r\n      const deferredPt = this.deferredPoints[i];\r\n      const syntheticEvt = new SyntheticEvent(deferredPt);\r\n      const func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\r\n      nextState = func(syntheticEvt, canvasDraw);\r\n    }\r\n    return nextState;\r\n  };\r\n}\r\n\r\n/**\r\n * This state is active when the user has added at least two touch points but we\r\n * don't yet know if they intend to pan or zoom.\r\n */\r\nexport class ScaleOrPanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n    this.start = this.getTouchMetrics(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n    this.scaleStart = canvasDraw.coordSystem.scale;\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const { centroid, distance } = this.recentMetrics = this.getTouchMetrics(e);\r\n\r\n    // Switch to scaling?\r\n    const dd = Math.abs(distance - this.start.distance);\r\n    if (dd >= TOUCH_SLOP) {\r\n      return new TouchScaleState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Switch to panning?\r\n    const dx = centroid.clientX - this.start.centroid.clientX;\r\n    const dy = centroid.clientY - this.start.centroid.clientY;\r\n    const dc = Math.abs(dx) + Math.abs(dy);\r\n    if (dc >= TOUCH_SLOP) {\r\n      return new TouchPanState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Not enough movement yet\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n\r\n  getTouchMetrics = (e) => {\r\n    const { clientX: t1x, clientY: t1y } = clientPointFromEvent(e.touches[0]);\r\n    const { clientX: t2x, clientY: t2y } = clientPointFromEvent(e.touches[1]);\r\n\r\n    const dx = t2x - t1x;\r\n    const dy = t2y - t1y;\r\n\r\n    return {\r\n      t1: { clientX: t1x, clientY: t1y },\r\n      t2: { clientX: t2x, clientY: t2y },\r\n      distance: Math.sqrt(dx * dx + dy * dy),\r\n      centroid: { clientX: (t1x + t2x) / 2.0, clientY: (t1y + t2y) / 2.0 },\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to pan the image.\r\n */\r\nexport class TouchPanState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const dx = centroid.clientX - ref.start.centroid.clientX;\r\n    const dy = centroid.clientY - ref.start.centroid.clientY;\r\n\r\n    canvasDraw.setView({ x: ref.panStart.x + dx, y: ref.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to scale the drawing.\r\n */\r\nexport class TouchScaleState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const targetScale = ref.scaleStart * (distance / ref.start.distance);\r\n    const dScale = targetScale - canvasDraw.coordSystem.scale;\r\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user is drawing.\r\n */\r\nexport class DrawingState {\r\n  constructor() {\r\n    this.isDrawing = false;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    if (e.touches && e.touches.length) {\r\n      // on touch, set catenary position to touch pos\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y }, { both: true });\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n    canvasDraw.lazy.update({ x, y });\r\n    const isDisabled = !canvasDraw.lazy.isEnabled();\r\n\r\n    if (!this.isDrawing || isDisabled) {\r\n      // Start drawing and add point\r\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n      this.isDrawing = true;\r\n    }\r\n\r\n    // Add new point\r\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n\r\n    // Draw current points\r\n    canvasDraw.drawPoints({\r\n      points: canvasDraw.points,\r\n      brushColor: canvasDraw.props.brushColor,\r\n      brushRadius: canvasDraw.props.brushRadius\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // Draw to this end pos\r\n    this.handleDrawMove(e, canvasDraw);\r\n    canvasDraw.saveLine();\r\n\r\n    return new DefaultState();\r\n  };\r\n}\r\n\r\nexport class SyntheticEvent {\r\n  constructor({ clientX, clientY }) {\r\n    this.clientX = clientX;\r\n    this.clientY = clientY;\r\n    this.touches = [ { clientX, clientY } ];\r\n  }\r\n\r\n  preventDefault = () => {};\r\n}\r\n\r\nexport function clientPointFromEvent(e) {\r\n  // use cursor pos as default\r\n  let clientX = e.clientX;\r\n  let clientY = e.clientY;\r\n\r\n  // use first touch if available\r\n  if (e.changedTouches && e.changedTouches.length > 0) {\r\n    clientX = e.changedTouches[0].clientX;\r\n    clientY = e.changedTouches[0].clientY;\r\n  }\r\n\r\n  return { clientX, clientY };\r\n}\r\n\r\nexport function viewPointFromEvent(coordSystem, e) {\r\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\r\n}\r\n","// Determines if the browser supprots passive events\r\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\nlet passiveSupported = false;\r\ntry {\r\n  const options = {\r\n    get passive() {\r\n      passiveSupported = true;\r\n      return false; \r\n    }\r\n  };\r\n  window.addEventListener(\"test\", options, options);\r\n  window.removeEventListener(\"test\", options, options);\r\n} catch(e) {\r\n  passiveSupported = false;\r\n}\r\n\r\nexport default function makePassiveEventOption(passive) {\r\n  return passiveSupported ? { passive } : passive;\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyBrush } from \"lazy-brush\";\r\nimport { Catenary } from \"catenary-curve\";\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\r\nimport drawImage from \"./drawImage\";\r\nimport { DefaultState } from \"./interactionStateMachine\";\r\nimport makePassiveEventOption from \"./makePassiveEventOption\";\r\n\r\nfunction midPointBtw(p1, p2) {\r\n  return {\r\n    x: p1.x + (p2.x - p1.x) / 2,\r\n    y: p1.y + (p2.y - p1.y) / 2,\r\n  };\r\n}\r\n\r\nconst canvasStyle = {\r\n  display: \"block\",\r\n  position: \"absolute\",\r\n};\r\n\r\n// The order of these is important: grid > drawing > temp > interface\r\nconst canvasTypes = [\"grid\", \"drawing\", \"temp\", \"interface\"];\r\n\r\nconst dimensionsPropTypes = PropTypes.oneOfType([\r\n  PropTypes.number,\r\n  PropTypes.string,\r\n]);\r\n\r\nconst boundsProp = PropTypes.shape({\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default class CanvasDraw extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    loadTimeOffset: PropTypes.number,\r\n    lazyRadius: PropTypes.number,\r\n    brushRadius: PropTypes.number,\r\n    brushColor: PropTypes.string,\r\n    catenaryColor: PropTypes.string,\r\n    gridColor: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    hideGrid: PropTypes.bool,\r\n    canvasWidth: dimensionsPropTypes,\r\n    canvasHeight: dimensionsPropTypes,\r\n    disabled: PropTypes.bool,\r\n    imgSrc: PropTypes.string,\r\n    saveData: PropTypes.string,\r\n    immediateLoading: PropTypes.bool,\r\n    hideInterface: PropTypes.bool,\r\n    gridSizeX: PropTypes.number,\r\n    gridSizeY: PropTypes.number,\r\n    gridLineWidth: PropTypes.number,\r\n    hideGridX: PropTypes.bool,\r\n    hideGridY: PropTypes.bool,\r\n    enablePanAndZoom: PropTypes.bool,\r\n    mouseZoomFactor: PropTypes.number,\r\n    zoomExtents: boundsProp,\r\n    clampLinesToDocument: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChange: null,\r\n    loadTimeOffset: 5,\r\n    lazyRadius: 12,\r\n    brushRadius: 10,\r\n    brushColor: \"#444\",\r\n    catenaryColor: \"#0a0302\",\r\n    gridColor: \"rgba(150,150,150,0.17)\",\r\n    backgroundColor: \"#FFF\",\r\n    hideGrid: false,\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false,\r\n    imgSrc: \"\",\r\n    saveData: \"\",\r\n    immediateLoading: false,\r\n    hideInterface: false,\r\n    gridSizeX: 25,\r\n    gridSizeY: 25,\r\n    gridLineWidth: 0.5,\r\n    hideGridX: false,\r\n    hideGridY: false,\r\n    enablePanAndZoom: false,\r\n    mouseZoomFactor: 0.01,\r\n    zoomExtents: { min: 0.33, max: 3 },\r\n    clampLinesToDocument: false,\r\n  };\r\n\r\n  ///// public API /////////////////////////////////////////////////////////////\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvas = {};\r\n    this.ctx = {};\r\n\r\n    this.catenary = new Catenary();\r\n\r\n    this.points = [];\r\n    this.lines = [];\r\n    this.erasedLines = [];\r\n\r\n    this.mouseHasMoved = true;\r\n    this.valuesChanged = true;\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n    this.deferRedrawOnViewChange = false;\r\n\r\n    this.interactionSM = new DefaultState();\r\n    this.coordSystem = new CoordinateSystem({\r\n      scaleExtents: props.zoomExtents,\r\n      documentSize: { width: props.canvasWidth, height: props.canvasHeight },\r\n    });\r\n    this.coordSystem.attachViewChangeListener(this.applyView.bind(this));\r\n  }\r\n\r\n  undo = () => {\r\n    let lines = [];\r\n    if (this.lines.length) {\r\n      lines = this.lines.slice(0, -1);\r\n    } else if (this.erasedLines.length) {\r\n      lines = this.erasedLines.pop();\r\n    }\r\n    this.clearExceptErasedLines();\r\n    this.simulateDrawingLines({ lines, immediate: true });\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  eraseAll = () => {\r\n    this.erasedLines.push([...this.lines]);\r\n    this.clearExceptErasedLines();\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  clear = () => {\r\n    this.erasedLines = [];\r\n    this.clearExceptErasedLines();\r\n    this.resetView();\r\n  };\r\n\r\n  resetView = () => {\r\n    return this.coordSystem.resetView();\r\n  };\r\n\r\n  setView = (view) => {\r\n    return this.coordSystem.setView(view);\r\n  };\r\n\r\n  getSaveData = () => {\r\n    // Construct and return the stringified saveData object\r\n    return JSON.stringify({\r\n      lines: this.lines,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Combination of work by Ernie Arrowsmith and emizz\r\n   * References:\r\n   * https://stackoverflow.com/questions/32160098/change-html-canvas-black-background-to-white-background-when-creating-jpg-image\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n\r\n   * This function will export the canvas to a data URL, which can subsequently be used to share or manipulate the image file.\r\n   * @param {string} fileType Specifies the file format to export to. Note: should only be the file type, not the \"image/\" prefix.\r\n   *  For supported types see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n   * @param {bool} useBgImage Specifies whether the canvas' current background image should also be exported. Default is false.\r\n   * @param {string} backgroundColour The desired background colour hex code, e.g. \"#ffffff\" for white.\r\n   */\r\n  getDataURL = (fileType, useBgImage, backgroundColour) => {\r\n    // Get a reference to the \"drawing\" layer of the canvas\r\n    let canvasToExport = this.canvas.drawing;\r\n\r\n    let context = canvasToExport.getContext(\"2d\");\r\n\r\n    //cache height and width\r\n    let width = canvasToExport.width;\r\n    let height = canvasToExport.height;\r\n\r\n    //get the current ImageData for the canvas\r\n    let storedImageData = context.getImageData(0, 0, width, height);\r\n\r\n    //store the current globalCompositeOperation\r\n    var compositeOperation = context.globalCompositeOperation;\r\n\r\n    //set to draw behind current content\r\n    context.globalCompositeOperation = \"destination-over\";\r\n\r\n    // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\r\n    if (useBgImage) {\r\n      if (!this.props.imgSrc) return \"Background image source not set\";\r\n\r\n      // Write the background image\r\n      this.drawImage();\r\n    } else if (backgroundColour != null) {\r\n      //set background color\r\n      context.fillStyle = backgroundColour;\r\n\r\n      //fill entire canvas with background colour\r\n      context.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    // If the file type has not been specified, default to PNG\r\n    if (!fileType) fileType = \"png\";\r\n\r\n    // Export the canvas to data URL\r\n    let imageData = canvasToExport.toDataURL(`image/${fileType}`);\r\n\r\n    //clear the canvas\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    //restore it with original / cached ImageData\r\n    context.putImageData(storedImageData, 0, 0);\r\n\r\n    //reset the globalCompositeOperation to what it was\r\n    context.globalCompositeOperation = compositeOperation;\r\n\r\n    return imageData;\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\r\n    if (typeof saveData !== \"string\") {\r\n      throw new Error(\"saveData needs to be of type string!\");\r\n    }\r\n\r\n    const { lines, width, height } = JSON.parse(saveData);\r\n\r\n    if (!lines || typeof lines.push !== \"function\") {\r\n      throw new Error(\"saveData.lines needs to be an array!\");\r\n    }\r\n\r\n    this.clear();\r\n\r\n    if (\r\n      width === this.props.canvasWidth &&\r\n      height === this.props.canvasHeight\r\n    ) {\r\n      this.simulateDrawingLines({\r\n        lines,\r\n        immediate,\r\n      });\r\n    } else {\r\n      // we need to rescale the lines based on saved & current dimensions\r\n      const scaleX = this.props.canvasWidth / width;\r\n      const scaleY = this.props.canvasHeight / height;\r\n      const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n      this.simulateDrawingLines({\r\n        lines: lines.map((line) => ({\r\n          ...line,\r\n          points: line.points.map((p) => ({\r\n            x: p.x * scaleX,\r\n            y: p.y * scaleY,\r\n          })),\r\n          brushRadius: line.brushRadius * scaleAvg,\r\n        })),\r\n        immediate,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///// private API ////////////////////////////////////////////////////////////\r\n\r\n  ///// React Lifecycle\r\n\r\n  componentDidMount() {\r\n    this.lazy = new LazyBrush({\r\n      radius: this.props.lazyRadius * window.devicePixelRatio,\r\n      enabled: true,\r\n      initialPoint: {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2,\r\n      },\r\n    });\r\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n\r\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\r\n      this.handleCanvasResize(entries, observer)\r\n    );\r\n    this.canvasObserver.observe(this.canvasContainer);\r\n\r\n    this.drawImage();\r\n    this.loop();\r\n\r\n    window.setTimeout(() => {\r\n      const initX = window.innerWidth / 2;\r\n      const initY = window.innerHeight / 2;\r\n      this.lazy.update(\r\n        { x: initX - this.chainLength / 4, y: initY },\r\n        { both: true }\r\n      );\r\n      this.lazy.update(\r\n        { x: initX + this.chainLength / 4, y: initY },\r\n        { both: false }\r\n      );\r\n      this.mouseHasMoved = true;\r\n      this.valuesChanged = true;\r\n      this.clearExceptErasedLines();\r\n\r\n      // Load saveData from prop if it exists\r\n      if (this.props.saveData) {\r\n        this.loadSaveData(this.props.saveData);\r\n      }\r\n    }, 100);\r\n\r\n    // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\r\n    // This is necessary to prevent the default event action on chrome.\r\n    // https://github.com/facebook/react/issues/14856\r\n    this.canvas.interface &&\r\n      this.canvas.interface.addEventListener(\r\n        \"wheel\",\r\n        this.handleWheel,\r\n        makePassiveEventOption()\r\n      );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\r\n      // Set new lazyRadius values\r\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\r\n    }\r\n\r\n    if (prevProps.saveData !== this.props.saveData) {\r\n      this.loadSaveData(this.props.saveData);\r\n    }\r\n\r\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\r\n      // Signal this.loop function that values changed\r\n      this.valuesChanged = true;\r\n    }\r\n\r\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\r\n    if (!this.props.enablePanAndZoom) {\r\n      this.coordSystem.resetView();\r\n    }\r\n\r\n    if (prevProps.imgSrc !== this.props.imgSrc) {\r\n      this.drawImage();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.canvasObserver.unobserve(this.canvasContainer);\r\n    this.canvas.interface &&\r\n      this.canvas.interface.removeEventListener(\"wheel\", this.handleWheel);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"block\",\r\n          background: this.props.backgroundColor,\r\n          touchAction: \"none\",\r\n          width: this.props.canvasWidth,\r\n          height: this.props.canvasHeight,\r\n          ...this.props.style,\r\n        }}\r\n        ref={(container) => {\r\n          if (container) {\r\n            this.canvasContainer = container;\r\n          }\r\n        }}\r\n      >\r\n        {canvasTypes.map((name) => {\r\n          const isInterface = name === \"interface\";\r\n          return (\r\n            <canvas\r\n              key={name}\r\n              ref={(canvas) => {\r\n                if (canvas) {\r\n                  this.canvas[name] = canvas;\r\n                  this.ctx[name] = canvas.getContext(\"2d\");\r\n                  if (isInterface) {\r\n                    this.coordSystem.canvas = canvas;\r\n                  }\r\n                }\r\n              }}\r\n              style={{ ...canvasStyle }}\r\n              onMouseDown={isInterface ? this.handleDrawStart : undefined}\r\n              onMouseMove={isInterface ? this.handleDrawMove : undefined}\r\n              onMouseUp={isInterface ? this.handleDrawEnd : undefined}\r\n              onMouseOut={isInterface ? this.handleDrawEnd : undefined}\r\n              onTouchStart={isInterface ? this.handleDrawStart : undefined}\r\n              onTouchMove={isInterface ? this.handleDrawMove : undefined}\r\n              onTouchEnd={isInterface ? this.handleDrawEnd : undefined}\r\n              onTouchCancel={isInterface ? this.handleDrawEnd : undefined}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ///// Event Handlers\r\n\r\n  handleWheel = (e) => {\r\n    this.interactionSM = this.interactionSM.handleMouseWheel(e, this);\r\n  };\r\n\r\n  handleDrawStart = (e) => {\r\n    this.interactionSM = this.interactionSM.handleDrawStart(e, this);\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleDrawMove = (e) => {\r\n    this.interactionSM = this.interactionSM.handleDrawMove(e, this);\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleDrawEnd = (e) => {\r\n    this.interactionSM = this.interactionSM.handleDrawEnd(e, this);\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  applyView = () => {\r\n    if (!this.ctx.drawing) {\r\n      return;\r\n    }\r\n\r\n    canvasTypes\r\n      .map((name) => this.ctx[name])\r\n      .forEach((ctx) => {\r\n        this.clearWindow(ctx);\r\n        const m = this.coordSystem.transformMatrix;\r\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\r\n      });\r\n\r\n    if (!this.deferRedrawOnViewChange) {\r\n      this.drawGrid(this.ctx.grid);\r\n      this.redrawImage();\r\n      this.loop({ once: true });\r\n\r\n      const lines = this.lines;\r\n      this.lines = [];\r\n      this.simulateDrawingLines({ lines, immediate: true });\r\n    }\r\n  };\r\n\r\n  handleCanvasResize = (entries) => {\r\n    const saveData = this.getSaveData();\r\n    this.deferRedrawOnViewChange = true;\r\n    try {\r\n      for (const entry of entries) {\r\n        const { width, height } = entry.contentRect;\r\n        this.setCanvasSize(this.canvas.interface, width, height);\r\n        this.setCanvasSize(this.canvas.drawing, width, height);\r\n        this.setCanvasSize(this.canvas.temp, width, height);\r\n        this.setCanvasSize(this.canvas.grid, width, height);\r\n\r\n        this.coordSystem.documentSize = { width, height };\r\n        this.drawGrid(this.ctx.grid);\r\n        this.drawImage();\r\n        this.loop({ once: true });\r\n      }\r\n      this.loadSaveData(saveData, true);\r\n    } finally {\r\n      this.deferRedrawOnViewChange = false;\r\n    }\r\n  };\r\n\r\n  ///// Helpers\r\n\r\n  clampPointToDocument = (point) => {\r\n    if (this.props.clampLinesToDocument) {\r\n      return {\r\n        x: Math.max(Math.min(point.x, this.props.canvasWidth), 0),\r\n        y: Math.max(Math.min(point.y, this.props.canvasHeight), 0),\r\n      };\r\n    } else {\r\n      return point;\r\n    }\r\n  };\r\n\r\n  redrawImage = () => {\r\n    this.image &&\r\n      this.image.complete &&\r\n      drawImage({ ctx: this.ctx.grid, img: this.image });\r\n  };\r\n\r\n  simulateDrawingLines = ({ lines, immediate }) => {\r\n    // Simulate live-drawing of the loaded lines\r\n    // TODO use a generator\r\n    let curTime = 0;\r\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\r\n\r\n    lines.forEach((line) => {\r\n      const { points, brushColor, brushRadius } = line;\r\n\r\n      // Draw all at once if immediate flag is set, instead of using setTimeout\r\n      if (immediate) {\r\n        // Draw the points\r\n        this.drawPoints({\r\n          points,\r\n          brushColor,\r\n          brushRadius,\r\n        });\r\n\r\n        // Save line with the drawn points\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n        return;\r\n      }\r\n\r\n      // Use timeout to draw\r\n      for (let i = 1; i < points.length; i++) {\r\n        curTime += timeoutGap;\r\n        window.setTimeout(() => {\r\n          this.drawPoints({\r\n            points: points.slice(0, i + 1),\r\n            brushColor,\r\n            brushRadius,\r\n          });\r\n        }, curTime);\r\n      }\r\n\r\n      curTime += timeoutGap;\r\n      window.setTimeout(() => {\r\n        // Save this line with its props instead of this.props\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n      }, curTime);\r\n    });\r\n  };\r\n\r\n  setCanvasSize = (canvas, width, height) => {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width;\r\n    canvas.style.height = height;\r\n  };\r\n\r\n  drawPoints = ({ points, brushColor, brushRadius }) => {\r\n    this.ctx.temp.lineJoin = \"round\";\r\n    this.ctx.temp.lineCap = \"round\";\r\n    this.ctx.temp.strokeStyle = brushColor;\r\n\r\n    this.clearWindow(this.ctx.temp);\r\n    this.ctx.temp.lineWidth = brushRadius * 2;\r\n\r\n    let p1 = points[0];\r\n    let p2 = points[1];\r\n\r\n    this.ctx.temp.moveTo(p2.x, p2.y);\r\n    this.ctx.temp.beginPath();\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      // we pick the point between pi+1 & pi+2 as the\r\n      // end point and p1 as our control point\r\n      var midPoint = midPointBtw(p1, p2);\r\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      p1 = points[i];\r\n      p2 = points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    this.ctx.temp.lineTo(p1.x, p1.y);\r\n    this.ctx.temp.stroke();\r\n  };\r\n\r\n  saveLine = ({ brushColor, brushRadius } = {}) => {\r\n    if (this.points.length < 2) return;\r\n\r\n    // Save as new line\r\n    this.lines.push({\r\n      points: [...this.points],\r\n      brushColor: brushColor || this.props.brushColor,\r\n      brushRadius: brushRadius || this.props.brushRadius,\r\n    });\r\n\r\n    // Reset points array\r\n    this.points.length = 0;\r\n\r\n    // Copy the line to the drawing canvas\r\n    this.inClientSpace([this.ctx.drawing, this.ctx.temp], () => {\r\n      this.ctx.drawing.drawImage(\r\n        this.canvas.temp,\r\n        0,\r\n        0,\r\n        this.canvas.drawing.width,\r\n        this.canvas.drawing.height\r\n      );\r\n    });\r\n\r\n    // Clear the temporary line-drawing canvas\r\n    this.clearWindow(this.ctx.temp);\r\n\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  triggerOnChange = () => {\r\n    this.props.onChange && this.props.onChange(this);\r\n  };\r\n\r\n  clearWindow = (ctx) => {\r\n    this.inClientSpace([ctx], () =>\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    );\r\n  };\r\n\r\n  clearExceptErasedLines = () => {\r\n    this.lines = [];\r\n    this.valuesChanged = true;\r\n    this.clearWindow(this.ctx.drawing);\r\n    this.clearWindow(this.ctx.temp);\r\n  };\r\n\r\n  loop = ({ once = false } = {}) => {\r\n    if (this.mouseHasMoved || this.valuesChanged) {\r\n      const pointer = this.lazy.getPointerCoordinates();\r\n      const brush = this.lazy.getBrushCoordinates();\r\n\r\n      this.drawInterface(this.ctx.interface, pointer, brush);\r\n      this.mouseHasMoved = false;\r\n      this.valuesChanged = false;\r\n    }\r\n\r\n    if (!once) {\r\n      window.requestAnimationFrame(() => {\r\n        this.loop();\r\n      });\r\n    }\r\n  };\r\n\r\n  inClientSpace = (ctxs, action) => {\r\n    ctxs.forEach((ctx) => {\r\n      ctx.save();\r\n      ctx.setTransform(\r\n        IDENTITY.a,\r\n        IDENTITY.b,\r\n        IDENTITY.c,\r\n        IDENTITY.d,\r\n        IDENTITY.e,\r\n        IDENTITY.f\r\n      );\r\n    });\r\n\r\n    try {\r\n      action();\r\n    } finally {\r\n      ctxs.forEach((ctx) => ctx.restore());\r\n    }\r\n  };\r\n\r\n  ///// Canvas Rendering\r\n\r\n  drawImage = () => {\r\n    if (!this.props.imgSrc) return;\r\n\r\n    // Load the image\r\n    this.image = new Image();\r\n\r\n    // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\r\n    this.image.crossOrigin = \"anonymous\";\r\n\r\n    // Draw the image once loaded\r\n    this.image.onload = this.redrawImage;\r\n    this.image.src = this.props.imgSrc;\r\n  };\r\n\r\n  drawGrid = (ctx) => {\r\n    if (this.props.hideGrid) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    const gridSize = 25;\r\n    const { viewMin, viewMax } = this.coordSystem.canvasBounds;\r\n    const minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\r\n    const miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\r\n    const maxx = viewMax.x + gridSize;\r\n    const maxy = viewMax.y + gridSize;\r\n\r\n    ctx.beginPath();\r\n    ctx.setLineDash([5, 1]);\r\n    ctx.setLineDash([]);\r\n    ctx.strokeStyle = this.props.gridColor;\r\n    ctx.lineWidth = this.props.gridLineWidth;\r\n\r\n    if (!this.props.hideGridX) {\r\n      let countX = minx;\r\n      const gridSizeX = this.props.gridSizeX;\r\n      while (countX < maxx) {\r\n        countX += gridSizeX;\r\n        ctx.moveTo(countX, miny);\r\n        ctx.lineTo(countX, maxy);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n\r\n    if (!this.props.hideGridY) {\r\n      let countY = miny;\r\n      const gridSizeY = this.props.gridSizeY;\r\n      while (countY < maxy) {\r\n        countY += gridSizeY;\r\n        ctx.moveTo(minx, countY);\r\n        ctx.lineTo(maxx, countY);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  drawInterface = (ctx, pointer, brush) => {\r\n    if (this.props.hideInterface) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    // Draw brush preview\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.brushColor;\r\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw mouse point (the one directly at the cursor)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw catenary\r\n    if (this.lazy.isEnabled()) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.lineCap = \"round\";\r\n      ctx.setLineDash([2, 4]);\r\n      ctx.strokeStyle = this.props.catenaryColor;\r\n      this.catenary.drawToCanvas(\r\n        this.ctx.interface,\r\n        brush,\r\n        pointer,\r\n        this.chainLength\r\n      );\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw brush point (the one in the middle of the brush preview)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  };\r\n}\r\n","/** \r\n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\r\n * Original By Ken Fyrstenberg Nilsen\r\n * \r\n * Note: img must be fully loaded or have correct width & height set.\r\n */\r\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\r\n  // Defaults\r\n  if (typeof x !== \"number\") x = 0;\r\n  if (typeof y !== \"number\") y = 0;\r\n  if (typeof w !== \"number\") w = ctx.canvas.width;\r\n  if (typeof h !== \"number\") h = ctx.canvas.height;\r\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\r\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\r\n\r\n  // keep bounds [0.0, 1.0]\r\n  if (offsetX < 0) offsetX = 0;\r\n  if (offsetY < 0) offsetY = 0;\r\n  if (offsetX > 1) offsetX = 1;\r\n  if (offsetY > 1) offsetY = 1;\r\n\r\n  var iw = img.width,\r\n    ih = img.height,\r\n    r = Math.min(w / iw, h / ih),\r\n    nw = iw * r, // new prop. width\r\n    nh = ih * r, // new prop. height\r\n    cx,\r\n    cy,\r\n    cw,\r\n    ch,\r\n    ar = 1;\r\n\r\n  // decide which gap to fill\r\n  if (nw < w) ar = w / nw;\r\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\r\n  nw *= ar;\r\n  nh *= ar;\r\n\r\n  // calc source rectangle\r\n  cw = iw / (nw / w);\r\n  ch = ih / (nh / h);\r\n\r\n  cx = (iw - cw) * offsetX;\r\n  cy = (ih - ch) * offsetY;\r\n\r\n  // make sure source rectangle is valid\r\n  if (cx < 0) cx = 0;\r\n  if (cy < 0) cy = 0;\r\n  if (cw > iw) cw = iw;\r\n  if (ch > ih) ch = ih;\r\n\r\n  // fill image in dest. rectangle\r\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\r\n}\r\n","//import CCsubmit from \"../components/Csubmit\";\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { dbService ,storageService} from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\n const Home=({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [Line,setLine]= useState([]);\r\n    const canvasRef = useRef();\r\n    const [pinNum,setPinNum]=useState(\"\");\r\n    const [randomPinNum,setRandomPinNum]=useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const [pinID,setPinID]=useState(0);\r\n    const [croquisTime,setCroquisTime]=useState(60);\r\n\r\n        const [min,setMin]=useState(0);\r\n        const [sec,setSec]=useState(0);\r\n        const time=useRef(croquisTime);\r\n        const timeId=useRef(null);\r\n\r\n    const refreshAndSubmit =()=>{\r\n        setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n            console.log(\"timeout\",randomPinNum[pinID])\r\n            time.current=croquisTime;\r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                heart:(0),\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n    useEffect(()=> {\r\n        timeId.current= setInterval(()=>{\r\n            setMin(parseInt(time.current/60));\r\n            setSec(time.current % 60);\r\n            time.current -= 1;\r\n        },1000);\r\n        return()=> clearInterval(timeId.current);\r\n    },[]);\r\n\r\n    useEffect(()=> {\r\n        if(time.current<=-1){\r\n            refreshAndSubmit();\r\n            \r\n            \r\n        }\r\n    },[sec]);\r\n\r\n    useEffect(()=> {\r\n      \r\n             \r\n     \r\n       \r\n             dbService.doc(`RefDB/refStrings`).get().then((doc) => {\r\n            if (doc.exists) {\r\n                //console.log(\"Document data:\", doc.data().refUrl);\r\n                //setRandomPinNum(doc.data().refUrl);\r\n                //console.log(\"doc\",doc.data().refUrl)\r\n                const random=doc.data().refUrl.sort(() => Math.random() - 0.5);\r\n                \r\n                \r\n                setRandomPinNum(random);\r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n       \r\n        dbService.collection(\"Csubmit\").onSnapshot((snapshot) =>{\r\n            const CsubmitArray = snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            \r\n            setCsubmits(CsubmitArray);\r\n            //console.log(Csubmits);\r\n        });\r\n\r\n       \r\n\r\n    },[]);\r\n     const onSubmit= async(event) => {\r\n         event.preventDefault();\r\n        //  const data = canvasRef.current.getSaveData();\r\n        //  canvasRef.current.clear();\r\n     \r\n         \r\n        //  await dbService.collection(\"Csubmit\").add({\r\n        //      text:data,\r\n        //      createdAt: Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //      heart:(0),\r\n        //     //  refPhoto:{refPhoto},\r\n        //      //pinNumber:randomPinNum,\r\n        //  });\r\n        //  setCsubmit(\"\"); \r\n        refreshAndSubmit();\r\n     };\r\n     const onSubmitPinNum= async(event) => {\r\n        event.preventDefault();\r\n        const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n        pinDocRef.update({\r\n            refUrl:firebase.firestore.FieldValue.arrayUnion(pinNum)\r\n        });\r\n           \r\n        setPinNum(\"\")\r\n\r\n     }\r\n     const onChange = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setPinNum(value);\r\n     }\r\n     const onChangeTime = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setCroquisTime(value);\r\n     }\r\n\r\n     const onSubmitTime= async(event) => {\r\n        event.preventDefault();\r\n        //setCroquisTime(0)\r\n     }\r\n    //  const onChange = (event)=> {\r\n    //      const {\r\n    //          target:{value},\r\n    //      }=event;\r\n    //      setCsubmit(value);\r\n    //  }\r\n\r\n    //  const onSubmitImage= async(event) => {\r\n    //     event.preventDefault();\r\n    //     const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n    //     const response = await fileRef.putString(imageString,\"data_url\");\r\n    //     const imageUrl =await response.ref.getDownloadURL();\r\n    //     setImageString(\"\");\r\n    //  }\r\n    //  const onFileChange= (event)=>{\r\n    //     const {\r\n    //         target:{files}\r\n    //     }= event;\r\n    //     const theFile = files[0];\r\n    //     const reader= new FileReader();\r\n    //     reader.onloadend = (finishedEvent)=>{\r\n    //         const {\r\n    //             currentTarget:{result},\r\n    //         }=finishedEvent;\r\n            \r\n    //         setImageString(result);\r\n    //     }\r\n    //     reader.readAsDataURL(theFile);\r\n    //  }\r\n\r\n  return(\r\n      \r\n  <div>\r\n       <form onSubmit={onSubmitTime}>\r\n          <input value={croquisTime} onChange= {onChangeTime} type={\"number\"}  placeholder=\"Input Croquis Time\"  />\r\n          <input type={\"submit\"} value=\"Set Time\"/>\r\n          \r\n      </form>\r\n      <div>\r\n          {min} 분 {sec} 초\r\n      </div>\r\n      <form onSubmit={onSubmitPinNum}>\r\n          <input value={pinNum} onChange= {onChange} type={\"text\"}  placeholder=\"You Can Upload Pinterst Pin By Url Number\"  />\r\n          <input type={\"submit\"} value=\"Upload Pin\"/>\r\n          \r\n      </form>\r\n      \r\n            <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div>\r\n      <div style={{float:'left'}}>\r\n      <iframe key={pinReload} src={\"https://assets.pinterest.com/ext/embed.html?id=\"+randomPinNum[pinID]} height=\"998\" width=\"300\" frameBorder={0} scrolling=\"no\" ></iframe>\r\n      </div>\r\n      <div style={{float:'left'}}>\r\n      <div>\r\n      <form onSubmit={onSubmit}>\r\n      \r\n      {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n      <input type={\"submit\"} value=\"Upload Your Drawing\"/>\r\n       \r\n  </form>\r\n      </div>\r\n          <CanvasDraw \r\n        canvasWidth={500}\r\n        canvasHeight={550}\r\n        ref={canvasRef}\r\n      /></div>\r\n      \r\n     \r\n      \r\n      {/* <form onSubmit={onSubmitImage}>\r\n            <input type={\"file\"} accept=\"image/*\" onChange={onFileChange}/>\r\n            <input type={\"submit\"} value=\"Upload Croquis Images\"/>        \r\n      </form> */}\r\n        \r\n\r\n        \r\n\r\n      \r\n      {/* <div>\r\n          {Csubmits.map((Csubmit)=>(\r\n              <CCsubmit key={Csubmit.id} CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} />\r\n          ))}\r\n      </div> */}\r\n  </div>\r\n  )\r\n };\r\n export default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navigation =() => (\r\n<nav> \r\n    <ul>\r\n        <li>\r\n            <Link to =\"/\">Home</Link>\r\n        </li>\r\n        \r\n        <li>\r\n            <Link to =\"/profile\">My Profile</Link>\r\n        </li>\r\n\r\n        </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter=({isLoggedIn,userObj}) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn &&<Navigation />}\r\n            <Switch>\r\n                {isLoggedIn ?(\r\n                    <>\r\n                        <Route exact path= \"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/profile\">\r\n                            <Profile />\r\n                        </Route>\r\n                        <Redirect from={\"*\"} to={\"/\"} />\r\n                    </>\r\n                 ) : (\r\n                     <>\r\n                    <Route exact path= \"/\">\r\n                          <Auth /> \r\n                    </Route>\r\n                    <Redirect from={\"*\"} to={\"/\"} />\r\n                    </>\r\n                 )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter; ","\r\nimport { authService } from \"fbase\"; \r\nimport React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"./Router\";  \r\n//import { authService } from \"fbase\"; \r\n\r\nfunction App() {\r\n  const [init,setInit]= useState(false);\r\n  //console.log(authService.currentUser);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj,setUserObj]= useState(null);\r\n  useEffect(()=> {\r\n    \r\n    authService.onAuthStateChanged((user) => {\r\n    if(user){\r\n      setIsLoggedIn(true);\r\n      setUserObj(user);\r\n    }else{\r\n      setIsLoggedIn(false);\r\n    }\r\n    setInit(true);\r\n  });\r\n  }, []);\r\n  return (\r\n    <>\r\n    {init ? (<AppRouter  isLoggedIn= {isLoggedIn} userObj={userObj}/>\r\n    ):( \"Inisializing..\" )}\r\n    </>\r\n  ) \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\n\r\nimport App from './components/App';\r\nimport firebase from \"./fbase\";\r\nconsole.log(firebase)\r\n \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}