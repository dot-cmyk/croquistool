{"version":3,"sources":["fbase.js","coordinateSystem.js","interactionStateMachine.js","makePassiveEventOption.js","canvasDrawIndex.js","drawImage.js","components/Csubmit.js","routes/Profile.js","routes/Auth.js","routes/Home.js","components/Navigation.js","routes/DoProko.js","ZoomButtons.js","StateDebugView.js","Utils.js","PinchZoomPan.js","routes/DoSoty.js","routes/videojs-framebyframe/videojs.framebyframe.js","routes/video.js","routes/DoSakuga.js","routes/Special.js","routes/Adorka.js","routes/x-frame-bypass.js","routes/LineOfAction.js","routes/twitter.js","routes/ChaDesign.js","components/Dsubmit.js","routes/ChaDrawing.js","components/Router.js","components/App.js","index.js","routes/soche.png","routes/soche2.png"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storage","NULL_VIEW_POINT","Object","freeze","x","y","untransformedX","untransformedY","NULL_BOUNDS","canvasWidth","canvasHeight","left","top","right","bottom","viewMin","viewMax","IDENTITY","a","b","c","d","e","f","CoordinateSystem","_ref","_this","this","scaleExtents","documentSize","classCallCheck","_canvas","_view","scale","_viewChangeListeners","Set","setScale","setView","clampView","_ref2","_this$scaleExtents","min","max","_this$documentSize","width","height","_ref3","canvasRect","maxx","minx","maxy","miny","Math","resetView","view","newView","objectSpread","_this$_view","forEach","listener","scaleAtClientPoint","deltaScale","clientPoint","viewPt","clientPointToViewPoint","clientPtPostScale","viewPointToClientPoint","clientX","clientY","_ref4","arguments","length","undefined","_ref5","relativeClientX","relativeClientY","_ref6","_ref7","relativeX","relativeY","attachViewChangeListener","add","_scaleExtents","_documentSize","canvas","_ref8","_ref9","_this$_canvas$getBoun","getBoundingClientRect","SUPPRESS_SCROLL","preventDefault","DefaultState","_this2","handleMouseWheel","canvasDraw","_canvasDraw$props","props","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","ctrlKey","coordSystem","deltaY","clientPointFromEvent","handleDrawStart","PanState","WaitForPinchState","handleDrawMove","_viewPointFromEvent","viewPointFromEvent","lazy","update","handleDrawEnd","_this3","_this4","bind","dragStart","panStart","_clientPointFromEvent","dx","dy","_this5","touches","ScaleOrPanState","DrawingState","clientPt","deferredPoints","push","Date","valueOf","startTimestamp","startClientPoint","abs","issueDeferredPoints","nextState","i","deferredPt","syntheticEvt","SyntheticEvent","_this6","start","getTouchMetrics","scaleStart","_this6$recentMetrics","recentMetrics","centroid","distance","TouchScaleState","TouchPanState","_clientPointFromEvent2","t1x","t1y","_clientPointFromEvent3","t2x","t2y","t1","t2","sqrt","scaleOrPanState","_this7","ref","_ref$recentMetrics","_this8","_ref$recentMetrics2","dScale","_this9","_viewPointFromEvent2","both","_viewPointFromEvent3","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","brush","toObject","drawPoints","brushColor","brushRadius","saveLine","changedTouches","passiveSupported","options","passive","window","addEventListener","removeEventListener","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","CanvasDraw","possibleConstructorReturn","getPrototypeOf","call","undo","lines","slice","erasedLines","pop","clearExceptErasedLines","simulateDrawingLines","immediate","triggerOnChange","eraseAll","toConsumableArray","clear","getSaveData","JSON","stringify","getDataURL","fileType","useBgImage","backgroundColour","canvasToExport","drawing","context","getContext","storedImageData","getImageData","compositeOperation","globalCompositeOperation","imgSrc","drawImage","fillStyle","fillRect","imageData","toDataURL","concat","clearRect","putImageData","loadSaveData","saveData","immediateLoading","Error","_JSON$parse","parse","scaleX","scaleY","scaleAvg","map","line","p","componentWillUnmount","canvasObserver","unobserve","canvasContainer","interface","handleWheel","interactionSM","assertThisInitialized","allowOnlyPointerType","pointerType","mouseHasMoved","applyView","ctx","name","clearWindow","m","transformMatrix","setTransform","deferRedrawOnViewChange","drawGrid","grid","redrawImage","loop","once","handleCanvasResize","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","_entry$contentRect","value","contentRect","setCanvasSize","temp","err","point","clampLinesToDocument","image","complete","img","w","h","offsetX","offsetY","cx","cy","cw","ch","iw","ih","r","nw","nh","ar","curTime","timeoutGap","loadTimeOffset","_loop","setTimeout","style","lineJoin","lineCap","strokeStyle","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","closePath","fill","stroke","inClientSpace","onChange","valuesChanged","_ref4$once","pointer","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","ctxs","action","save","restore","Image","crossOrigin","onload","src","hideGrid","_this$coordSystem$can","canvasBounds","floor","setLineDash","gridColor","gridLineWidth","hideGridX","countX","gridSizeX","hideGridY","countY","gridSizeY","hideInterface","arc","PI","catenaryColor","catenary","Catenary","isPressing","zoomExtents","LazyBrush","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","chainLength","ResizeObserver","observer","observe","initX","initY","prevProps","setRadius","react_default","createElement","className","background","backgroundColor","touchAction","container","isInterface","key","onPointerDown","onPointerMove","onPointerUp","onPointerOut","PureComponent","defaultProps","refreshBackgroundImage","CCsubmit","CsubmitObj","isOwner","_useState","viewDeleyToggle","useState","_useState2","slicedToArray","editing","setEditing","_useState3","text","_useState4","canvasRef2","useRef","_useState5","_useState6","setOnOff","uploadDay","createdAt","_useState7","_useState8","viewRefPin","setViewRefpin","onHeartClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","doc","id","heart","console","log","FieldValue","arrayUnion","refPinUrl","stop","apply","float","border","Fragment","onClick","event","data","current","dataUrl","canvasDrawIndex_CanvasDraw","margin","build","confirm","delete","pre","toLocaleString","navigator","language","userLanguage","frameBorder","scrolling","Profile","userObj","Csubmits","setCsubmits","Cdate","_useState9","_useState10","startDate","setStartDate","_useState11","_useState12","listEnd","setListEnd","_useState13","_useState14","isCalendar","setIsCalender","useEffect","collection","where","uid","orderBy","limit","onSnapshot","snapshot","CsubmitArray","docs","signOut","esm","onClickDay","getTime","calendarType","target","type","placeholder","Csubmit","components_Csubmit","creatorId","viewsToggle","marginRight","padding","Auth","email","setEmail","password","setPassword","newAccount","error","setError","_event$target","onSubmit","signInWithEmailAndPassword","sent","t0","message","_x","required","Home","setCsubmit","canvasRef","pinNum","setPinNum","randomPinNum","setRandomPinNum","pinReload","setPinreload","pinID","setPinID","_useState15","_useState16","croquisTime","setCroquisTime","_useState17","_useState18","pointerTypeIndex","_useState19","_useState20","setMin","_useState21","_useState22","sec","setSec","time","timeId","_useState23","croquisTimeDB","eraseRadius","_useState24","drawSetting","setDrawSetting","_useState25","_useState26","timeSetBottonToggle","setTimeSetBottonToggle","_useState27","_useState28","setBrushColor","refreshAndSubmit","now","drawingTime","get","then","exists","catch","setInterval","parseInt","clearInterval","random","refUrl","sort","onUndoClick","onEraseClick","onShadowClick","onBrushClick","react_hot_keys_esm","keyName","onKeyDown","handle","prevState","arrayRemove","j","k","ordinal_suffix_of","noRefreshAndSubmit","transform","textAlign","match","pinDocRef","split","Navigation","borderLeft","react_router_dom","to","DoProko","youtubeUrlIndex","setYoutubeUrlIndex","youtubeUrls","playListName","containerStyle","zIndex","ZoomButtons","minScale","maxScale","onZoomInClick","onZoomOutClick","marginTop","marginLeft","color","StateDebugView","overflow","overflowDisplay","filter","o","join","snapToTarget","tolerance","constrain","lowerBound","upperBound","negate","getRelativePosition","relativeToElement","rect","getPinchLength","touch1","touch2","pow","isEqualDimensions","dimensions1","dimensions2","getDimensions","object","offsetWidth","offsetHeight","isEqualTransform","transform1","transform2","round","getAutofitScale","containerDimensions","imageDimensions","imageWidth","imageHeight","getMinScale","createSelector","state","minScaleProp","String","toLowerCase","number","precision","pair","tryCancelEvent","cancelable","calculateOverflowLeft","calculateOverflowTop","calculateOverflowRight","calculateOverflowBottom","getImageOverflow","DOUBLE_TAP_THRESHOLD","ANIMATION_SPEED","isInitialized","imageStyle","cursor","transformOrigin","imageOverflow","browserPanActions","trim","PinchZoomPan","handleTouchStart","cancelAnimation","lastPinchLength","lastPanPointerPosition","pointerDown","handleTouchMove","pinchChange","requestedPan","pan","controlOverscrollViaCss","hasOverflowX","hasOverflowY","up","down","panX","panY","handleTouchEnd","lastPointerUpTimeStamp","timeStamp","pointerPosition","imageRef","parentNode","doubleClick","maybeAdjustCurrentTransform","handleMouseDown","handleMouseMove","buttons","handleMouseDoubleClick","zoomOut","zoomIn","handleImageLoad","debug","isImageLoaded","maybeHandleDimensionsChanged","onLoad","React","Children","only","children","handleZoomInClick","handleZoomOutClick","handleWindowResize","handleRefImage","setRef","clientPosition","pointerClientPosition","isTransformInitialized","translateX","translateY","constrainAndApplyTransform","doubleTapBehavior","applyInitialTransform","midpoint","getPinchMidpoint","zoom","speed","factor","requestedScale","containerRelativePoint","_this$state","imageRelativePoint","nextScale","getConstrainedScale","incrementalScalePercentage","nextTop","nextLeft","isImageReady","setState","requestedTop","requestedLeft","requestedTransform","getCorrectedTransform","applyTransform","animation","frame","translateScale","nextTransform","lowerBoundFactor","upperBoundFactor","negativeSpace","calculateNegativeSpace","_this$props","initialTop","initialLeft","_this$state2","constrainedTransform","correctedTransform","initialPosition","_this$state3","_this$props2","initialScale","warning","childElement","_this$props3","zoomButtons","src_ZoomButtons","assign","cloneElement","onTouchStart","onTouchEnd","onMouseDown","onMouseMove","onDoubleClick","onWheel","onDragStart","onContextMenu","_this$state4","cancelAnimationFrame","tagName","CSS","supports","nextProps","Component","DoSoty","canvasRef3","sotyIndex","setSotyIndex","sotyUrlarr","setSotyUrlarr","urlarr","PinchZoomPan_PinchZoomPan","alt","VjsButton","videojs","getComponent","FBFButton","extend","constructor","player","frameTime","fps","step_size","on","pause","dist","currentTime","framebyframe","ready","steps","opt","controlBar","addChild","el","dom","createEl","innerHTML","role","step","index","VideoPlayer","registerPlugin","plugin","videoNode","addClass","dispose","videoUrl","videoJsOptions","autoplay","controls","sources","data-vjs-player","node","DoSakuga","searchTerm","setSearchTerm","setVideoUrl","videoPage","setVideoPage","searchHeight","setSearchHeight","searchResults","setSearchResults","booruResults","setBooruResults","results","tagss","tags","tag","person","includes","refreshSearch","fetch","response","json","playbackRates","pictureInPictureToggle","fullscreenToggle","plugins","video_VideoPlayer","item","preview_url","file_url","Special","croquisList","setCroquisList","submitField","setSubmitField","_useState29","_useState30","_useState31","_useState32","array","keys","list","url","values","defineProperty","defaultValue","Adorka","is","customElements","define","_HTMLIFrameElement","_class","inherits","createClass","load","sandbox","startsWith","srcdoc","fetchProxy","res","replace","proxies","ok","status","statusText","wrapNativeSuper","HTMLIFrameElement","extends","LineOfAction","twitter","twitterUrl","setTwitterUrl","script","document","setAttribute","getElementsByClassName","appendChild","class","data-width","data-height","href","ChaDesign","_useState33","_useState34","socheNum","setSocheNum","_useState35","_useState36","isSelect","setIsSelect","noRefreshAndSubmitWithImg","Soche","Soche2","CDsubmit","DsubmitObj","ChaDrawing","Dsubmits","setDsubmits","DsubmitArray","Dsubmit","components_Dsubmit","AppRouter","isLoggedIn","components_Navigation","react_router","exact","path","routes_Home","from","routes_Auth","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","Router","ReactDOM","render","StrictMode","components_App","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.0f43677c.chunk.js","sourcesContent":["import   firebase from \"firebase/compat/app\";\r\n\r\n\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\"\r\nconst firebaseConfig = {\r\n    // apiKey: \"AIzaSyDH6rySddl7QAoqkwATwz7CgXrPe7LQis8\",\r\n    // authDomain: \"croquistool.firebaseapp.com\",\r\n    // projectId: \"croquistool\",\r\n    // storageBucket: \"croquistool.appspot.com\",\r\n    // messagingSenderId: \"843301254465\",\r\n    // appId: \"1:843301254465:web:046d03ff7cf7e8619f9dc0\",\r\n    // measurementId: \"G-JT9C23VQFT\"\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\n\r\n  export default firebase.initializeApp(firebaseConfig);\r\n \r\n const authService =  firebase.auth();\r\n const dbService = firebase.firestore();\r\n const storageService = firebase.storage();\r\nexport {firebase, authService,dbService,storageService}","/**\r\n * @type {ViewPoint}\r\n */\r\nconst NULL_VIEW_POINT = Object.freeze({\r\n  x: 0, y: 0, untransformedX: 0, untransformedY: 0\r\n});\r\n\r\n/**\r\n * @type {CanvasBounds}\r\n */\r\nconst NULL_BOUNDS = Object.freeze({\r\n  canvasWidth: 0, canvasHeight: 0,\r\n  left: 0, top: 0, right: 0, bottom: 0,\r\n  viewMin: NULL_VIEW_POINT, viewMax: NULL_VIEW_POINT,\r\n});\r\n\r\n/**\r\n * The identity matrix (a transform that results in view coordinates that are\r\n * identical to relative client coordinates).\r\n * @type {Matrix}\r\n */\r\nexport const IDENTITY = Object.freeze({ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 });\r\n\r\nfunction valueOrDefault(value, defaultValue) {\r\n  if (value === null || (typeof value) === \"undefined\") {\r\n    return defaultValue;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\r\n * canvas.\r\n */\r\nexport default class CoordinateSystem {\r\n  /**\r\n   * @typedef Extents\r\n   * @property {number} min the minimal value in the range\r\n   * @property {number} max the maximal value in the range\r\n   */\r\n\r\n  /**\r\n   * @typedef Size\r\n   * @property {number} width the span of the element's horizontal axis\r\n   * @property {number} height the span of the element's vertical axis\r\n   */\r\n\r\n  /**\r\n   * @param {Object} parameters the initialization parameters for this instance.\r\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\r\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\r\n   */\r\n  constructor({ scaleExtents, documentSize }) {\r\n    this._scaleExtents = scaleExtents;\r\n    this._documentSize = documentSize;\r\n  }\r\n\r\n  /**\r\n   * @type {Extents}\r\n   */\r\n  _scaleExtents;\r\n\r\n  /**\r\n   * @type {Size}\r\n   */\r\n  _documentSize;\r\n\r\n  /**\r\n   * @typedef Canvas\r\n   * @property {number} width the canvas's width\r\n   * @property {number} height the canvas's height\r\n   * @property {() => Object} getBoundingClientRect returns the client bounds\r\n   */\r\n\r\n  /**\r\n   * @type {Canvas}\r\n   * @private\r\n   */\r\n  _canvas = null;\r\n\r\n  /**\r\n   * @typedef View\r\n   * @property {number} scale the zoom factor\r\n   * @property {number} x the current x offset\r\n   * @property {number} y the current y offset\r\n   */\r\n\r\n  /**\r\n   * @type {View}\r\n   * @private\r\n   */\r\n  _view = { scale: 1.0, x: 0, y: 0 };\r\n\r\n  /**\r\n   * Describes a callback function that receives info about view changes\r\n   * @typedef {(update: { view: View, transform: Matrix }) => void} ViewListener\r\n   */\r\n\r\n   /**\r\n    * @type {ViewListener[]}\r\n    * @private\r\n    */\r\n   _viewChangeListeners = new Set();\r\n\r\n  /**\r\n   * @returns {Canvas} the canvas currently associated with this instance.\r\n   */\r\n  get canvas() {\r\n    return this._canvas;\r\n  }\r\n\r\n  /**\r\n   * Updates the canvas for this coordinate system and recalculates the view.\r\n   * @param {Canvas} canvas the new canvas to associate with this instance.\r\n   */\r\n  set canvas(canvas) {\r\n    this._canvas = canvas;\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the current zoom factor\r\n   */\r\n  get scale() {\r\n    return this._view.scale;\r\n  }\r\n\r\n  /**\r\n   * Sets the zoom factor (clamped by the scale extents) and updates the view.\r\n   * @param {number} the new zoom factor\r\n   */\r\n  setScale = (scale) => {\r\n    this.setView({ scale });\r\n  };\r\n\r\n  /**\r\n   * @returns {number} the horizontal component of the current pan offset\r\n   */\r\n  get x() {\r\n    return this._view.x;\r\n  }\r\n\r\n  /**\r\n   * Sets the horizontal pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} x the new offset\r\n   */\r\n  set x(x) {\r\n    this.setView({ x });\r\n  }\r\n\r\n  /**\r\n   * @retruns {number} the vertical component of the current pan offset\r\n   */\r\n  get y() {\r\n    return this._view.y;\r\n  }\r\n\r\n  /**\r\n   * Sets the vertical pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} y the new offset\r\n   */\r\n  set y(y) {\r\n    this.setView({ y });\r\n  }\r\n\r\n  /**\r\n   * @returns {View} a copy of this instance's current view state.\r\n   */\r\n  get view() {\r\n    return { ...this._view };\r\n  }\r\n\r\n  /**\r\n   * @returns {Extents} a copy of the scale extents currently applied to this\r\n   * instance.\r\n   */\r\n  get scaleExtents() {\r\n    return { ...this._scaleExtents };\r\n  }\r\n\r\n  /**\r\n   * Updates the minimum and maximum scale and resets the view transform if it\r\n   * is outside the new extents.\r\n   * @param {Extents} extents the new scale extents.\r\n   */\r\n  set scaleExtents({ min, max }) {\r\n    this._scaleExtents = { min, max };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {Size} the current document size (used to constrain the pan\r\n   * offset).\r\n   */\r\n  get documentSize() {\r\n    return { ...this._documentSize };\r\n  }\r\n\r\n  /**\r\n   * Sets the document size and recalculates the view if it is outside the new\r\n   * bounds.\r\n   * @param {Size} size the new document size.\r\n   */\r\n  set documentSize({ width, height }) {\r\n    this._documentSize = { width, height };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * A view matrix expressing a series of transformations.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n   * @typedef Matrix\r\n   * @property {number} a horizontal scaling factor (1 == unscaled)\r\n   * @property {number} b vertical skewing factor (0 == unskewed)\r\n   * @property {number} c horizontal skewing factor (0 == unskewed)\r\n   * @property {number} d vertical scaling factor (1 == unscaled)\r\n   * @property {number} e horizontal translation (0 == untranslated)\r\n   * @property {number} f vertical translation (0 == untranslated)\r\n   */\r\n\r\n  /**\r\n   * @returns {Matrix} this coordinate system's current transformation matrix\r\n   */\r\n  get transformMatrix() {\r\n    //\r\n    return {\r\n      a: this._view.scale, // horizontal scaling\r\n      b: 0, // vertical skewing\r\n      c: 0, // horizontal skewing\r\n      d: this._view.scale, // vertical scaling\r\n      e: this._view.x,\r\n      f: this._view.y,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * An object expressing the bounds of a canvas object in terms of the\r\n   * coordinate system.\r\n   * @typedef CanvasBounds\r\n   * @property {number} left the left edge of the canvas in client space\r\n   * @property {number} right the right edge of the canvas in client space\r\n   * @property {number} top the top edge of the canvas in client space\r\n   * @property {number} bottom the bottom edge of the canvas in client space\r\n   * @property {number} canvasWidth the width of the canvas in client space\r\n   * @property {number} canvasHeight the height of the canvas in client space\r\n   * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\r\n   * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\r\n   */\r\n\r\n  /**\r\n   * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\r\n   * this coordinate system, or undefined if no canvas is set.\r\n   */\r\n  get canvasBounds() {\r\n    if (this._canvas) {\r\n      const { left, top, right, bottom } = this._canvas.getBoundingClientRect();\r\n      return {\r\n        viewMin: this.clientPointToViewPoint({ clientX: left, clientY: top }),\r\n        viewMax: this.clientPointToViewPoint({ clientX: right, clientY: bottom }),\r\n        left, top, right, bottom,\r\n        canvasWidth: this._canvas.width,\r\n        canvasHeight: this._canvas.height,\r\n      };\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {{left: number, top: number} | undefined}\r\n   */\r\n  get canvasRect() {\r\n    if (this.canvas) {\r\n      return this.canvas.getBoundingClientRect();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates a variant of the given view clamped according to the scale and\r\n   * document bounds. Does not modify this instance.\r\n   * @param {View} view the view constraints to clamp.\r\n   * @returns {View} a new view object representing the constrained input.\r\n   */\r\n  clampView = ({ scale, x, y }) => {\r\n    const { min, max } = this.scaleExtents;\r\n    const { width, height } = this.documentSize;\r\n    const { left, top, right, bottom } = this.canvasRect || NULL_BOUNDS;\r\n\r\n    const canvasWidth = right - left;\r\n    const canvasHeight = bottom - top;\r\n\r\n    const maxx = canvasWidth / 2;\r\n    const minx = -(width * this._view.scale - canvasWidth / 2);\r\n    const maxy = canvasHeight / 2;\r\n    const miny = -(height * this._view.scale - canvasHeight / 2);\r\n\r\n    // Clamp values to acceptible range.\r\n    return {\r\n      scale: Math.min(Math.max(scale, min), max),\r\n      x: Math.min(Math.max(x, minx), maxx),\r\n      y: Math.min(Math.max(y, miny), maxy),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resets the view transform to its default state.\r\n   */\r\n  resetView = () => {\r\n    this.setView({ scale: 1.0, x: 0, y: 0 });\r\n  };\r\n\r\n  /**\r\n   * Updates the view, ensuring that it is within the document and scale bounds.\r\n   * @param {View} view\r\n   *    the new view state. Any view property not specified will remain\r\n   *    unchanged.\r\n   * @return {View}\r\n   *    a copy of the view state after having been constrained and applied.\r\n   */\r\n  setView = (view) => {\r\n    const newView = this.clampView({ ...this._view, ...(view || {}) });\r\n    const { scale, x, y } = this._view;\r\n\r\n    // Only trigger if the view actually changed.\r\n    if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\r\n      this._view = newView;\r\n      this._viewChangeListeners.forEach(listener => listener && listener(newView));\r\n    }\r\n\r\n    return { ...this._view };\r\n  };\r\n\r\n  /**\r\n   * Updates the current view scale while attempting to keep the given point\r\n   * fixed within the canvas.\r\n   *\r\n   * @param {number} deltaScale the amount by which to change the current scale factor.\r\n   * @param {ClientPoint} clientPoint the origin of the zoom, in client space.\r\n   *\r\n   * @returns {View} the newly computed view.\r\n   */\r\n  scaleAtClientPoint = (deltaScale, clientPoint) => {\r\n    const viewPt = this.clientPointToViewPoint(clientPoint);\r\n    const newView = this.clampView({ ...this._view, scale: this._view.scale + deltaScale });\r\n    const clientPtPostScale = this.viewPointToClientPoint(viewPt, newView);\r\n\r\n    newView.x = this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\r\n    newView.y = this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\r\n\r\n    return this.setView(newView);\r\n  };\r\n\r\n  /**\r\n   * Describes a point in view space (client space after the viewport transform\r\n   * has been applied).\r\n   * @typedef ViewPoint\r\n   * @property {number} x\r\n   *    the x-coordinate in view space\r\n   * @property {number} y\r\n   *    the y-coordinate in view space\r\n   * @property {number} relativeClientX\r\n   *    the x-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   * @property {number} relativeClientY\r\n   *    the y-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   */\r\n\r\n  /**\r\n   * @param {ClientPoint} point the point to transform in client space\r\n   * @param {View} view the view transform to apply (defaults to the current view)\r\n   * @returns {ViewPoint} the result of converting the given client coordinate\r\n   * to view space. If there is no canvas set, a top-left corner of (0, 0) is\r\n   * assumed.\r\n   */\r\n  clientPointToViewPoint = ({ clientX, clientY }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeClientX = clientX - left;\r\n    const relativeClientY = clientY - top;\r\n\r\n    return {\r\n      x: (relativeClientX - view.x) / view.scale,\r\n      y: (relativeClientY - view.y) / view.scale,\r\n      relativeClientX,\r\n      relativeClientY,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @typedef ClientPoint\r\n   * @property {number} clientX\r\n   *    the x-coordinate in client space\r\n   * @property {number} clientY\r\n   *    the y-coordinate in client space\r\n   * @property {number} x\r\n   *    an alias for clientX\r\n   * @property {number} y\r\n   *    an alias for clientY\r\n   * @property {number} relativeX\r\n   *    the x-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   * @property {number} relativeY\r\n   *    the y-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   */\r\n\r\n   /**\r\n    * @param {ViewPoint} point the point to transform in view space\r\n    * @param {number} point.x the point's x-coordinate\r\n    * @param {number} point.y the point's y-coordinate\r\n    * @param {View} view the view transform to apply (defaults to the current view)\r\n    * @returns {ClientPoint} the result of converting the given coordinate to\r\n    * client space. If there is no canvas set, a top-left corner of (0, 0) is\r\n    * assumed.\r\n    */\r\n  viewPointToClientPoint = ({ x, y }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeX = x * view.scale + view.x;\r\n    const relativeY = y * view.scale + view.y;\r\n    const clientX = relativeX + left;\r\n    const clientY = relativeY + top;\r\n\r\n    return { clientX, clientY, relativeX, relativeY, x: clientX, y: clientY };\r\n  };\r\n\r\n  /**\r\n   * Adds a new callback function that will be invoked each time the view\r\n   * transform changes.\r\n   * @param {ViewListener} listener the callback to execute.\r\n   */\r\n  attachViewChangeListener = (listener) => {\r\n    this._viewChangeListeners.add(listener);\r\n  };\r\n}\r\n","const TOUCH_SLOP = 10;\r\nconst PINCH_TIMEOUT_MS = 250;\r\nconst SUPPRESS_SCROLL = (e) => {\r\n  // No zooming while drawing, but we'll cancel the scroll event.\r\n  e.preventDefault();\r\n  return this;\r\n};\r\n\r\n/**\r\n * The default state for the interaction state machine. Supports zoom and\r\n * initiating pan and drawing actions.\r\n */\r\nexport class DefaultState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    const { disabled, enablePanAndZoom, mouseZoomFactor } = canvasDraw.props;\r\n    if (disabled ) {\r\n      return new DisabledState();\r\n    } else if (enablePanAndZoom && e.ctrlKey) {\r\n      e.preventDefault();\r\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\r\n    }\r\n    return this;\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\r\n      return (new PanState()).handleDrawStart(e, canvasDraw);\r\n    } else {\r\n      return (new WaitForPinchState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else {\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y });\r\n      return this;\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    return canvasDraw.props.disabled ? (new DisabledState()) : this;\r\n  };\r\n};\r\n\r\n/**\r\n * This state is used as long as the disabled prop is active. It ignores all\r\n * events and doesn't prevent default actions. The disabled state can only be\r\n * triggered from the default state (i.e., while no action is actively being\r\n * performed).\r\n */\r\nexport class DisabledState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleMouseWheel(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawMove(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawEnd(e, canvasDraw);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This state is active as long as the user is panning the image. This state is\r\n * retained until the pan ceases.\r\n */\r\nexport class PanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    this.dragStart = clientPointFromEvent(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { clientX, clientY } = clientPointFromEvent(e);\r\n    const dx = clientX - this.dragStart.clientX;\r\n    const dy = clientY - this.dragStart.clientY;\r\n    canvasDraw.coordSystem.setView({ x: this.panStart.x + dx, y: this.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user has initiated the drawing action but has\r\n * not yet created any lines. We use this state to try and detect a second touch\r\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\r\n * or movement happens without a second touch.\r\n */\r\nexport class WaitForPinchState {\r\n  constructor() {\r\n    this.startClientPoint = null;\r\n    this.startTimestamp = (new Date()).valueOf();\r\n    this.deferredPoints = [];\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart  = (e, canvasDraw) => {\r\n    const { enablePanAndZoom } = canvasDraw.props;\r\n    e.preventDefault();\r\n\r\n    // We're going to transition immediately into lazy-drawing mode if\r\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\r\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\r\n      return (new DrawingState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    // If we already have two touch events, we can move straight into pinch/pan\r\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // If we have two touches, move to pinch/pan (we don't have to recheck\r\n    // whether zoom is enabled because that happend in draw start).\r\n    if (e.touches && e.touches.length >= 2) {\r\n      // Use the start draw to handler to transition.\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    const clientPt = clientPointFromEvent(e);\r\n    this.deferredPoints.push(clientPt);\r\n\r\n    // If we've already moved far enough, or if enough time has passed, give up\r\n    // and switch over to drawing.\r\n    if ((new Date()).valueOf() - this.startTimestamp < PINCH_TIMEOUT_MS) {\r\n      if (this.startClientPoint === null) {\r\n        this.startClientPoint = clientPt;\r\n      }\r\n\r\n      // Note that we're using \"manhattan distance\" rather than computing a\r\n      // hypotenuse here as a cheap approximation\r\n      const d =\r\n        Math.abs(clientPt.clientX - this.startClientPoint.clientX)\r\n        + Math.abs(clientPt.clientY - this.startClientPoint.clientY);\r\n\r\n      if (d < TOUCH_SLOP) {\r\n        // We're not ready to give up yet.\r\n        return this;\r\n      }\r\n    }\r\n\r\n    // Okay, give up and start drawing.\r\n    return this.issueDeferredPoints(canvasDraw);\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    // The user stopped drawing before we decided what to do. Just treat this as\r\n    // if they were drawing all along.\r\n    return this.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\r\n  };\r\n\r\n  issueDeferredPoints = (canvasDraw) => {\r\n    // Time to give up. Play our deferred points out to the drawing state.\r\n    // The first point will have been a start draw.\r\n    let nextState = new DrawingState();\r\n    for (let i = 0; i < this.deferredPoints.length; i++) {\r\n      const deferredPt = this.deferredPoints[i];\r\n      const syntheticEvt = new SyntheticEvent(deferredPt);\r\n      const func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\r\n      nextState = func(syntheticEvt, canvasDraw);\r\n    }\r\n    return nextState;\r\n  };\r\n}\r\n\r\n/**\r\n * This state is active when the user has added at least two touch points but we\r\n * don't yet know if they intend to pan or zoom.\r\n */\r\nexport class ScaleOrPanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n    this.start = this.getTouchMetrics(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n    this.scaleStart = canvasDraw.coordSystem.scale;\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const { centroid, distance } = this.recentMetrics = this.getTouchMetrics(e);\r\n\r\n    // Switch to scaling?\r\n    const dd = Math.abs(distance - this.start.distance);\r\n    if (dd >= TOUCH_SLOP) {\r\n      return new TouchScaleState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Switch to panning?\r\n    const dx = centroid.clientX - this.start.centroid.clientX;\r\n    const dy = centroid.clientY - this.start.centroid.clientY;\r\n    const dc = Math.abs(dx) + Math.abs(dy);\r\n    if (dc >= TOUCH_SLOP) {\r\n      return new TouchPanState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Not enough movement yet\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n\r\n  getTouchMetrics = (e) => {\r\n    const { clientX: t1x, clientY: t1y } = clientPointFromEvent(e.touches[0]);\r\n    const { clientX: t2x, clientY: t2y } = clientPointFromEvent(e.touches[1]);\r\n\r\n    const dx = t2x - t1x;\r\n    const dy = t2y - t1y;\r\n\r\n    return {\r\n      t1: { clientX: t1x, clientY: t1y },\r\n      t2: { clientX: t2x, clientY: t2y },\r\n      distance: Math.sqrt(dx * dx + dy * dy),\r\n      centroid: { clientX: (t1x + t2x) / 2.0, clientY: (t1y + t2y) / 2.0 },\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to pan the image.\r\n */\r\nexport class TouchPanState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const dx = centroid.clientX - ref.start.centroid.clientX;\r\n    const dy = centroid.clientY - ref.start.centroid.clientY;\r\n\r\n    canvasDraw.setView({ x: ref.panStart.x + dx, y: ref.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to scale the drawing.\r\n */\r\nexport class TouchScaleState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const targetScale = ref.scaleStart * (distance / ref.start.distance);\r\n    const dScale = targetScale - canvasDraw.coordSystem.scale;\r\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user is drawing.\r\n */\r\nexport class DrawingState {\r\n  constructor() {\r\n    this.isDrawing = false;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    if (e.touches && e.touches.length) {\r\n      // on touch, set catenary position to touch pos\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y }, { both: true });\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n    canvasDraw.lazy.update({ x, y });\r\n    const isDisabled = !canvasDraw.lazy.isEnabled();\r\n\r\n    if (!this.isDrawing || isDisabled) {\r\n      // Start drawing and add point\r\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n      this.isDrawing = true;\r\n    }\r\n\r\n    // Add new point\r\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n\r\n    // Draw current points\r\n    canvasDraw.drawPoints({\r\n      points: canvasDraw.points,\r\n      brushColor: canvasDraw.props.brushColor,\r\n      brushRadius: canvasDraw.props.brushRadius\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // Draw to this end pos\r\n    this.handleDrawMove(e, canvasDraw);\r\n    canvasDraw.saveLine();\r\n\r\n    return new DefaultState();\r\n  };\r\n}\r\n\r\nexport class SyntheticEvent {\r\n  constructor({ clientX, clientY }) {\r\n    this.clientX = clientX;\r\n    this.clientY = clientY;\r\n    this.touches = [ { clientX, clientY } ];\r\n  }\r\n\r\n  preventDefault = () => {};\r\n}\r\n\r\nexport function clientPointFromEvent(e) {\r\n  // use cursor pos as default\r\n  let clientX = e.clientX;\r\n  let clientY = e.clientY;\r\n\r\n  // use first touch if available\r\n  if (e.changedTouches && e.changedTouches.length > 0) {\r\n    clientX = e.changedTouches[0].clientX;\r\n    clientY = e.changedTouches[0].clientY;\r\n  }\r\n\r\n  return { clientX, clientY };\r\n}\r\n\r\nexport function viewPointFromEvent(coordSystem, e) {\r\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\r\n}\r\n","// Determines if the browser supprots passive events\r\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\nlet passiveSupported = false;\r\ntry {\r\n  const options = {\r\n    get passive() {\r\n      passiveSupported = true;\r\n      return false; \r\n    }\r\n  };\r\n  window.addEventListener(\"test\", options, options);\r\n  window.removeEventListener(\"test\", options, options);\r\n} catch(e) {\r\n  passiveSupported = false;\r\n}\r\n\r\nexport default function makePassiveEventOption(passive) {\r\n  return passiveSupported ? { passive } : passive;\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyBrush } from \"lazy-brush\";\r\nimport { Catenary } from \"catenary-curve\";\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\r\nimport drawImage from \"./drawImage\";\r\nimport { DefaultState } from \"./interactionStateMachine\";\r\nimport makePassiveEventOption from \"./makePassiveEventOption\";\r\n\r\nfunction midPointBtw(p1, p2) {\r\n  return {\r\n    x: p1.x + (p2.x - p1.x) / 2,\r\n    y: p1.y + (p2.y - p1.y) / 2,\r\n  };\r\n}\r\n\r\nconst canvasStyle = {\r\n  display: \"block\",\r\n  position: \"absolute\",\r\n};\r\n\r\n// The order of these is important: grid > drawing > temp > interface\r\nconst canvasTypes = [\"grid\", \"drawing\", \"temp\", \"interface\"];\r\n\r\nconst dimensionsPropTypes = PropTypes.oneOfType([\r\n  PropTypes.number,\r\n  PropTypes.string,\r\n]);\r\n\r\nconst boundsProp = PropTypes.shape({\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default class CanvasDraw extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    loadTimeOffset: PropTypes.number,\r\n    lazyRadius: PropTypes.number,\r\n    allowOnlyPointerType :PropTypes.string,\r\n    brushRadius: PropTypes.number,\r\n    brushColor: PropTypes.string,\r\n    catenaryColor: PropTypes.string,\r\n    gridColor: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    hideGrid: PropTypes.bool,\r\n    canvasWidth: dimensionsPropTypes,\r\n    canvasHeight: dimensionsPropTypes,\r\n    disabled: PropTypes.bool,\r\n    imgSrc: PropTypes.string,\r\n    saveData: PropTypes.string,\r\n    immediateLoading: PropTypes.bool,\r\n    hideInterface: PropTypes.bool,\r\n    gridSizeX: PropTypes.number,\r\n    gridSizeY: PropTypes.number,\r\n    gridLineWidth: PropTypes.number,\r\n    hideGridX: PropTypes.bool,\r\n    hideGridY: PropTypes.bool,\r\n    enablePanAndZoom: PropTypes.bool,\r\n    mouseZoomFactor: PropTypes.number,\r\n    zoomExtents: boundsProp,\r\n    clampLinesToDocument: PropTypes.bool,\r\n    refreshBackgroundImage: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChange: null,\r\n    loadTimeOffset: 5,\r\n    lazyRadius: 12,\r\n    allowOnlyPointerType : \"pen\",\r\n    brushRadius: 10,\r\n    brushColor: \"#444\",\r\n    catenaryColor: \"#0a0302\",\r\n    gridColor: \"rgba(150,150,150,0.17)\",\r\n    backgroundColor: \"#FFF\",\r\n    hideGrid: false,\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false,\r\n    imgSrc: \"\",\r\n    saveData: \"\",\r\n    immediateLoading: false,\r\n    hideInterface: false,\r\n    gridSizeX: 25,\r\n    gridSizeY: 25,\r\n    gridLineWidth: 0.5,\r\n    hideGridX: false,\r\n    hideGridY: false,\r\n    enablePanAndZoom: false,\r\n    mouseZoomFactor: 0.01,\r\n    zoomExtents: { min: 0.33, max: 3 },\r\n    clampLinesToDocument: false,\r\n    refreshBackgroundImage: false,\r\n  };\r\n\r\n  ///// public API /////////////////////////////////////////////////////////////\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvas = {};\r\n    this.ctx = {};\r\n\r\n    this.catenary = new Catenary();\r\n\r\n    this.points = [];\r\n    this.lines = [];\r\n    this.erasedLines = [];\r\n\r\n    this.mouseHasMoved = true;\r\n    this.valuesChanged = true;\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n    this.deferRedrawOnViewChange = false;\r\n\r\n    this.interactionSM = new DefaultState();\r\n    this.coordSystem = new CoordinateSystem({\r\n      scaleExtents: props.zoomExtents,\r\n      documentSize: { width: props.canvasWidth, height: props.canvasHeight },\r\n    });\r\n    this.coordSystem.attachViewChangeListener(this.applyView.bind(this));\r\n  }\r\n\r\n  undo = () => {\r\n    let lines = [];\r\n    if (this.lines.length) {\r\n      lines = this.lines.slice(0, -1);\r\n    } else if (this.erasedLines.length) {\r\n      lines = this.erasedLines.pop();\r\n    }\r\n    this.clearExceptErasedLines();\r\n    this.simulateDrawingLines({ lines, immediate: true });\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  eraseAll = () => {\r\n    this.erasedLines.push([...this.lines]);\r\n    this.clearExceptErasedLines();\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  clear = () => {\r\n    this.erasedLines = [];\r\n    this.clearExceptErasedLines();\r\n    this.resetView();\r\n  };\r\n\r\n  resetView = () => {\r\n    return this.coordSystem.resetView();\r\n  };\r\n\r\n  setView = (view) => {\r\n    return this.coordSystem.setView(view);\r\n  };\r\n\r\n  getSaveData = () => {\r\n    // Construct and return the stringified saveData object\r\n    return JSON.stringify({\r\n      lines: this.lines,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Combination of work by Ernie Arrowsmith and emizz\r\n   * References:\r\n   * https://stackoverflow.com/questions/32160098/change-html-canvas-black-background-to-white-background-when-creating-jpg-image\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n\r\n   * This function will export the canvas to a data URL, which can subsequently be used to share or manipulate the image file.\r\n   * @param {string} fileType Specifies the file format to export to. Note: should only be the file type, not the \"image/\" prefix.\r\n   *  For supported types see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n   * @param {bool} useBgImage Specifies whether the canvas' current background image should also be exported. Default is false.\r\n   * @param {string} backgroundColour The desired background colour hex code, e.g. \"#ffffff\" for white.\r\n   */\r\n  getDataURL = (fileType, useBgImage, backgroundColour) => {\r\n    // Get a reference to the \"drawing\" layer of the canvas\r\n    let canvasToExport = this.canvas.drawing;\r\n\r\n    let context = canvasToExport.getContext(\"2d\");\r\n\r\n    //cache height and width\r\n    let width = canvasToExport.width;\r\n    let height = canvasToExport.height;\r\n\r\n    //get the current ImageData for the canvas\r\n    let storedImageData = context.getImageData(0, 0, width, height);\r\n\r\n    //store the current globalCompositeOperation\r\n    var compositeOperation = context.globalCompositeOperation;\r\n\r\n    //set to draw behind current content\r\n    context.globalCompositeOperation = \"destination-over\";\r\n\r\n    // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\r\n    if (useBgImage) {\r\n      if (!this.props.imgSrc) return \"Background image source not set\";\r\n\r\n      // Write the background image\r\n      this.drawImage();\r\n    } else if (backgroundColour != null) {\r\n      //set background color\r\n      context.fillStyle = backgroundColour;\r\n\r\n      //fill entire canvas with background colour\r\n      context.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    // If the file type has not been specified, default to PNG\r\n    if (!fileType) fileType = \"png\";\r\n\r\n    // Export the canvas to data URL\r\n    let imageData = canvasToExport.toDataURL(`image/${fileType}`);\r\n\r\n    //clear the canvas\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    //restore it with original / cached ImageData\r\n    context.putImageData(storedImageData, 0, 0);\r\n\r\n    //reset the globalCompositeOperation to what it was\r\n    context.globalCompositeOperation = compositeOperation;\r\n\r\n    return imageData;\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\r\n    if (typeof saveData !== \"string\") {\r\n      throw new Error(\"saveData needs to be of type string!\");\r\n    }\r\n\r\n    const { lines, width, height } = JSON.parse(saveData);\r\n\r\n    if (!lines || typeof lines.push !== \"function\") {\r\n      throw new Error(\"saveData.lines needs to be an array!\");\r\n    }\r\n\r\n    this.clear();\r\n\r\n\r\n    \r\n    if (\r\n      width === this.props.canvasWidth &&\r\n      height === this.props.canvasHeight\r\n    ) {\r\n      this.simulateDrawingLines({\r\n        lines,\r\n        immediate,\r\n      });\r\n    } else {\r\n      // we need to rescale the lines based on saved & current dimensions\r\n      const scaleX = this.props.canvasWidth / width;\r\n      const scaleY = this.props.canvasHeight / height;\r\n      const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n      this.simulateDrawingLines({\r\n        lines: lines.map((line) => ({\r\n          ...line,\r\n          points: line.points.map((p) => ({\r\n            x: p.x * scaleX,\r\n            y: p.y * scaleY,\r\n          })),\r\n          brushRadius: line.brushRadius * scaleAvg,\r\n        })),\r\n        immediate,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///// private API ////////////////////////////////////////////////////////////\r\n\r\n  ///// React Lifecycle\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n\r\n    this.lazy = new LazyBrush({\r\n      radius: this.props.lazyRadius * window.devicePixelRatio,\r\n      enabled: true,\r\n      initialPoint: {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2,\r\n      },\r\n    });\r\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n\r\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\r\n      this.handleCanvasResize(entries, observer)\r\n    );\r\n    this.canvasObserver.observe(this.canvasContainer);\r\n\r\n    this.drawImage();\r\n    this.loop();\r\n\r\n    window.setTimeout(() => {\r\n      const initX = window.innerWidth / 2;\r\n      const initY = window.innerHeight / 2;\r\n      this.lazy.update(\r\n        { x: initX - this.chainLength / 4, y: initY },\r\n        { both: true }\r\n      );\r\n      this.lazy.update(\r\n        { x: initX + this.chainLength / 4, y: initY },\r\n        { both: false }\r\n      );\r\n      this.mouseHasMoved = true;\r\n      this.valuesChanged = true;\r\n      this.clearExceptErasedLines();\r\n\r\n      // Load saveData from prop if it exists\r\n      if (this.props.saveData) {\r\n        this.loadSaveData(this.props.saveData);\r\n      }\r\n    }, 100);\r\n\r\n    // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\r\n    // This is necessary to prevent the default event action on chrome.\r\n    // https://github.com/facebook/react/issues/14856\r\n    this.canvas.interface &&\r\n      this.canvas.interface.addEventListener(\r\n        \"wheel\",\r\n        this.handleWheel,\r\n        makePassiveEventOption()\r\n      );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\r\n      // Set new lazyRadius values\r\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\r\n    }\r\n\r\n    if (prevProps.saveData !== this.props.saveData) {\r\n      this.loadSaveData(this.props.saveData);\r\n    }\r\n\r\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\r\n      // Signal this.loop function that values changed\r\n      this.valuesChanged = true;\r\n    }\r\n    // Refresh the Background Canvas if refreshBackgroundImage is true\r\n    // if (this.props.refreshBackgroundImage) {\r\n      if (prevProps.imgSrc !== this.props.imgSrc){\r\n      this.drawImage();\r\n      // this.drawImage({ ctx: this.ctx.grid, img: this.image });\r\n      \r\n  }\r\n\r\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\r\n    if (!this.props.enablePanAndZoom) {\r\n      this.coordSystem.resetView();\r\n    }\r\n\r\n    if (prevProps.imgSrc !== this.props.imgSrc) {\r\n      // this.drawImage();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.canvasObserver.unobserve(this.canvasContainer);\r\n    this.canvas.interface &&\r\n      this.canvas.interface.removeEventListener(\"wheel\", this.handleWheel);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"block\",\r\n          background: this.props.backgroundColor,\r\n          touchAction: \"none\",\r\n          width: this.props.canvasWidth,\r\n          height: this.props.canvasHeight,\r\n          ...this.props.style,\r\n        }}\r\n        ref={(container) => {\r\n          if (container) {\r\n            this.canvasContainer = container;\r\n          }\r\n        }}\r\n      >\r\n        {canvasTypes.map((name) => {\r\n          const isInterface = name === \"interface\";\r\n          return (\r\n            <canvas\r\n              key={name}\r\n              ref={(canvas) => {\r\n                if (canvas) {\r\n                  this.canvas[name] = canvas;\r\n                  this.ctx[name] = canvas.getContext(\"2d\");\r\n                  if (isInterface) {\r\n                    this.coordSystem.canvas = canvas;\r\n                  }\r\n                }\r\n              }}\r\n              style={{ ...canvasStyle }}\r\n              \r\n              // onMouseDown={isInterface ? this.handleDrawStart : undefined}\r\n              // onMouseMove={isInterface ? this.handleDrawMove : undefined}\r\n              // onMouseUp={isInterface ? this.handleDrawEnd : undefined}\r\n              // onMouseOut={isInterface ? this.handleDrawEnd : undefined}\r\n              onPointerDown={isInterface ? this.handleDrawStart : undefined}\r\n              onPointerMove={isInterface ? this.handleDrawMove : undefined}\r\n              onPointerUp={isInterface ? this.handleDrawEnd : undefined}\r\n              onPointerOut={isInterface ? this.handleDrawEnd : undefined}\r\n              // onTouchStart={isInterface ? this.handleDrawStart : undefined}\r\n              // onTouchMove={isInterface ? this.handleDrawMove : undefined}\r\n              // onTouchEnd={isInterface ? this.handleDrawEnd : undefined}\r\n              // onTouchCancel={isInterface ? this.handleDrawEnd : undefined}\r\n              \r\n              \r\n              \r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ///// Event Handlers\r\n\r\n  handleWheel = (e) => {\r\n    this.interactionSM = this.interactionSM.handleMouseWheel(e, this);\r\n  };\r\n\r\n  handleDrawStart = (e) => {\r\n    if (this.props.allowOnlyPointerType == 'all' ||\r\n    e.pointerType == this.props.allowOnlyPointerType\r\n       ){\r\n         \r\n         \r\n      this.interactionSM = this.interactionSM.handleDrawStart(e, this);\r\n    this.mouseHasMoved = true;\r\n    }\r\n   \r\n  };\r\n\r\n  handleDrawMove = (e) => {\r\n    if (this.props.allowOnlyPointerType == 'all' ||\r\n    e.pointerType == this.props.allowOnlyPointerType ){\r\n    this.interactionSM = this.interactionSM.handleDrawMove(e, this);\r\n    this.mouseHasMoved = true;\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e) => {\r\n    if (this.props.allowOnlyPointerType == 'all' ||\r\n    e.pointerType == this.props.allowOnlyPointerType ){\r\n    this.interactionSM = this.interactionSM.handleDrawEnd(e, this);\r\n    this.mouseHasMoved = true;\r\n    }\r\n  };\r\n\r\n  applyView = () => {\r\n    if (!this.ctx.drawing) {\r\n      return;\r\n    }\r\n\r\n    canvasTypes\r\n      .map((name) => this.ctx[name])\r\n      .forEach((ctx) => {\r\n        this.clearWindow(ctx);\r\n        const m = this.coordSystem.transformMatrix;\r\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\r\n      });\r\n\r\n    if (!this.deferRedrawOnViewChange) {\r\n      this.drawGrid(this.ctx.grid);\r\n      this.redrawImage();\r\n      this.loop({ once: true });\r\n\r\n      const lines = this.lines;\r\n      this.lines = [];\r\n      this.simulateDrawingLines({ lines, immediate: true });\r\n    }\r\n  };\r\n\r\n  handleCanvasResize = (entries) => {\r\n    const saveData = this.getSaveData();\r\n    this.deferRedrawOnViewChange = true;\r\n    try {\r\n      for (const entry of entries) {\r\n        const { width, height } = entry.contentRect;\r\n        this.setCanvasSize(this.canvas.interface, width, height);\r\n        this.setCanvasSize(this.canvas.drawing, width, height);\r\n        this.setCanvasSize(this.canvas.temp, width, height);\r\n        this.setCanvasSize(this.canvas.grid, width, height);\r\n\r\n        this.coordSystem.documentSize = { width, height };\r\n        this.drawGrid(this.ctx.grid);\r\n        this.drawImage();\r\n        this.loop({ once: true });\r\n      }\r\n      this.loadSaveData(saveData, true);\r\n    } finally {\r\n      this.deferRedrawOnViewChange = false;\r\n    }\r\n  };\r\n\r\n  ///// Helpers\r\n\r\n  clampPointToDocument = (point) => {\r\n    if (this.props.clampLinesToDocument) {\r\n      return {\r\n        x: Math.max(Math.min(point.x, this.props.canvasWidth), 0),\r\n        y: Math.max(Math.min(point.y, this.props.canvasHeight), 0),\r\n      };\r\n    } else {\r\n      return point;\r\n    }\r\n  };\r\n\r\n  redrawImage = () => {\r\n    this.image &&\r\n      this.image.complete &&\r\n      drawImage({ ctx: this.ctx.grid, img: this.image });\r\n  };\r\n\r\n  simulateDrawingLines = ({ lines, immediate }) => {\r\n    // Simulate live-drawing of the loaded lines\r\n    // TODO use a generator\r\n    let curTime = 0;\r\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\r\n\r\n    lines.forEach((line) => {\r\n      const { points, brushColor, brushRadius } = line;\r\n\r\n      // Draw all at once if immediate flag is set, instead of using setTimeout\r\n      if (immediate) {\r\n\r\n\r\n       \r\n        \r\n          \r\n            // this.drawPoints({\r\n            //   points: points.slice(0, 1),\r\n            //   brushColor,\r\n            //   brushRadius,\r\n            // });\r\n    \r\n            // // Save line with the drawn points\r\n            // this.points = points;\r\n            // this.saveLine({ brushColor, brushRadius });\r\n\r\n\r\n        // Draw the points\r\n        this.drawPoints({\r\n          points,\r\n          brushColor,\r\n          brushRadius,\r\n        });\r\n\r\n        // Save line with the drawn points\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n        this.saveLine({ brushColor, brushRadius });\r\n        \r\n        return;\r\n\r\n\r\n\r\n      }\r\n       else {\r\n        \r\n      \r\n      // Use timeout to draw\r\n      for (let i = 1; i < points.length; i++) {\r\n        curTime += timeoutGap;\r\n        window.setTimeout(() => {\r\n          this.drawPoints({\r\n            points: points.slice(0, i + 1),\r\n            brushColor,\r\n            brushRadius,\r\n          });\r\n        }, curTime);\r\n      }\r\n\r\n      curTime += timeoutGap;\r\n      window.setTimeout(() => {\r\n        // Save this line with its props instead of this.props\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n      }, curTime);\r\n    }\r\n    });\r\n    \r\n  };\r\n\r\n  setCanvasSize = (canvas, width, height) => {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width;\r\n    canvas.style.height = height;\r\n  };\r\n\r\n  drawPoints = ({ points, brushColor, brushRadius }) => {\r\n    this.ctx.temp.lineJoin = \"round\";\r\n    this.ctx.temp.lineCap = \"round\";\r\n    this.ctx.temp.strokeStyle = brushColor === \"erase\" ? \"#dbb7bb\" : brushColor;\r\n    this.ctx.drawing.globalCompositeOperation = (brushColor === \"erase\") ? \"destination-out\" : (brushColor === \"shadow\")? \"destination-over\":\"source-over\";\r\n    \r\n    this.clearWindow(this.ctx.temp);\r\n    this.ctx.temp.lineWidth = brushRadius * 2;\r\n    \r\n    \r\n    let p1 = points[0];\r\n    let p2 = points[1];\r\n\r\n    this.ctx.temp.moveTo(p2.x, p2.y);\r\n    this.ctx.temp.beginPath();\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      // we pick the point between pi+1 & pi+2 as the\r\n      // end point and p1 as our control point\r\n      var midPoint = midPointBtw(p1, p2);\r\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      p1 = points[i];\r\n      p2 = points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    this.ctx.temp.lineTo(p1.x, p1.y);\r\n    \r\n    if(brushColor == \"shadow\"){\r\n      this.ctx.temp.closePath();\r\n      this.ctx.temp.fillStyle= '#DADADA';\r\n      // this.ctx.temp.fillStyle = 'rgba(255, 0, 0, 0.5)';\r\n      this.ctx.temp.fill();\r\n    }\r\n    else{\r\n      this.ctx.temp.stroke();\r\n    }\r\n    \r\n  };\r\n\r\n  saveLine = ({ brushColor, brushRadius } = {}) => {\r\n    if (this.points.length < 2) return;\r\n   \r\n    // Save as new line\r\n    this.lines.push({\r\n      points: [...this.points],\r\n      brushColor: brushColor || this.props.brushColor,\r\n      brushRadius: brushRadius || this.props.brushRadius,\r\n    });\r\n\r\n    // Reset points array\r\n    this.points.length = 0;\r\n\r\n    // Copy the line to the drawing canvas\r\n    this.inClientSpace([this.ctx.drawing, this.ctx.temp], () => {\r\n      this.ctx.drawing.drawImage(\r\n        this.canvas.temp,\r\n        0,\r\n        0,\r\n        this.canvas.drawing.width,\r\n        this.canvas.drawing.height\r\n      );\r\n    });\r\n\r\n    // Clear the temporary line-drawing canvas\r\n    this.clearWindow(this.ctx.temp);\r\n\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  triggerOnChange = () => {\r\n    this.props.onChange && this.props.onChange(this);\r\n  };\r\n\r\n  clearWindow = (ctx) => {\r\n    this.inClientSpace([ctx], () =>\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    );\r\n  };\r\n\r\n  clearExceptErasedLines = () => {\r\n    this.lines = [];\r\n    this.valuesChanged = true;\r\n    this.clearWindow(this.ctx.drawing);\r\n    this.clearWindow(this.ctx.temp);\r\n  };\r\n\r\n  loop = ({ once = false } = {}) => {\r\n    if (this.mouseHasMoved || this.valuesChanged) {\r\n      const pointer = this.lazy.getPointerCoordinates();\r\n      const brush = this.lazy.getBrushCoordinates();\r\n      \r\n\r\n      this.drawInterface(this.ctx.interface, pointer, brush);\r\n      this.mouseHasMoved = false;\r\n      this.valuesChanged = false;\r\n    }\r\n\r\n    if (!once) {\r\n      window.requestAnimationFrame(() => {\r\n        this.loop();\r\n      });\r\n    }\r\n  };\r\n\r\n  inClientSpace = (ctxs, action) => {\r\n    ctxs.forEach((ctx) => {\r\n      ctx.save();\r\n      ctx.setTransform(\r\n        IDENTITY.a,\r\n        IDENTITY.b,\r\n        IDENTITY.c,\r\n        IDENTITY.d,\r\n        IDENTITY.e,\r\n        IDENTITY.f\r\n      );\r\n    });\r\n\r\n    try {\r\n      action();\r\n    } finally {\r\n      ctxs.forEach((ctx) => ctx.restore());\r\n    }\r\n  };\r\n\r\n  ///// Canvas Rendering\r\n\r\n  drawImage = () => {\r\n    if (!this.props.imgSrc) return;\r\n    \r\n    // Load the image\r\n    this.image = new Image();\r\n    // this.image.src = this.props.imgSrc;\r\n    // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\r\n    this.image.crossOrigin = \"anonymous\";\r\n\r\n    // Draw the image once loaded\r\n    this.image.onload = this.redrawImage;\r\n    this.image.src = this.props.imgSrc;\r\n  };\r\n\r\n  drawGrid = (ctx) => {\r\n    if (this.props.hideGrid) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    const gridSize = 25;\r\n    const { viewMin, viewMax } = this.coordSystem.canvasBounds;\r\n    const minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\r\n    const miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\r\n    const maxx = viewMax.x + gridSize;\r\n    const maxy = viewMax.y + gridSize;\r\n\r\n    ctx.beginPath();\r\n    ctx.setLineDash([5, 1]);\r\n    ctx.setLineDash([]);\r\n    ctx.strokeStyle = this.props.gridColor;\r\n    ctx.lineWidth = this.props.gridLineWidth;\r\n\r\n    if (!this.props.hideGridX) {\r\n      let countX = minx;\r\n      const gridSizeX = this.props.gridSizeX;\r\n      while (countX < maxx) {\r\n        countX += gridSizeX;\r\n        ctx.moveTo(countX, miny);\r\n        ctx.lineTo(countX, maxy);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n\r\n    if (!this.props.hideGridY) {\r\n      let countY = miny;\r\n      const gridSizeY = this.props.gridSizeY;\r\n      while (countY < maxy) {\r\n        countY += gridSizeY;\r\n        ctx.moveTo(minx, countY);\r\n        ctx.lineTo(maxx, countY);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  drawInterface = (ctx, pointer, brush) => {\r\n    if (this.props.hideInterface) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    // Draw brush preview\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.brushColor;\r\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw mouse point (the one directly at the cursor)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(pointer.x, pointer.y, 2, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // // Draw catenary\r\n    // if (this.lazy.isEnabled()) {\r\n    //   ctx.beginPath();\r\n    //   ctx.lineWidth = 2;\r\n    //   ctx.lineCap = \"round\";\r\n    //   ctx.setLineDash([2, 4]);\r\n    //   ctx.strokeStyle = this.props.catenaryColor;\r\n    //   this.catenary.drawToCanvas(\r\n    //     this.ctx.interface,\r\n    //     brush,\r\n    //     pointer,\r\n    //     this.chainLength\r\n    //   );\r\n    //   ctx.stroke();\r\n    // }\r\n\r\n    // Draw brush point (the one in the middle of the brush preview)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(brush.x, brush.y, 1, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  };\r\n}\r\n","/** \r\n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\r\n * Original By Ken Fyrstenberg Nilsen\r\n * \r\n * Note: img must be fully loaded or have correct width & height set.\r\n */\r\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\r\n  // Defaults\r\n  if (typeof x !== \"number\") x = 0;\r\n  if (typeof y !== \"number\") y = 0;\r\n  if (typeof w !== \"number\") w = ctx.canvas.width;\r\n  if (typeof h !== \"number\") h = ctx.canvas.height;\r\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\r\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\r\n\r\n  // keep bounds [0.0, 1.0]\r\n  if (offsetX < 0) offsetX = 0;\r\n  if (offsetY < 0) offsetY = 0;\r\n  if (offsetX > 1) offsetX = 1;\r\n  if (offsetY > 1) offsetY = 1;\r\n\r\n  var iw = img.width,\r\n    ih = img.height,\r\n    r = Math.min(w / iw, h / ih),\r\n    nw = iw * r, // new prop. width\r\n    nh = ih * r, // new prop. height\r\n    cx,\r\n    cy,\r\n    cw,\r\n    ch,\r\n    ar = 1;\r\n\r\n  // decide which gap to fill\r\n  if (nw < w) ar = w / nw;\r\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\r\n  nw *= ar;\r\n  nh *= ar;\r\n\r\n  // calc source rectangle\r\n  cw = iw / (nw / w);\r\n  ch = ih / (nh / h);\r\n\r\n  cx = (iw - cw) * offsetX;\r\n  cy = (ih - ch) * offsetY;\r\n\r\n  // make sure source rectangle is valid\r\n  if (cx < 0) cx = 0;\r\n  if (cy < 0) cy = 0;\r\n  if (cw > iw) cw = iw;\r\n  if (ch > ih) ch = ih;\r\n\r\n  // fill image in dest. rectangle\r\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\r\n}\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef,useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport   firebase from \"firebase/compat/app\";\r\n\r\nconst CCsubmit =({CsubmitObj, isOwner,viewDeleyToggle})=>{\r\n    const [editing,setEditing]= useState(false);\r\n    const [newCsubmit,setnewCsubmit]=useState(CsubmitObj.text);\r\n    // const [givedHeart,setGivedHeart]=useState(false)\r\n    // const [yourheart,setYourHeart]=useState(CsubmitObj.heart);\r\n    const canvasRef2 = useRef();\r\n    const [onOff,setOnOff]=useState(true);\r\n    // const [onReview,setOnReview]= useState(false);\r\n    // const [offReview,setoffReview]= useState(false);\r\n    // // canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n    let uploadDay= new Date(CsubmitObj.createdAt);\r\n    const [viewRefPin,setViewRefpin]=useState(false);\r\n    // useEffect(() => {\r\n    //    \r\n    //     //  if(viewsToggle && onOff){\r\n    //     //     canvasRef2.current.loadSaveData(CsubmitObj.text,true);\r\n    //     //     setOnOff(false)\r\n    //     //  }\r\n        \r\n    // },[editing]);\r\n    const onDeleteClick= () => {\r\n        const ok = window.confirm(\"wanna delete this?\")\r\n        if(ok){\r\n            dbService.doc(`Csubmit/${CsubmitObj.id}`).delete();\r\n            \r\n        }\r\n    };\r\n    const toggleReview=()=> {\r\n        canvasRef2.current.clear();\r\n        // canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n        canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n        \r\n    };\r\n    const offReview=()=>{\r\n        setEditing(false);\r\n            // 강제 이미지추가\r\n            // console.log('none')\r\n            // const dataUrl=canvasRef2.current.getDataURL();\r\n        \r\n    \r\n        \r\n            // dbService.doc(`Csubmit/${CsubmitObj.id}`).update({\r\n            \r\n            // dataUrl:dataUrl,\r\n           //  refPhoto:{refPhoto},\r\n            //pinNumber:randomPinNum,\r\n        // });\r\n        \r\n    }\r\n    const onReview=()=> {setEditing(true);\r\n        setTimeout(function() {\r\n            canvasRef2.current.loadSaveData(CsubmitObj.text);\r\n            \r\n            \r\n          }, 5);\r\n        }\r\n    const onSubmit = (event)=> {\r\n        event.preventDefault();\r\n        const data = canvasRef2.current.getSaveData();\r\n        const dataUrl=canvasRef2.current.getDataURL();\r\n        dbService.doc(`Csubmit/${CsubmitObj.id}`).update({\r\n            text:data,\r\n            dataUrl:dataUrl\r\n        });\r\n        setEditing(false);\r\n\r\n    }\r\n    const onChange = (event)=> {\r\n        const {target:{value},\r\n        }=event;\r\n        setnewCsubmit(value);\r\n    }\r\n    //const toggleheart=()=> setYourHeart(prev => !prev);\r\n    const onHeartClick= async() =>{\r\n        setOnOff(prev => !prev);\r\n        await dbService.doc(`Csubmit/${CsubmitObj.id}`).update({\r\n           heart:(1+(CsubmitObj.heart)),\r\n        })\r\n        console.log(CsubmitObj.heart)\r\n        const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n        pinDocRef.update({\r\n            heart:firebase.firestore.FieldValue.arrayUnion(CsubmitObj.refPinUrl)\r\n        });\r\n    }\r\n\r\n\r\n    \r\n     \r\n    return(\r\n        <div   style={{float:'left', border: '10px solid rgba(0, 0, 0, 0.05)',width:\"420px\"\r\n        }}>\r\n            \r\n        {\r\n            editing ? (\r\n            <>\r\n            <button onClick={onSubmit}>Edit</button>\r\n            {/* <form onSubmit={onSubmit}><input value={newCsubmit} required onChange={onChange}/>\r\n            <input type={\"submit\"} value=\"edit\"/>\r\n            </form> */}\r\n            \r\n            <div><CanvasDraw \r\n            // style={{ touchAction: 'disabled'  ? 'auto' : 'none' }}\r\n            ref={canvasRef2}\r\n            //  disabled\r\n            // hideInterface\r\n            brushRadius={0.6}\r\n              lazyRadius={0.5}\r\n              \r\n              brushColor={\"#df6161\"}\r\n              allowOnlyPointerType={\"pen\"}\r\n             loadTimeOffset={5}\r\n             /></div>\r\n             \r\n             <button onClick={toggleReview}>Rewind</button>\r\n             <button onClick={offReview}>Cancel</button>\r\n             \r\n            </>\r\n            ):(\r\n            <>\r\n            \r\n            <div style={{margin: '0 auto'}}>\r\n            <LazyLoadImage\r\n            \r\n      \r\n      height={400}\r\n      src={CsubmitObj.dataUrl} // use normal <img> attributes as props\r\n       />\r\n      {/* <img src={CsubmitObj.dataUrl} height=\"400px\" ></img> */}\r\n      </div>\r\n            \r\n            \r\n        {isOwner ? (\r\n            <>\r\n\r\n            {/* <button disabled>❤ {CsubmitObj.heart}</button> */}\r\n            <button onClick={onHeartClick}>❤{CsubmitObj.heart}</button>\r\n            <button onClick={onDeleteClick}>Delete</button>\r\n            <button onClick={onReview}>Review</button>\r\n            \r\n            \r\n            </>\r\n        ):(\r\n            <>\r\n            <button onClick={onHeartClick}>❤ {CsubmitObj.heart}</button>\r\n            \r\n            </>\r\n        )}\r\n\r\n            \r\n            \r\n                \r\n            \r\n            \r\n            \r\n            \r\n        </>\r\n            \r\n            \r\n            \r\n            \r\n\r\n            )}\r\n            <button onClick={()=>{setViewRefpin(pre=>!pre)}}>Ref Pin</button>\r\n            {\"   \"}  {uploadDay.toLocaleString(navigator.language || navigator.userLanguage)}\r\n            {viewRefPin ? (<>\r\n                <div><iframe  src={\"https://assets.pinterest.com/ext/embed.html?id=\"+CsubmitObj.refPinUrl} height=\"600\" width=\"300\" frameBorder={0} scrolling=\"no\" ></iframe>\r\n                </div></>):(<></>)}\r\n    </div>\r\n)\r\n};\r\n    \r\n\r\nexport default CCsubmit;","import CCsubmit from \"components/Csubmit\";\r\nimport { authService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport _ from 'lodash';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default ({userObj}) => {\r\n    const onLogOutClick = () => {\r\n      const ok = window.confirm(\"wanna logout?\")\r\n        if(ok){\r\n          authService.signOut();}\r\n        }\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [viewToggle,setViewToggle]=useState(false);\r\n    const [viewDeleyToggle,setViewDeleyToggle]=useState(false);\r\n    const [Cdate, setCdate] = useState(new Date());\r\n    // const getMyCroquis = async()=>{\r\n    //     const croquisPost = await dbService.collection(\"Csubmit\")\r\n    //     .where(\"creatorId\",\"==\",userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"desc\")\r\n    //     .get();\r\n    //     console.log(croquisPost.docs.map((doc)=>doc.data()));\r\n    //     setCsubmits(croquisPost.docs.map((doc)=>doc.data()));\r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //     getMyCroquis();\r\n    // },[]);\r\n    const [startDate,setStartDate]=useState(2658674800000)\r\n    const [listEnd,setListEnd]=useState(100)\r\n    const [isCalendar,setIsCalender]=useState(false)\r\n    // const [lastScrollTop, setLastScrollTop] = useState(0);\r\n    // const [bodyOffset, setBodyOffset] = useState(\r\n    //   document.body.getBoundingClientRect()\r\n    // );\r\n    // const [scrollY, setScrollY] = useState(bodyOffset.top);\r\n    // const [isLoading,setIsLoading] = useState(true)\r\n      \r\n    // const listener = e => {\r\n    //   // setBodyOffset(document.body.getBoundingClientRect());\r\n    //   // setScrollY(-bodyOffset.top);\r\n    //   // if(window.innerHeight + document.documentElement.scrollTop>document.documentElement.offsetHeight-10){\r\n    //   //   console.log(window.innerHeight)\r\n    //   //   console.log(document.documentElement.scrollTop)\r\n    //   //   console.log(document.documentElement.offsetHeight)\r\n    //   //   setListEnd(pre=>pre+10)\r\n    //   //   return;\r\n    //   // }\r\n    //   if((window.innerHeight + document.documentElement.scrollTop>document.documentElement.offsetHeight-100)&&isLoading){\r\n    //     setListEnd(pre=>pre+10)\r\n    //     setIsLoading(false)\r\n    //     console.log(\"scrolling down\");\r\n    //     return;\r\n    //   }\r\n    //   else {\r\n    //     setIsLoading(true)\r\n        \r\n    //   }\r\n    // };\r\n  \r\n    // useEffect(() => {\r\n    //   window.addEventListener(\"scroll\", _.throttle(listener, 100));\r\n    //   // console.log(scrollY)\r\n    //   // console.log(bodyOffset)\r\n    //   // console.log(\"d\")\r\n    //   return () => {\r\n    //     window.removeEventListener(\"scroll\", _.throttle(listener, 100));\r\n        \r\n    //   };\r\n    // });\r\n    // useEffect(() => {\r\n    //   const throttledCount = _.throttle(listener, 100);\r\n    //   window.addEventListener('scroll', throttledCount);\r\n    //   return () => window.removeEventListener('scroll', throttledCount);\r\n    // }, []);\r\n  \r\n  \r\n\r\n    useEffect(()=> {  \r\n    dbService.collection(\"Csubmit\")\r\n        .where(\"creatorId\",\"==\",userObj.uid)\r\n        .orderBy(\"createdAt\",\"desc\")\r\n        // .endAt(Date.now()-listEnd)\r\n        .where(\"createdAt\", \"<\", startDate+86400000)\r\n        .limit(listEnd)\r\n        // .get((snapshot) =>{\r\n        .onSnapshot((snapshot) =>{\r\n        const CsubmitArray = snapshot.docs.map((doc)=>({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        \r\n        setCsubmits(CsubmitArray);\r\n        //console.log(Csubmits);\r\n    });\r\n\r\n\r\n    },[startDate]);\r\n    // },[]);\r\n    const onChangeTime = (event)=> {\r\n      const {\r\n          target:{value},\r\n      }=event;\r\n      setListEnd(value);\r\n     \r\n      console.log(\"ddd\")\r\n\r\n      \r\n  }\r\n  const nextPage = ()=>{\r\n    setListEnd(pre=>pre+100);\r\n  }\r\n  const clickCroquisDate=(value)=>{\r\n    setStartDate(value.getTime())\r\n    console.log(value.getTime());\r\n  }\r\n\r\n\r\n  \r\n    return (\r\n    <>\r\n        \r\n        \r\n        <span>Profile</span>\r\n      \r\n      \r\n        \r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        <button onClick={()=>{setIsCalender(pre=>!pre)}}>Calender</button>\r\n      {  isCalendar?(<>\r\n        <Calendar \r\n        // onClickDay={setCdate} \r\n        value={Cdate} onClickDay={clickCroquisDate} calendarType={\"US\"} />\r\n      </>):(<></>)}\r\n        \r\n        <input value={listEnd} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n        <div>\r\n          {Csubmits.map((Csubmit)=>(\r\n              \r\n              <CCsubmit \r\n            //   key={Csubmit.id} \r\n              CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} viewsToggle={viewDeleyToggle}  />\r\n              \r\n          ))}\r\n      \r\n      </div>\r\n      <div>\r\n      <button style={{\r\n           float: 'right',\r\n           \r\n           margin: '10px',\r\n           marginRight: '500px',\r\n          padding:'15px 30px'}} onClick={nextPage}>Next Page</button>\r\n      </div>\r\n      \r\n      \r\n      \r\n        {/* {viewToggle ?(<>\r\n            <button onClick={(e)=>{setViewToggle(false)}}>\r\n          Close Drawings</button>\r\n          \r\n      </>):(<>\r\n        <button onClick={(e)=>{setViewToggle(true)}}>\r\n        \r\n          Show Drawings</button>\r\n      \r\n        </>)} */}\r\n        \r\n       \r\n            {/* <button onClick={(e)=>{setViewToggle(true)}}>\r\n          Close Drawings</button>\r\n          <div>\r\n          {Csubmits.map((Csubmit)=>(\r\n              \r\n              <CCsubmit \r\n            //   key={Csubmit.id} \r\n              CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} viewsToggle={viewToggle}  />\r\n              \r\n          ))}\r\n      </div> */}\r\n         \r\n        \r\n    </>\r\n    \r\n    )\r\n};","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail]= useState(\"\");\r\n    const [password, setPassword]= useState(\"\");\r\n    const [newAccount, setNewAccount]= useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event)=>{\r\n        \r\n        const {target: {name,value}}= event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event)=>{\r\n            event.preventDefault();\r\n            try{\r\n                let data;\r\n            if(newAccount){\r\n                // data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            console.log(data)\r\n        } catch (error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = ()=> setNewAccount(prev => !prev)\r\n    return(\r\n\r\n    <div>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                name=\"email\" \r\n                type={\"email\"} \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email} \r\n                onChange={onChange}/>\r\n            <input name=\"password\" type={\"password\"} placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n            <input type={\"submit\"} value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n            {error}\r\n        </form>\r\n        {/* <span onClick={toggleAccount}> \r\n        {newAccount ? \"Sign In\" : \"Create Account\" }</span> */}\r\n        {/* <div>\r\n            <button>Continue with Google</button>\r\n            <button>Continue with Github</button>\r\n        </div> */}\r\n    </div>\r\n    )};\r\n    \r\nexport default Auth;","//import CCsubmit from \"../components/Csubmit\";\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { dbService ,storageService} from \"fbase\";\r\nimport React, { useEffect, useRef, useState,useCallback } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\n\r\n const Home=({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [Line,setLine]= useState([]);\r\n    const canvasRef = useRef();\r\n    const [pinNum,setPinNum]=useState(\"\");\r\n    const [randomPinNum,setRandomPinNum]=useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const [pinID,setPinID]=useState(0);\r\n    const [croquisTime,setCroquisTime]=useState(60);\r\n    const allowPointerType=[\"all\",\"mouse\",\"touch\",\"pen\"]\r\n    const [pointerTypeIndex,setPointerTypeIndex]=useState(3)\r\n    //allowpointertype으로 터치허용유무설정가능 일단 펜만 가능하게함. 나중에하는걸로\r\n        const [min,setMin]=useState(0);\r\n        const [sec,setSec]=useState(0);\r\n        const time=useRef(croquisTime);\r\n        const timeId=useRef(null);\r\n        const [drawSetting,setDrawSetting]=useState({\r\n            croquisTimeDB:60,\r\n            brushRadius:1,\r\n            lazyRadius:1,\r\n            eraseRadius:10,\r\n            \r\n\r\n\r\n        })\r\n    const [timeSetBottonToggle,setTimeSetBottonToggle]=useState(false);\r\n\r\n\r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n\r\n\r\n    \r\n\r\n    const getMyCroquisSettings = ()=>{\r\n              dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDrawSetting({\r\n                    brushRadius:doc.data().brushRadius,\r\n                    lazyRadius:doc.data().lazyRadius,\r\n                    eraseRadius:doc.data().eraseRadius,\r\n                    croquisTimeDB:doc.data().croquisTimeDB,\r\n                    })\r\n                    setCroquisTime(doc.data().croquisTimeDB)\r\n                console.log(doc.data())\r\n                console.log(croquisTime)\r\n                time.current+=doc.data().croquisTimeDB-60;\r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such setting document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n    }\r\n    const updateSetting =(event)=>{\r\n      // console.log(drawSetting.croquisTimeDB,typeof(drawSetting.croquisTimeDB))\r\n      // console.log(drawSetting.brushRadius,typeof(drawSetting.brushRadius))\r\n      // console.log(drawSetting.lazyRadius,typeof(drawSetting.lazyRadius))\r\n      // console.log(drawSetting.eraseRadius,typeof(drawSetting.eraseRadius))\r\n        dbService.collection(\"usersetting\").doc(userObj.uid).update({\r\n            brushRadius:drawSetting.brushRadius,\r\n            lazyRadius:drawSetting.lazyRadius,\r\n            croquisTimeDB:drawSetting.croquisTimeDB,\r\n            eraseRadius:drawSetting.eraseRadius,\r\n            \r\n        });\r\n    }\r\n    const refreshAndSubmit =()=>{\r\n        setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n            //console.log(\"timeout\",randomPinNum[pinID])\r\n            \r\n            time.current=croquisTime;\r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:croquisTime-min*60-sec,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:randomPinNum[pinID]\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n    const noRefreshAndSubmit =()=>{\r\n        \r\n            //console.log(\"timeout\",randomPinNum[pinID])\r\n            \r\n            time.current=croquisTime;\r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:croquisTime-min*60-sec,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:randomPinNum[pinID]\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n    useEffect(()=> {\r\n      \r\n      getMyCroquisSettings();\r\n     \r\n        timeId.current= setInterval(()=>{\r\n            setMin(parseInt(time.current/60));\r\n            setSec(time.current % 60);\r\n            time.current -= 1;\r\n        },1000);\r\n        return()=> clearInterval(timeId.current);\r\n    },[]);\r\n\r\n    useEffect(()=> {\r\n        if(time.current<=-1){\r\n            refreshAndSubmit();\r\n            \r\n            \r\n        }\r\n    },[sec]);\r\n\r\n    useEffect(()=> {\r\n      \r\n             \r\n     \r\n       \r\n             dbService.doc(`RefDB/refStrings`).get().then((doc) => {\r\n            if (doc.exists) {\r\n                //console.log(\"Document data:\", doc.data().refUrl);\r\n                //setRandomPinNum(doc.data().refUrl);\r\n                //console.log(\"doc\",doc.data().refUrl)\r\n                const random=doc.data().refUrl.sort(() => Math.random() - 0.5);\r\n                \r\n                \r\n                setRandomPinNum(random);\r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n       \r\n        // dbService.collection(\"Csubmit\").onSnapshot((snapshot) =>{\r\n        //     const CsubmitArray = snapshot.docs.map((doc)=>({\r\n        //         id: doc.id,\r\n        //         ...doc.data(),\r\n        //     }));\r\n            \r\n        //     setCsubmits(CsubmitArray);\r\n        //     //console.log(Csubmits);\r\n        // });\r\n\r\n        \r\n        \r\n\r\n    },[]);\r\n     const onSubmitOnlyCanvas= (event) => {\r\n         event.preventDefault();\r\n        //  const data = canvasRef.current.getSaveData();\r\n        //  canvasRef.current.clear();\r\n     \r\n         \r\n        //  await dbService.collection(\"Csubmit\").add({\r\n        //      text:data,\r\n        //      createdAt: Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //      heart:(0),\r\n        //     //  refPhoto:{refPhoto},\r\n        //      //pinNumber:randomPinNum,\r\n        //  });\r\n        //  setCsubmit(\"\"); \r\n        noRefreshAndSubmit();\r\n     };\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n        //  const data = canvasRef.current.getSaveData();\r\n        //  canvasRef.current.clear();\r\n     \r\n         \r\n        //  await dbService.collection(\"Csubmit\").add({\r\n        //      text:data,\r\n        //      createdAt: Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //      heart:(0),\r\n        //     //  refPhoto:{refPhoto},\r\n        //      //pinNumber:randomPinNum,\r\n        //  });\r\n        //  setCsubmit(\"\"); \r\n        refreshAndSubmit();\r\n     };\r\n     const onSubmitPinNum= (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(pinNum.match(\",\")){\r\n            \r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n         \r\n            pinNum.split(\",\").forEach(e => {\r\n                console.log(e)\r\n                pinDocRef.update({\r\n                    refUrl:firebase.firestore.FieldValue.arrayUnion(e)\r\n            }); \r\n            \r\n        });\r\n        }else{\r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n            pinDocRef.update({\r\n            refUrl:firebase.firestore.FieldValue.arrayUnion(pinNum)\r\n        });\r\n        }\r\n\r\n        \r\n           \r\n        setPinNum(\"\")\r\n\r\n     }\r\n     const onChange = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setPinNum(value);\r\n     }\r\n     const onChangeTime = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setCroquisTime(value);\r\n         setDrawSetting(prevState=>({...prevState, croquisTimeDB: event.target.value }))\r\n         \r\n     }\r\n\r\n     const onSubmitTime= (event) => {\r\n        event.preventDefault();\r\n        setTimeSetBottonToggle(false)\r\n        \r\n        //setCroquisTime(0)\r\n     }\r\n\r\n     const onDeletePinClick= () => {\r\n      \r\n      const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n      pinDocRef.update({\r\n        refUrl:firebase.firestore.FieldValue.arrayRemove(randomPinNum[pinID])\r\n  });\r\n  setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n    };\r\n\r\n\r\n\r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n        if(ok){\r\n          canvasRef.current.clear();\r\n            \r\n        }\r\n        \r\n    };\r\n     const onUndoClick= () => {\r\n        canvasRef.current.undo();\r\n    };\r\n     const onEraseClick= () => {\r\n        setBrushColor(\"erase\")\r\n        \r\n    };\r\n     const onShadowClick= () => {\r\n        setBrushColor(\"shadow\")\r\n        \r\n    };\r\n     const onBrushClick= () => {\r\n        setBrushColor(\"#444\")\r\n        \r\n    };\r\n\r\n    function ordinal_suffix_of(i) {\r\n        var j = i % 10,\r\n            k = i % 100;\r\n        if (j == 1 && k != 11) {\r\n            return i + \"st\";\r\n        }\r\n        if (j == 2 && k != 12) {\r\n            return i + \"nd\";\r\n        }\r\n        if (j == 3 && k != 13) {\r\n            return i + \"rd\";\r\n        }\r\n        return i + \"th\";\r\n    }\r\n    function sexagesimal(i) {\r\n        if(i <= 9){\r\n            return \"0\"+i;\r\n        }else{\r\n            return i;\r\n        }\r\n    }\r\n    //  const onChange = (event)=> {\r\n    //      const {\r\n    //          target:{value},\r\n    //      }=event;\r\n    //      setCsubmit(value);\r\n    //  }\r\n\r\n    //  const onSubmitImage= async(event) => {\r\n    //     event.preventDefault();\r\n    //     const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n    //     const response = await fileRef.putString(imageString,\"data_url\");\r\n    //     const imageUrl =await response.ref.getDownloadURL();\r\n    //     setImageString(\"\");\r\n    //  }\r\n    //  const onFileChange= (event)=>{\r\n    //     const {\r\n    //         target:{files}\r\n    //     }= event;\r\n    //     const theFile = files[0];\r\n    //     const reader= new FileReader();\r\n    //     reader.onloadend = (finishedEvent)=>{\r\n    //         const {\r\n    //             currentTarget:{result},\r\n    //         }=finishedEvent;\r\n            \r\n    //         setImageString(result);\r\n    //     }\r\n    //     reader.readAsDataURL(theFile);\r\n    //  }\r\n\r\n  return(\r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        if (keyName == \"ctrl+z\") { onUndoClick(); }\r\n        if (keyName == \"c\") {\r\n          if (brushColor != \"erase\") { onEraseClick(); }\r\n          else if (brushColor == \"erase\") { onBrushClick(); }\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n    ></Hotkeys>\r\n    <div>\r\n        {/* <PieChart style={{ height: '35px' }}\r\n    data={[{ value: 1, key: 1, color: '#E38627' }]}\r\n    startAngle={-90}\r\n    reveal={-100*(min*60+sec)/croquisTime}\r\n    lineWidth={100}\r\n    // background=\"#f3f3f3\"\r\n    lengthAngle={360}\r\n    /> */}\r\n        <div style={{ float: 'right' }}>\r\n          {timeSetBottonToggle ? (<>\r\n            <form onSubmit={onSubmitTime}>\r\n              <input value={croquisTime} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n              <input type={\"submit\"} value=\"Set Time\" />\r\n\r\n            </form>\r\n            <button onClick={onDeletePinClick}>Delete Pin</button>\r\n          </>) : (<>\r\n            {ordinal_suffix_of(pinID + 1)}\r\n            <button onClick={(e) => { setTimeSetBottonToggle(true); } }>\r\n              Set Time</button>\r\n\r\n          </>)}\r\n          <button onClick={updateSetting}>Update Setting</button>\r\n          {/* <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.pinWidth}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, pinWidth: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.pinHeight}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, pinHeight: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.canvasWidth}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, canvasWidth: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.canvasHeight}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, canvasHeight: e.target.value }))\r\n          }\r\n        /> */}\r\n        </div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n        </div>\r\n        <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmitOnlyCanvas}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload&Redraw\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n        \r\n\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          width: '70px',\r\n          textAlign: 'center',\r\n\r\n          background: 'linear-gradient(to left,#FFC365 ' + (min * 60 + sec) * 100 / croquisTime + '%,#E8E8E8 ' + (min * 60 + sec) * 100 / croquisTime + '%)'\r\n        }}>\r\n          {min}: {sexagesimal(sec)}\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <form onSubmit={onSubmitPinNum}>\r\n            <input value={pinNum} onChange={onChange} type={\"text\"} placeholder=\"You Can Upload Pinterst Pin By Url Number\" />\r\n            <input type={\"submit\"} value=\"Upload Pin\" />\r\n\r\n          </form>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          <iframe key={pinReload} src={\"https://assets.pinterest.com/ext/embed.html?id=\" + randomPinNum[pinID]} height={770} width={400} frameBorder={0} scrolling=\"no\"></iframe>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n              \r\n\r\n\r\n            </div>\r\n            \r\n            <div style={{ float: 'left' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'left' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n\r\n\r\n            </div>\r\n            <div style={{ float: 'left' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>\r\n          \r\n\r\n\r\n            \r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor}\r\n              // enablePanAndZoom={true}  \r\n              allowOnlyPointerType={allowPointerType[pointerTypeIndex]} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* <form onSubmit={onSubmitImage}>\r\n          <input type={\"file\"} accept=\"image/*\" onChange={onFileChange}/>\r\n          <input type={\"submit\"} value=\"Upload Croquis Images\"/>\r\n    </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        {/* <div>\r\n        {Csubmits.map((Csubmit)=>(\r\n            <CCsubmit key={Csubmit.id} CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} />\r\n        ))}\r\n    </div> */}\r\n      </div></>\r\n  )\r\n };\r\n export default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navigation =() => (\r\n<nav> \r\n    <ul>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/\">Home</Link>\r\n        </li>\r\n        \r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/profile\">My Drawings</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/doProko\">Do Proko</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/doSoty\">Do Soty</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/doSakugaBooru\">Do SakugaBooru</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/special\">Special</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/adorka\">Adorka</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/lineofaction\">LineOfAction</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/twitter\">Twitter</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/chadesign\">Design</Link>\r\n        </li>\r\n        <li style={{display:'inline', borderLeft:'1px solid #999',padding:'0 10px'}}>\r\n            <Link to =\"/chadesigndraw\">Design Drawings</Link>\r\n        </li>\r\n\r\n        </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\nexport default ({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const canvasRef = useRef();\r\n    const [drawSetting,setDrawSetting]=useState({\r\n       \r\n        brushRadius:0.8,\r\n        lazyRadius:0,\r\n       \r\n        \r\n\r\n\r\n    })\r\n    const [youtubeUrlIndex,setYoutubeUrlIndex]=useState(0);\r\n    const [youtubeUrls,setYoutubeUrls]=useState([\r\n        \"PLtG4P3lq8RHGuMuprDarMz_Y9Fbw_d2ws\",\"PLTY4AtphBe8NS7WFIMIhHIBJVk3xQvi-q\",\"PLTY4AtphBe8PSqfXT4qfxwdbLgSK0XZ9v\",\"PLTY4AtphBe8P3zIOlyr7gEt176af-pp5R\",\"PLtG4P3lq8RHFBeVaruf2JjyQmZJH4__Zv\",\"PLHYRqaApAQGGCUm1mPME4HVOzay3OcTgH\",\r\n        \"PLVK1154-DZLrCyXFSobZ2SVisLGmmNapd\"\r\n    ])\r\n    const [playListName,setPlayListName]=useState([\r\n        \"Proko\",\"Hide 1\",\r\n        \"Hide 2\",\"Hide 3\",\r\n        \"Proko anatomy\",\"GES DRAW Party\",\r\n        \"Draw This\"\r\n      ])\r\n      \r\n            \r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n   \r\n    useEffect(()=> {\r\n      dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n          if (doc.exists) {\r\n              setDrawSetting({\r\n                  brushRadius:doc.data().brushRadius,\r\n                  lazyRadius:doc.data().lazyRadius,\r\n                  })\r\n                  \r\n              //console.log(doc.data())\r\n              \r\n              \r\n             \r\n              \r\n              \r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such setting document!\");\r\n          }\r\n      }).catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n           \r\n      });\r\n\r\n\r\n\r\n    \r\n  },[]);\r\n    \r\n    const refreshAndSubmit =()=>{\r\n        \r\n            \r\n           \r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:0,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:\"\"\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n     \r\n        refreshAndSubmit();\r\n     };\r\n     \r\n     \r\n\r\n\r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n      if(ok){\r\n        canvasRef.current.clear();\r\n          \r\n      }\r\n    };\r\n    const onUndoClick= () => {\r\n      canvasRef.current.undo();\r\n  };\r\n   const onEraseClick= () => {\r\n      setBrushColor(\"erase\")\r\n      \r\n  };\r\n   const onBrushClick= () => {\r\n      setBrushColor(\"#444\")\r\n      \r\n  };\r\n   const onShadowClick= () => {\r\n      setBrushColor(\"shadow\")\r\n      \r\n  };\r\n  \r\n    \r\n  \r\n  return(\r\n    \r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        \r\n        if(keyName == \"ctrl+z\"){onUndoClick();}\r\n        if(keyName == \"c\"){\r\n        if(brushColor != \"erase\"){onEraseClick()}\r\n        else if(brushColor == \"erase\"){onBrushClick()}\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n      // onKeyUp={(keyName, e, handle) => {\r\n      //   console.log(\"test:onKeyUp\", e, handle);\r\n      //   setOutput(`onKeyUp ${keyName}`);\r\n      // } }\r\n    ></Hotkeys>\r\n    \r\n    \r\n    <div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n\r\n          <label>videos:</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max={youtubeUrls.length - 1}\r\n            style={{ width: \"30px\" }}\r\n            value={youtubeUrlIndex}\r\n            onChange={e => {\r\n              setPinreload(pinReload + 1);\r\n              setYoutubeUrlIndex(e.target.value);\r\n              \r\n              \r\n              \r\n\r\n            } } />\r\n            <button onClick={e => {\r\n              setYoutubeUrlIndex(pre => \r\n              pre-1\r\n              ); \r\n            } }>{\"<\"}</button>\r\n            <button onClick={e => {\r\n              setYoutubeUrlIndex(pre => pre+1); \r\n            } }>{\">\"}</button>\r\n            <button onClick={e => {\r\n              setPinreload(pinReload + 1);\r\n            } }>{\"refresh\"}</button>\r\n            {playListName[youtubeUrlIndex]}\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          <iframe key={pinReload} src={\"https://www.youtube.com/embed/videoseries?list=\" + youtubeUrls[youtubeUrlIndex] + \"&cc_load_policy=1&cc_lang_pref=ko\"} height={450} width={450} frameBorder={0} scrolling=\"no\"></iframe>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n              {brushColor}\r\n\r\n            </div>\r\n                \r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n              \r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload Drawing\" />\r\n                \r\n              </form>\r\n              \r\n            </div>\r\n                \r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              \r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div></>\r\n  )\r\n };","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nimport './styles.css';\n\nconst containerStyle = { \n    position: 'absolute', \n    zIndex: 1000 \n};\n\nconst ZoomOutButton = ({ disabled, onClick }) => (\n    <button className='iconButton' style={{ margin: '10px' }} onClick={onClick} disabled={disabled}>\n        -\n    </button>\n);\n\nconst ZoomInButton = ({ disabled, onClick }) => (\n    <button className='iconButton' style={{ margin: '10px', marginLeft: '0px' }} onClick={onClick} disabled={disabled}>\n       +\n    </button>\n);\n\nconst ZoomButtons = ({scale, minScale, maxScale, onZoomInClick, onZoomOutClick}) => (\n    <div style={containerStyle}>\n        {/* <ZoomOutButton onClick={onZoomOutClick} disabled={scale <= minScale} />\n        <ZoomInButton onClick={onZoomInClick} disabled={scale >= maxScale} /> */}\n    </div>\n);\n\nZoomButtons.propTypes = {\n    scale: PropTypes.number.isRequired,\n    minScale: PropTypes.number.isRequired,\n    maxScale: PropTypes.number.isRequired,\n    onZoomInClick: PropTypes.func.isRequired,\n    onZoomOutClick: PropTypes.func.isRequired,\n};\n\nexport default ZoomButtons;","import React from 'react';\n\nconst style = {\n    position: 'absolute',\n    marginTop: '40px',\n    marginLeft: '5px',\n    backgroundColor: 'rgba(0,0,0,0)',\n    zIndex: '1000',\n    color: 'white',\n}\nexport default ({ top, left, scale, overflow }) => {\n    const overflowDisplay = [\n        overflow.top > 0 ? 'top' : '',\n        overflow.right > 0 ? 'right': '',\n        overflow.bottom > 0 ? 'bottom' : '',\n        overflow.left > 0 ? 'left' : '',\n    ]\n        .filter(o => o.length)\n        .join(', ') || \n        'none';\n    return (\n        <div style={style}>\n            <div>{`top: ${top}`}</div>\n            <div>{`left: ${left}`}</div>\n            <div>{`scale: ${scale}`}</div>\n            <div>{`overflow: ${overflowDisplay}`}</div>\n        </div>\n    );\n}\n","import { createSelector } from 'reselect';\n\nexport const snapToTarget = (value, target, tolerance) => {\n    const withinRange = Math.abs(target - value) < tolerance;\n    return withinRange ? target : value;\n};\n\nexport const constrain = (lowerBound, upperBound, value) => Math.min(upperBound, Math.max(lowerBound, value));\n\nexport const negate = (value) => value * -1;\n\nexport const getRelativePosition = ({ clientX, clientY }, relativeToElement) => {\n    const rect = relativeToElement.getBoundingClientRect();\n    return {\n        x: clientX - rect.left,\n        y: clientY - rect.top,\n    };\n};\n\nexport const getPinchMidpoint = ([touch1, touch2]) => ({\n    x: (touch1.clientX + touch2.clientX) / 2,\n    y: (touch1.clientY + touch2.clientY) / 2,\n});\n\nexport const getPinchLength = ([touch1, touch2]) => (\n    Math.sqrt(Math.pow(touch1.clientY - touch2.clientY, 2) + Math.pow(touch1.clientX - touch2.clientX, 2))\n);\n\nexport function setRef(ref, value) {\n    if (typeof ref === 'function') {\n      ref(value);\n    } else if (ref) {\n      ref.current = value;\n    }\n};\n\nexport const isEqualDimensions = (dimensions1, dimensions2) => {\n    if (dimensions1 === dimensions2 === undefined) {\n        return true;\n    }\n    if (dimensions1 === undefined || dimensions2 === undefined) {\n        return false;\n    }\n    return dimensions1.width === dimensions2.width &&\n        dimensions1.height === dimensions2.height;\n}\n\nexport const getDimensions = object => {\n    if (object === undefined) {\n        return undefined;\n    }\n    return {\n        width: object.offsetWidth || object.width,\n        height: object.offsetHeight || object.height,\n    };\n}\n\nexport const getContainerDimensions = image => {\n    return {\n        width: image.parentNode.offsetWidth,\n        height: image.parentNode.offsetHeight,\n    };\n}\n\nexport const isEqualTransform = (transform1, transform2) => {\n    if (transform1 === transform2 === undefined) {\n        return true;\n    }\n    if (transform1 === undefined || transform2 === undefined) {\n        return false;\n    }\n    return round(transform1.top, 5) === round(transform2.top, 5) && \n        round(transform1.left, 5) === round(transform2.left, 5) && \n        round(transform1.scale, 5) === round(transform2.scale, 5);\n}\n\nexport const getAutofitScale = (containerDimensions, imageDimensions) => {\n    const { width: imageWidth, height: imageHeight } = imageDimensions || {};\n    if (! (imageWidth > 0 && imageHeight > 0) ) {\n        return 1;\n    }\n    return Math.min(\n        containerDimensions.width / imageWidth,\n        containerDimensions.height / imageHeight,\n        1\n    );\n}\n\nexport const getMinScale = createSelector(\n    state => state.containerDimensions,\n    state => state.imageDimensions,\n    (state, props) => props.minScale,\n    (containerDimensions, imageDimensions, minScaleProp) => \n        String(minScaleProp).toLowerCase() === 'auto'\n            ? getAutofitScale(containerDimensions, imageDimensions)\n            : minScaleProp || 1\n)\n\nfunction round(number, precision) {\n    if (precision && number !== null && number !== undefined) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (String(number) + 'e').split('e'),\n          value = Math.round(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (String(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return Math.round(number);\n};\n\nexport const tryCancelEvent = event => {\n    if (event.cancelable === false) {\n        return false;\n    }\n\n    event.preventDefault();\n    return true;\n}\n\nfunction calculateOverflowLeft(left, scale, imageDimensions, containerDimensions) {\n    const overflow = negate(left);\n    return overflow > 0\n        ? overflow\n        : 0;\n}\n\nfunction calculateOverflowTop(top, scale, imageDimensions, containerDimensions) {\n    const overflow = negate(top);\n    return overflow > 0\n        ? overflow\n        : 0;\n}\n\nfunction calculateOverflowRight(left, scale, imageDimensions, containerDimensions) {\n    const overflow = Math.max(0, (scale * imageDimensions.width) - containerDimensions.width);\n    return overflow > 0\n        ? overflow - negate(left)\n        : 0;\n}\n\nfunction calculateOverflowBottom(top, scale, imageDimensions, containerDimensions) {\n    const overflow = Math.max(0, (scale * imageDimensions.height) - containerDimensions.height);\n    return overflow > 0\n        ? overflow - negate(top)\n        : 0;\n}\n\nexport const getImageOverflow = (top, left, scale, imageDimensions, containerDimensions) => {\n    return {\n        top: calculateOverflowTop(top, scale, imageDimensions, containerDimensions),\n        right: calculateOverflowRight(left, scale, imageDimensions, containerDimensions),\n        bottom: calculateOverflowBottom(top, scale, imageDimensions, containerDimensions),\n        left: calculateOverflowLeft(left, scale, imageDimensions, containerDimensions),\n    }\n}\n\nexport const getRequiredImagePosition = (position, scale, imageDimensions, containerDimensions) => {\n    const overflow = getImageOverflow()\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport warning from 'warning';\n\nimport ZoomButtons from './ZoomButtons'\nimport DebugView from './StateDebugView';\n\nimport { snapToTarget, negate, constrain, getPinchLength, getPinchMidpoint, getRelativePosition, setRef, isEqualDimensions, getDimensions, getContainerDimensions, isEqualTransform, getAutofitScale, getMinScale, tryCancelEvent, getImageOverflow } from './Utils';\n\nconst OVERZOOM_TOLERANCE = 0.05;\nconst DOUBLE_TAP_THRESHOLD = 250;\nconst ANIMATION_SPEED = 0.1;\n\nconst isInitialized = (top, left, scale) => scale !== undefined && left !== undefined && top !== undefined;\n\nconst imageStyle = createSelector(\n    state => state.top,\n    state => state.left,\n    state => state.scale,\n    (top, left, scale) => {\n        const style = {\n            cursor: 'pointer',\n        };\n        return isInitialized(top, left, scale)\n            ? {\n                ...style,\n                transform: `translate3d(${left}px, ${top}px, 0) scale(${scale})`,\n                transformOrigin: '0 0',\n            } : style;\n    }\n);\n\nconst imageOverflow = createSelector(\n    state => state.top,\n    state => state.left,\n    state => state.scale,\n    state => state.imageDimensions,\n    state => state.containerDimensions,\n    (top, left, scale, imageDimensions, containerDimensions) => { \n        if (!isInitialized(top, left, scale)) {\n            return '';\n        } \n        return getImageOverflow(top, left, scale, imageDimensions, containerDimensions);\n    }\n);\n\nconst browserPanActions = createSelector(\n    imageOverflow,\n    (imageOverflow) => { \n        //Determine the panning directions where there is no image overflow and let\n        //the browser handle those directions (e.g., scroll viewport if possible).\n        //Need to replace 'pan-left pan-right' with 'pan-x', etc. otherwise \n        //it is rejected (o_O), therefore explicitly handle each combination.\n        const browserPanX = \n            !imageOverflow.left && !imageOverflow.right ? 'pan-x' //we can't pan the image horizontally, let the browser take it\n            : !imageOverflow.left ? 'pan-left'\n            : !imageOverflow.right ? 'pan-right'\n            : '';\n        const browserPanY = \n            !imageOverflow.top && !imageOverflow.bottom ? 'pan-y'\n            : !imageOverflow.top ? 'pan-up'\n            : !imageOverflow.bottom ? 'pan-down'\n            : '';\n        return [browserPanX, browserPanY].join(' ').trim();\n    }\n);\n\n//Ensure the image is not over-panned, and not over- or under-scaled.\n//These constraints must be checked when image changes, and when container is resized.\nexport default class PinchZoomPan extends React.Component {\n    state = {};\n\n    lastPointerUpTimeStamp; //enables detecting double-tap\n    lastPanPointerPosition; //helps determine how far to pan the image\n    lastPinchLength; //helps determine if we are pinching in or out\n    animation; //current animation handle\n    imageRef; //image element\n    isImageLoaded; //permits initial transform\n    originalOverscrollBehaviorY; //saves the original overscroll-behavior-y value while temporarily preventing pull down refresh\n\n    //event handlers\n    handleTouchStart = event => {\n        this.cancelAnimation();\n\n        const touches = event.touches;\n        if (touches.length === 2) {\n            this.lastPinchLength = getPinchLength(touches);\n            this.lastPanPointerPosition = null;\n        }\n        else if (touches.length === 1) {\n            this.lastPinchLength = null;\n            this.pointerDown(touches[0]);\n            tryCancelEvent(event); //suppress mouse events\n        }\n    }\n\n    handleTouchMove = event => {\n        const touches = event.touches;\n        if (touches.length === 2) {\n            this.pinchChange(touches);\n\n            //suppress viewport scaling on iOS\n            tryCancelEvent(event);\n        }\n        else if (touches.length === 1) {\n            const requestedPan = this.pan(touches[0]);\n\n            if (!this.controlOverscrollViaCss) {\n                //let the browser handling panning if we are at the edge of the image in \n                //both pan directions, or if we are primarily panning in one direction\n                //and are at the edge in that directino\n                const overflow = imageOverflow(this.state);\n                const hasOverflowX = (requestedPan.left && overflow.left > 0) || (requestedPan.right && overflow.right > 0);\n                const hasOverflowY = (requestedPan.up && overflow.top > 0) ||  (requestedPan.down && overflow.bottom > 0);\n\n                if (!hasOverflowX && !hasOverflowY) {\n                    //no overflow in both directions\n                    return;\n                }\n\n                const panX = requestedPan.left || requestedPan.right;\n                const panY = requestedPan.up || requestedPan.down;\n                if (panY > 2 * panX && !hasOverflowY) {\n                    //primarily panning up or down and no overflow in the Y direction\n                    return;\n                }\n\n                if (panX > 2 * panY && !hasOverflowX) {\n                    //primarily panning left or right and no overflow in the X direction\n                    return;\n                }\n\n                tryCancelEvent(event);\n            }\n        }\n    }\n\n    handleTouchEnd = event => {\n        this.cancelAnimation();\n        if (event.touches.length === 0 && event.changedTouches.length === 1) {\n            if (this.lastPointerUpTimeStamp && this.lastPointerUpTimeStamp + DOUBLE_TAP_THRESHOLD > event.timeStamp) {\n                const pointerPosition = getRelativePosition(event.changedTouches[0], this.imageRef.parentNode);\n                this.doubleClick(pointerPosition);\n            }\n            this.lastPointerUpTimeStamp = event.timeStamp;\n            tryCancelEvent(event); //suppress mouse events\n        }\n\n        //We allow transient +/-5% over-pinching.\n        //Animate the bounce back to constraints if applicable.\n        this.maybeAdjustCurrentTransform(ANIMATION_SPEED);\n        return;\n    }\n\n    handleMouseDown = event => {\n        this.cancelAnimation();\n        this.pointerDown(event);\n    }\n\n    handleMouseMove = event => {\n        if (!event.buttons) return null;\n        this.pan(event)\n    }\n\n    handleMouseDoubleClick = event => {\n        this.cancelAnimation();\n        var pointerPosition = getRelativePosition(event, this.imageRef.parentNode);\n        this.doubleClick(pointerPosition);\n    }\n\n    handleMouseWheel = event => {\n        this.cancelAnimation();\n        const point = getRelativePosition(event, this.imageRef.parentNode);\n        if (event.deltaY > 0) {\n            if (this.state.scale > getMinScale(this.state, this.props)) {\n                this.zoomOut(point);\n                tryCancelEvent(event);\n            }\n        } else if (event.deltaY < 0) {\n            if (this.state.scale < this.props.maxScale) {\n                this.zoomIn(point);\n                tryCancelEvent(event);\n            }\n        }\n    }\n\n    handleImageLoad = event => {\n        this.debug('handleImageLoad'); \n        this.isImageLoaded = true;\n        this.maybeHandleDimensionsChanged();\n\n        const { onLoad } = React.Children.only(this.props.children).props;\n        if (typeof onLoad === 'function') {\n            onLoad(event);\n        }\n    }\n\n    handleZoomInClick = () => {\n        this.cancelAnimation();\n        this.zoomIn();\n    }\n\n    handleZoomOutClick = () => {\n        this.cancelAnimation();\n        this.zoomOut();\n    }\n\n    handleWindowResize = () => this.maybeHandleDimensionsChanged();\n    \n    handleRefImage = ref => {\n        if (this.imageRef) {\n            this.cancelAnimation();\n            this.imageRef.removeEventListener('touchmove', this.handleTouchMove);\n        }\n\n        this.imageRef = ref;\n        if (ref) {\n            this.imageRef.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        }\n\n        const { ref: imageRefProp } = React.Children.only(this.props.children);\n        setRef(imageRefProp, ref);\n    };\n\n    //actions\n    pointerDown(clientPosition) {\n        this.lastPanPointerPosition = getRelativePosition(clientPosition, this.imageRef.parentNode);\n    }\n\n    pan(pointerClientPosition) {\n        if (!this.isTransformInitialized) {\n            return;\n        }\n\n        if (!this.lastPanPointerPosition) {\n            //if we were pinching and lifted a finger\n            this.pointerDown(pointerClientPosition);\n            return 0;\n        }\n\n        const pointerPosition = getRelativePosition(pointerClientPosition, this.imageRef.parentNode);\n        const translateX = pointerPosition.x - this.lastPanPointerPosition.x;\n        const translateY = pointerPosition.y - this.lastPanPointerPosition.y;\n        this.lastPanPointerPosition = pointerPosition;\n\n        const top = this.state.top + translateY;\n        const left = this.state.left + translateX;\n        this.constrainAndApplyTransform(top, left, this.state.scale, 0, 0);\n\n        return {\n            up: translateY > 0 ? translateY : 0,\n            down: translateY < 0 ? negate(translateY) : 0,\n            right: translateX < 0 ? negate(translateX) : 0,\n            left: translateX > 0 ? translateX : 0,\n        };\n    }\n\n    doubleClick(pointerPosition) {\n        if (String(this.props.doubleTapBehavior).toLowerCase() === 'zoom' && this.state.scale * (1 + OVERZOOM_TOLERANCE) < this.props.maxScale) {\n            this.zoomIn(pointerPosition, ANIMATION_SPEED, 0.3);\n        } else {\n            //reset\n            this.applyInitialTransform(ANIMATION_SPEED);\n        }\n    }\n\n    pinchChange(touches) {\n        const length = getPinchLength(touches);\n        const midpoint = getPinchMidpoint(touches);\n        const scale = this.lastPinchLength\n            ? this.state.scale * length / this.lastPinchLength //sometimes we get a touchchange before a touchstart when pinching\n            : this.state.scale;\n\n        this.zoom(scale, midpoint, OVERZOOM_TOLERANCE);\n\n        this.lastPinchLength = length;\n    }\n\n    zoomIn(midpoint, speed = 0, factor = 0.1) {\n        midpoint = midpoint || {\n            x: this.state.containerDimensions.width / 2,\n            y: this.state.containerDimensions.height / 2\n        };\n        this.zoom(this.state.scale * (1 + factor), midpoint, 0, speed);\n    }\n\n    zoomOut(midpoint) {\n        midpoint = midpoint || {\n            x: this.state.containerDimensions.width / 2,\n            y: this.state.containerDimensions.height / 2\n        };\n        this.zoom(this.state.scale * 0.9, midpoint, 0);\n    }\n\n    zoom(requestedScale, containerRelativePoint, tolerance, speed = 0) {\n        if (!this.isTransformInitialized) {\n            return;\n        }\n\n        const { scale, top, left } = this.state;\n        const imageRelativePoint = {\n            top: containerRelativePoint.y - top,\n            left: containerRelativePoint.x - left,\n        };\n\n        const nextScale = this.getConstrainedScale(requestedScale, tolerance);\n        const incrementalScalePercentage = (nextScale - scale) / scale;\n        const translateY = imageRelativePoint.top * incrementalScalePercentage;\n        const translateX = imageRelativePoint.left * incrementalScalePercentage;\n\n        const nextTop = top - translateY;\n        const nextLeft = left - translateX;\n\n        this.constrainAndApplyTransform(nextTop, nextLeft, nextScale, tolerance, speed);\n    }\n\n    //compare stored dimensions to actual dimensions; capture actual dimensions if different\n    maybeHandleDimensionsChanged() {\n        if (this.isImageReady) {\n            const containerDimensions = getContainerDimensions(this.imageRef);\n            const imageDimensions = getDimensions(this.imageRef);\n\n            if (!isEqualDimensions(containerDimensions, getDimensions(this.state.containerDimensions)) || \n                !isEqualDimensions(imageDimensions, getDimensions(this.state.imageDimensions))) {\n                this.cancelAnimation();\n\n                //capture new dimensions\n                this.setState({\n                        containerDimensions,\n                        imageDimensions\n                    }, \n                    () => {\n                        //When image loads and image dimensions are first established, apply initial transform.\n                        //If dimensions change, constraints change; current transform may need to be adjusted.\n                        //Transforms depend on state, so wait until state is updated.\n                        if (!this.isTransformInitialized) {\n                            this.applyInitialTransform();\n                        } else {\n                            this.maybeAdjustCurrentTransform();\n                        }\n                    }\n                );\n                this.debug(`Dimensions changed: Container: ${containerDimensions.width}, ${containerDimensions.height}, Image: ${imageDimensions.width}, ${imageDimensions.height}`);\n            }\n        }\n        else {\n            this.debug('Image not loaded');\n        }\n    }\n\n    //transformation methods\n\n    //Zooming and panning cause transform to be requested.\n    constrainAndApplyTransform(requestedTop, requestedLeft, requestedScale, tolerance, speed = 0) {\n        const requestedTransform = {\n            top: requestedTop,\n            left: requestedLeft,\n            scale: requestedScale\n        };\n        this.debug(`Requesting transform: left ${requestedLeft}, top ${requestedTop}, scale ${requestedScale}`);\n\n        //Correct the transform if needed to prevent overpanning and overzooming\n        const transform = this.getCorrectedTransform(requestedTransform, tolerance) || requestedTransform;\n        this.debug(`Applying transform: left ${transform.left}, top ${transform.top}, scale ${transform.scale}`);\n\n        if (isEqualTransform(transform, this.state)) {\n            return false;\n        }\n\n        this.applyTransform(transform, speed);\n        return true;\n    }\n\n    applyTransform({ top, left, scale }, speed) {\n        if (speed > 0) {\n            const frame = () => {\n                const translateY = top - this.state.top;\n                const translateX = left - this.state.left;\n                const translateScale = scale - this.state.scale;\n\n                const nextTransform = {\n                    top: snapToTarget(this.state.top + (speed * translateY), top, 1),\n                    left: snapToTarget(this.state.left + (speed * translateX), left, 1),\n                    scale: snapToTarget(this.state.scale + (speed * translateScale), scale, 0.001),\n                };\n\n                //animation runs until we reach the target\n                if (!isEqualTransform(nextTransform, this.state)) {\n                    this.setState(nextTransform, () => this.animation = requestAnimationFrame(frame));\n                }\n            };\n            this.animation = requestAnimationFrame(frame);\n        } else {\n            this.setState({\n                top,\n                left,\n                scale,\n            });\n        }\n    }\n\n    //Returns constrained scale when requested scale is outside min/max with tolerance, otherwise returns requested scale\n    getConstrainedScale(requestedScale, tolerance) {\n        const lowerBoundFactor = 1.0 - tolerance;\n        const upperBoundFactor = 1.0 + tolerance;\n\n        return constrain(\n            getMinScale(this.state, this.props) * lowerBoundFactor,\n            this.props.maxScale * upperBoundFactor,\n            requestedScale\n        );\n    }\n\n    //Returns constrained transform when requested transform is outside constraints with tolerance, otherwise returns null\n    getCorrectedTransform(requestedTransform, tolerance) {\n        const scale = this.getConstrainedScale(requestedTransform.scale, tolerance);\n        \n        //get dimensions by which scaled image overflows container\n        const negativeSpace = this.calculateNegativeSpace(scale);\n        const overflow = {\n            width: Math.max(0, negate(negativeSpace.width)),\n            height: Math.max(0, negate(negativeSpace.height)),\n        };\n\n        //if image overflows container, prevent moving by more than the overflow\n        //example: overflow.height = 100, tolerance = 0.05 => top is constrained between -105 and +5\n        const { position, initialTop, initialLeft } = this.props;\n        const { imageDimensions, containerDimensions } = this.state;\n        const upperBoundFactor = 1.0 + tolerance;\n        const top = \n            overflow.height ? constrain(negate(overflow.height) * upperBoundFactor, overflow.height * upperBoundFactor - overflow.height, requestedTransform.top)\n            : position === 'center' ? (containerDimensions.height - (imageDimensions.height * scale)) / 2\n            : initialTop || 0;\n\n        const left = \n            overflow.width ? constrain(negate(overflow.width) * upperBoundFactor, overflow.width * upperBoundFactor - overflow.width, requestedTransform.left)\n            : position === 'center' ? (containerDimensions.width - (imageDimensions.width * scale)) / 2\n            : initialLeft || 0;\n\n        const constrainedTransform = {\n            top,\n            left,\n            scale\n        };\n\n        return isEqualTransform(constrainedTransform, requestedTransform)\n            ? null\n            : constrainedTransform;\n    }\n\n    //Ensure current transform is within constraints\n    maybeAdjustCurrentTransform(speed = 0) {\n        let correctedTransform;\n        if (correctedTransform = this.getCorrectedTransform(this.state, 0)) {\n            this.applyTransform(correctedTransform, speed);\n        }\n    }\n\n    applyInitialTransform(speed = 0) {\n        const { imageDimensions, containerDimensions } = this.state;\n        const { position, initialScale, maxScale, initialTop, initialLeft } = this.props;\n\n        const scale = String(initialScale).toLowerCase() === 'auto'\n            ? getAutofitScale(containerDimensions, imageDimensions)\n            : initialScale;\n            const minScale = getMinScale(this.state, this.props);\n\n        if (minScale > maxScale) {\n            warning(false, 'minScale cannot exceed maxScale.');\n            return;\n        }\n        if (scale < minScale || scale > maxScale) {\n            warning(false, 'initialScale must be between minScale and maxScale.');\n            return;\n        }\n\n        let initialPosition;\n        if (position === 'center') {\n            warning(initialTop === undefined, 'initialTop prop should not be supplied with position=center. It was ignored.');\n            warning(initialLeft === undefined, 'initialLeft prop should not be supplied with position=center. It was ignored.');\n            initialPosition = {\n                top: (containerDimensions.width - (imageDimensions.width * scale)) / 2,\n                left: (containerDimensions.height - (imageDimensions.height * scale)) / 2,\n            };\n        } else {\n            initialPosition = {\n                top: initialTop || 0,\n                left: initialLeft || 0,\n            };\n        }\n\n        this.constrainAndApplyTransform(initialPosition.top, initialPosition.left, scale, 0, speed);\n    }\n\n    //lifecycle methods\n    render() {\n        const childElement = React.Children.only(this.props.children);\n        const { zoomButtons, maxScale, debug } = this.props;\n        const { scale } = this.state;\n\n        const touchAction = this.controlOverscrollViaCss\n            ? browserPanActions(this.state) || 'none'\n            : undefined;\n\n        const containerStyle = {\n            width: '100%', \n            height: '100%',\n            overflow: 'hidden',\n            touchAction: touchAction,\n        };\n\n        return (\n            <div style={containerStyle}>\n                {zoomButtons && this.isImageReady && this.isTransformInitialized && <ZoomButtons \n                    scale={scale} \n                    minScale={getMinScale(this.state, this.props)} \n                    maxScale={maxScale} \n                    onZoomOutClick={this.handleZoomOutClick} \n                    onZoomInClick={this.handleZoomInClick} \n                />}\n                {debug && <DebugView {...this.state} overflow={imageOverflow(this.state)} />}\n                {React.cloneElement(childElement, {\n                    onTouchStart: this.handleTouchStart,\n                    onTouchEnd: this.handleTouchEnd,\n                    onMouseDown: this.handleMouseDown,\n                    onMouseMove: this.handleMouseMove,\n                    onDoubleClick: this.handleMouseDoubleClick,\n                    onWheel: this.handleMouseWheel,\n                    onDragStart: tryCancelEvent,\n                    onLoad: this.handleImageLoad,\n                    onContextMenu: tryCancelEvent,\n                    ref: this.handleRefImage,\n                    style: imageStyle(this.state)\n                })}\n            </div>\n        );\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.initialTop !== prevState.initialTop ||\n            nextProps.initialLeft !== prevState.initialLeft ||\n            nextProps.initialScale !== prevState.initialScale || \n            nextProps.position !== prevState.position) {\n            return {\n                position: nextProps.position,\n                initialScale: nextProps.initialScale,\n                initialTop: nextProps.initialTop,\n                initialLeft: nextProps.initialLeft,\n            };\n        } else {\n            return null;\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        this.maybeHandleDimensionsChanged();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.maybeHandleDimensionsChanged();\n    }\n\n    componentWillUnmount() {\n        this.cancelAnimation();\n        this.imageRef.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('resize', this.handleWindowResize);\n    }\n\n    get isImageReady() {\n        return this.isImageLoaded || (this.imageRef && this.imageRef.tagName !== 'IMG');\n    }\n\n    get isTransformInitialized() {\n        return isInitialized(this.state.top, this.state.left, this.state.scale);\n    }\n\n    get controlOverscrollViaCss() {\n        return window.CSS && window.CSS.supports('touch-action', 'pan-up');\n    }\n\n    calculateNegativeSpace(scale) {\n        //get difference in dimension between container and scaled image\n        const { containerDimensions, imageDimensions } = this.state;\n        const width = containerDimensions.width - (scale * imageDimensions.width);\n        const height = containerDimensions.height - (scale * imageDimensions.height);\n        return {\n            width,\n            height\n        };\n    }\n\n    cancelAnimation() {\n        if (this.animation) {\n            cancelAnimationFrame(this.animation);\n        }\n    }\n\n    debug(message) {\n        if (this.props.debug) {    \n            console.log(message);\n        }\n    }\n}\n\nPinchZoomPan.defaultProps = {\n    initialScale: 'auto',\n    minScale: 'auto',\n    maxScale: 1,\n    position: 'topLeft',\n    zoomButtons: true,\n    doubleTapBehavior: 'reset'\n};\n\nPinchZoomPan.propTypes = {\n    children: PropTypes.element.isRequired,\n    initialScale: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    minScale: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    maxScale: PropTypes.number,\n    position: PropTypes.oneOf(['topLeft', 'center']),\n    zoomButtons: PropTypes.bool,\n    doubleTapBehavior: PropTypes.oneOf(['reset', 'zoom']),\n    initialTop: PropTypes.number,\n    initialLeft: PropTypes.number,\n};\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport PinchZoomPan from \"PinchZoomPan\";\r\nimport Hotkeys from \"react-hot-keys\";\r\n\r\n\r\nexport default ({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    // const [Csubmits,setCsubmits]= useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const canvasRef3 = useRef();\r\n    const [drawSetting,setDrawSetting]=useState({\r\n       \r\n        brushRadius:1,\r\n        lazyRadius:0,\r\n       \r\n        \r\n\r\n\r\n    })\r\n    const [listst,setListst]= useState([])\r\n    const [listst2,setListst2]= useState([])\r\n\r\n    const [sotyIndex,setSotyIndex]=useState(0);\r\n    const [sotyUrlarr,setSotyUrlarr]=useState([]);\r\n\r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n    \r\n\r\n    useEffect(()=> {\r\n        dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDrawSetting({\r\n                    brushRadius:doc.data().brushRadius,\r\n                    lazyRadius:doc.data().lazyRadius,\r\n                    sotyIndex:doc.data().sotyIndex,})\r\n                    setSotyIndex(doc.data().sotyIndex)\r\n                console.log(doc.data())\r\n                \r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such setting document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n\r\n        dbService.doc(`RefDB/soty`).get().then((doc) => {\r\n       if (doc.exists) {\r\n           //console.log(\"Document data:\", doc.data().refUrl);\r\n           //setRandomPinNum(doc.data().refUrl);\r\n           //console.log(\"doc\",doc.data().refUrl)\r\n           const urlarr=doc.data().refUrl;\r\n           \r\n           \r\n           setSotyUrlarr(urlarr);\r\n          \r\n           \r\n           \r\n       } else {\r\n           // doc.data() will be undefined in this case\r\n           console.log(\"No such document!\");\r\n       }\r\n   }).catch((error) => {\r\n       console.log(\"Error getting document:\", error);\r\n        \r\n   });\r\n    },[]);\r\n            \r\n    \r\n const ongetUrl= async(event) => {\r\n        \r\n        \r\n        // const listRef = ref(storageService, \"soty/\");\r\n\r\n        // Find all the prefixes and items.\r\n        storageService.ref().child(\"soty/\").listAll()\r\n        .then((res) => {\r\n            res.prefixes.forEach((folderRef) => {\r\n            // All the prefixes under listRef.\r\n            // You may call listAll() recursively on them.\r\n            });\r\n            res.items.forEach(async(itemRef) => {\r\n            // All the items under listRef.\r\n            let urls= await itemRef.getDownloadURL().then(function(url) {\r\n                return url;\r\n              }).catch(function(error) {\r\n                console.log(error)\r\n                // Handle any errors here\r\n              });\r\n              \r\n              setListst(prevState=>[...prevState,urls])\r\n              \r\n            \r\n            \r\n            });\r\n        }).catch((error) => {\r\n            console.log(error)\r\n            // Uh-oh, an error occurred!\r\n        });\r\n\r\n\r\n        // const res = await storageService.ref().child(\"soty/\").listAll()\r\n        \r\n        \r\n        //        res.items.forEach(async(itemref)=>{\r\n        //         list.push(await itemref.getDownloadURL())\r\n                \r\n        //     })\r\n        var set = new Set(listst);\r\n         console.log(set)\r\n         const arr = [...set]\r\n         console.log(arr) \r\n         setListst2(arr);\r\n         \r\n\r\n    }\r\n    const submitsoty =()=>{ \r\n        \r\n            console.log(listst2)\r\n            const pinDocRef= dbService.doc(`RefDB/soty`);\r\n            pinDocRef.update({\r\n            \r\n                refUrl:listst2})\r\n         \r\n    }\r\n    \r\n    const refreshAndSubmit =()=>{\r\n        \r\n            \r\n        dbService.collection(\"usersetting\").doc(userObj.uid).update(\r\n            {\r\n            \"sotyIndex\":sotyIndex,\r\n            }\r\n        );\r\n            \r\n            const data = canvasRef3.current.getSaveData();\r\n            const dataUrl=canvasRef3.current.getDataURL();\r\n            canvasRef3.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:0,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:\"\",\r\n                sotyIndex:sotyIndex,\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n     \r\n        refreshAndSubmit();\r\n     };\r\n     \r\n     \r\n\r\n\r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n      if(ok){\r\n        canvasRef3.current.clear();\r\n          \r\n      }\r\n    };\r\n    const onUndoClick= () => {\r\n      canvasRef3.current.undo();\r\n  };\r\n   const onEraseClick= () => {\r\n      setBrushColor(\"erase\")\r\n      \r\n  };\r\n   const onBrushClick= () => {\r\n      setBrushColor(\"#444\")\r\n      \r\n  };\r\n  const onShadowClick= () => {\r\n    setBrushColor(\"shadow\")\r\n    \r\n};\r\n  const onPrePageClick= (event) => {\r\n    event.preventDefault();\r\n      \r\n      setSotyIndex(pre=>pre-1);\r\n    \r\n  };\r\n   const onForPageClick= (event) => {\r\n    event.preventDefault();\r\n    setSotyIndex(pre=>pre+1);\r\n    \r\n  };\r\n\r\n  return(\r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        if (keyName == \"ctrl+z\") { onUndoClick(); }\r\n        if (keyName == \"c\") {\r\n          if (brushColor != \"erase\") { onEraseClick(); }\r\n          else if (brushColor == \"erase\") { onBrushClick(); }\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n    ></Hotkeys>\r\n    <div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n\r\n          {/* <button onClick={ongetUrl}>geturls</button>\r\n    <button onClick={submitsoty}>submitsoty</button>\r\n     */}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n\r\n          <label>pages:</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max={sotyUrlarr.length - 1}\r\n            style={{ width: \"40px\" }}\r\n            value={sotyIndex}\r\n            onChange={e => {\r\n              setSotyIndex(e.target.value);\r\n              setPinreload(pinReload + 1);\r\n            } } />\r\n            <button onClick={onPrePageClick}>{\"<\"}</button>\r\n            <button onClick={onForPageClick}>{\">\"}</button>\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          {/* <iframe key={pinReload} src={\"https://www.youtube.com/embed/videoseries?list=\"+youtubeUrls[youtubeUrlIndex]+\"&cc_load_policy=1&cc_lang_pref=ko\"} height={450} width={450} frameBorder={0} scrolling=\"no\" ></iframe> */}\r\n\r\n          <div style={{ width: '450px', height: '770px' }}>\r\n            <PinchZoomPan>\r\n              <img alt='Test Image' src={sotyUrlarr[sotyIndex]} />\r\n            </PinchZoomPan>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>  \r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload Drawing\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              \r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef3}\r\n              brushColor={brushColor} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div></>\r\n  )\r\n };","// videojs-framebyframe-plugin\nimport videojs from \"video.js\";\nvar VjsButton = videojs.getComponent('Button');\nvar FBFButton = videojs.extend(VjsButton, {\n    constructor: function(player, options) {\n        VjsButton.call(this, player, options);\n        this.player = player;\n        this.frameTime = 1/options.fps;\n        this.step_size = options.value;\n        this.on('click', this.onClick);\n    },\n\n    onClick: function() {\n        // Start by pausing the player\n        this.player.pause();\n        // Calculate movement distance\n        var dist = this.frameTime * this.step_size;\n        this.player.currentTime(this.player.currentTime() + dist);\n    },\n});\n\nfunction framebyframe(options) {\n    var player = this,\n        frameTime = 1 / 30; // assume 30 fps\n\n    player.ready(function() {\n        //console.log('player', player);\n        //console.log('player.controlBar.el()', player.controlBar.el());\n        //let fsc = document.getElementsByClassName('vjs-fullscreen-control');\n        //console.log('fsc', fsc);\n        options.steps.forEach(function(opt) {\n            var b = player.controlBar.addChild(\n                new FBFButton(player, {\n                    el: videojs.dom.createEl(\n                        'button',\n                        {\n                            className: 'vjs-res-button vjs-control',\n                            //innerHTML: '<div class=\"vjs-control-content\" style=\"font-size: 11px; line-height: 28px;\"><span class=\"vjs-fbf\">' + opt.text + '</span></div>'\n                            innerHTML: '<div class=\"vjs-control-content\"><span class=\"vjs-fbf\">' + opt.text + '</span></div>'\n                        },\n                        {\n                            role: 'button'\n                        }\n                    ),\n                    value: opt.step,\n                    fps: options.fps,\n                }),\n            {}, opt.index);\n            //console.log('b', b);\n            //player.controlBar.el().insertBefore(b.el(), fsc.el_);\n            //player.controlBar.el().insertBefore(b.el(), player.controlBar.fullscreenToggle.el());\n            //console.log('children', player.controlBar);\n            // player.controlBar.el().insertBefore(b.el(), player.controlBar.seekBack.el());\n        });\n    });\n}\n\n// Cross-compatibility for Video.js 5 and 6.\n\n\n\nexport default framebyframe","// taken from https://github.com/videojs/video.js/blob/master/docs/guides/react.md\r\nimport React from \"react\";\r\nimport videojs from \"video.js\";\r\nimport \"video.js/dist/video-js.css\"\r\n//import '@douglassllc/videojs-framebyframe/videojs.framebyframe.css'\r\n//import 'video.js/dist/video-js.css'\r\n// videojs-framebyframe-plugin\r\n//import \"@douglassllc/videojs-framebyframe\"\r\n// videojs-framebyframe-plugin\r\n import \"./videojs-skin.css\"\r\n import framebyframe from './videojs-framebyframe/videojs.framebyframe.js'\r\n// import './videojs-framebyframe/videojs.framebyframe.css'\r\n\r\n\r\n \r\n\r\n \r\nexport default class VideoPlayer extends React.Component {\r\n  componentDidMount() {\r\n    // instantiate video.js\r\n    var registerPlugin = videojs.registerPlugin || videojs.plugin;\r\n    registerPlugin('framebyframe', framebyframe);\r\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\r\n      console.log(\"onPlayerReady\", this);\r\n    });\r\n    this.player.addClass('vjs-matrix');\r\n    \r\n\r\n    // if (this.videoNode) {\r\n    //   this.videoNode.setAttribute(\"webkit-playsinline\", true);\r\n    //   this.videoNode.setAttribute(\"playsinline\", true);\r\n    // }\r\n  }; \r\n\r\n  // destroy player on unmount\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose();\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.videoUrl !== this.props.videoUrl) {\r\n      this.player.dispose();\r\n      const videoJsOptions = {\r\n        autoplay: true,\r\n        controls: true,\r\n        sources: [\r\n          {\r\n            src: this.props.videoUrl,\r\n            type: \"video/mp4\",\r\n          },\r\n        ],\r\n      };\r\n      this.player = videojs(\r\n        this.videoNode,\r\n        videoJsOptions,\r\n        this.props,\r\n        function onPlayerReady() {\r\n          console.log(\"onPlayerReady\", this);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // wrap the player in a div with a `data-vjs-player` attribute\r\n  // so videojs won't create additional wrapper in the DOM\r\n  // see https://github.com/videojs/video.js/pull/3856\r\n  render() {\r\n    return (\r\n      <div data-vjs-player>\r\n        <video ref={node => (this.videoNode = node)} className=\"video-js\" />\r\n      </div>\r\n    );\r\n  };\r\n};","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\nimport Videojs from './video.js';\r\nimport tagss from \"./tags.json\"\r\n\r\nconst people = {\r\n  \"tags\": {\r\n    \"tag\": [\r\n      {\r\n        \"-id\": \"14391\",\r\n        \"-name\": \"\",\r\n        \"-count\": \"0\",\r\n        \"-type\": \"0\",\r\n        \"-ambiguous\": \"false\",\r\n        \"-self-closing\": \"true\"\r\n      },\r\n      {\r\n        \"-id\": \"15341\",\r\n        \"-name\": \"?\",\r\n        \"-count\": \"4\",\r\n        \"-type\": \"0\",\r\n        \"-ambiguous\": \"false\",\r\n        \"-self-closing\": \"true\"\r\n      },\r\n    ]\r\n  }}\r\n\r\nexport default ({userObj }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [videoUrl, setVideoUrl] = useState(\"\");\r\n  const [videoPage, setVideoPage] = useState(1);\r\n  const [searchHeight, setSearchHeight] = useState(0);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [booruResults, setBooruResults] = useState([]);\r\n  const handleChange = e => {\r\n    setSearchTerm(e.target.value);\r\n    setSearchHeight(200);\r\n  };\r\n  useEffect(() => {\r\n    const results = tagss.tags.tag.filter(person =>\r\n      person[\"-name\"].toLowerCase().includes(searchTerm)\r\n    );\r\n    // console.log(typeof(searchTerm))\r\n    // console.log(results)\r\n    if(searchTerm!=\"\" ){\r\n      setSearchResults(results);\r\n    }\r\n    \r\n  }, [searchTerm]);\r\n\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const canvasRef = useRef();\r\n    const [drawSetting,setDrawSetting]=useState({\r\n       \r\n        brushRadius:0.8,\r\n        lazyRadius:0,\r\n       \r\n        \r\n\r\n\r\n    })\r\n    const [youtubeUrlIndex,setYoutubeUrlIndex]=useState(0);\r\n    const [youtubeUrls,setYoutubeUrls]=useState([\r\n        \"PLtG4P3lq8RHGuMuprDarMz_Y9Fbw_d2ws\",\"PLTY4AtphBe8NS7WFIMIhHIBJVk3xQvi-q\",\"PLTY4AtphBe8PSqfXT4qfxwdbLgSK0XZ9v\",\"PLTY4AtphBe8P3zIOlyr7gEt176af-pp5R\",\"PLtG4P3lq8RHFBeVaruf2JjyQmZJH4__Zv\",\"PLHYRqaApAQGGCUm1mPME4HVOzay3OcTgH\"\r\n    ])\r\n\r\n    \r\n            \r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n    const searchRef = useRef();\r\n   \r\n    useEffect(()=> {\r\n      dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n          if (doc.exists) {\r\n              setDrawSetting({\r\n                  brushRadius:doc.data().brushRadius,\r\n                  lazyRadius:doc.data().lazyRadius,\r\n                  })\r\n                  \r\n              //console.log(doc.data())\r\n              \r\n              \r\n             \r\n              \r\n              \r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such setting document!\");\r\n          }\r\n      }).catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n           \r\n      });\r\n\r\n    \r\n  },[]);\r\n    \r\n    const refreshAndSubmit =()=>{\r\n        \r\n            \r\n           \r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:0,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:\"\"\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n     \r\n        refreshAndSubmit();\r\n     };\r\n     const onSubmitSearch= (event) => {\r\n      \r\n         event.preventDefault();\r\n         refreshSearch();\r\n      } \r\n     \r\n     \r\n      const refreshSearch=()=>{\r\n        fetch(`https://croquistoolcors.herokuapp.com/https://www.sakugabooru.com/post.json?page=${videoPage}&tags=${searchTerm}`)\r\n         .then((response)=>response.json())\r\n        .then((data)=>{\r\n          setBooruResults(data);\r\n          \r\n        })\r\n      }\r\n\r\n     const onPrePageClick= (event) => {\r\n      event.preventDefault();\r\n        setVideoPage(pre=>pre-1);\r\n      refreshSearch();\r\n    };\r\n     const onForPageClick= (event) => {\r\n      event.preventDefault();\r\n      setVideoPage(pre=>pre+1);\r\n      refreshSearch();\r\n    };\r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n      if(ok){\r\n        canvasRef.current.clear();\r\n          \r\n      }\r\n    };\r\n    const onUndoClick= () => {\r\n      canvasRef.current.undo();\r\n  };\r\n   const onEraseClick= () => {\r\n      setBrushColor(\"erase\")\r\n      \r\n  };\r\n   const onBrushClick= () => {\r\n      setBrushColor(\"#444\")\r\n      \r\n  };\r\n  const onShadowClick= () => {\r\n    setBrushColor(\"shadow\")\r\n    \r\n};\r\n\r\n \r\n  const videoJsOptions = {\r\n    autoplay: false,\r\n    playbackRates: [0.2, 0.4, 0.6, 0.8, 1],\r\n    width: 450,\r\n    //height: 300,\r\n    controls: true,\r\n    controlBar: {\r\n      pictureInPictureToggle: false,\r\n      fullscreenToggle: false\r\n    }, \r\n    plugins: {\r\n      framebyframe: {\r\n        fps: 23.976024, \r\n        steps: [\r\n          { text: '< 1f', step: -1 },\r\n          { text: '1f >', step: 1 }\r\n        ]\r\n      }\r\n    },\r\n    \r\n    sources: [\r\n      {\r\n        src: videoUrl,\r\n        //type: 'video/mp4',\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n \r\n  \r\n\r\n    \r\n  \r\n \r\n\r\n  return(\r\n    \r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        \r\n        if(keyName == \"ctrl+z\"){onUndoClick();}\r\n        if(keyName == \"c\"){\r\n        if(brushColor != \"erase\"){onEraseClick()}\r\n        else if(brushColor == \"erase\"){onBrushClick()}\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n      // onKeyUp={(keyName, e, handle) => {\r\n      //   console.log(\"test:onKeyUp\", e, handle);\r\n      //   setOutput(`onKeyUp ${keyName}`);\r\n      // } }\r\n    ></Hotkeys>\r\n    \r\n    \r\n    <div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n        \r\n        \r\n          <label>videos:</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max={youtubeUrls.length - 1}\r\n            style={{ width: \"30px\" }}\r\n            value={youtubeUrlIndex}\r\n            onChange={e => {\r\n              setYoutubeUrlIndex(e.target.value);\r\n              setPinreload(pinReload + 1);\r\n            } } />\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n        <div key={pinReload}><Videojs  {...videoJsOptions} /></div>\r\n        \r\n        <form onSubmit={onSubmitSearch}>\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n      />\r\n       <input type={\"submit\"} value=\"search\" />\r\n       <button onClick={onPrePageClick}>{\"<\"}</button>\r\n       {videoPage}\r\n        <button onClick={onForPageClick}> {\">\"} </button>\r\n        </form>\r\n        \r\n        \r\n      {/* {searchTerm=null ?(<></>):(<></>)} */}\r\n      \r\n      <ul style={{width: '450px', height: searchHeight, overflow: 'auto'}}>\r\n        {searchResults.map(item => (\r\n        <li onClick={e=>{console.log(item['-name']); setSearchTerm(item['-name']);setSearchHeight(0); }}>{item['-name']}</li>\r\n        ))}\r\n      </ul>\r\n      <ul style={{width: '450px', height:'400px', overflow: 'auto'}}>\r\n      {booruResults.map(item => (\r\n        <img src={item.preview_url} style={{width: '215px'}} onClick={e=>{setVideoUrl(item.file_url); console.log(item.file_url); setPinreload(pinReload + 1);}}></img>))}\r\n      </ul>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>\r\n\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload Drawing\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div></>\r\n  )\r\n };","//import CCsubmit from \"../components/Csubmit\";\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { dbService ,storageService} from \"fbase\";\r\nimport React, { useEffect, useRef, useState,useCallback } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\n\r\nexport default ({userObj}) =>  {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [Line,setLine]= useState([]);\r\n    const [croquisList,setCroquisList]= useState([]);\r\n    const [submitField,setSubmitField]= useState(\"\");\r\n    const canvasRef = useRef();\r\n    const [pinNum,setPinNum]=useState(\"\");\r\n    const [randomPinNum,setRandomPinNum]=useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const [pinID,setPinID]=useState(0);\r\n    const [croquisTime,setCroquisTime]=useState(60);\r\n    const allowPointerType=[\"all\",\"mouse\",\"touch\",\"pen\"]\r\n    const [pointerTypeIndex,setPointerTypeIndex]=useState(3)\r\n    //allowpointertype으로 터치허용유무설정가능 일단 펜만 가능하게함. 나중에하는걸로\r\n        const [min,setMin]=useState(0);\r\n        const [sec,setSec]=useState(0);\r\n        const time=useRef(croquisTime);\r\n        const timeId=useRef(null);\r\n        const [drawSetting,setDrawSetting]=useState({\r\n            croquisTimeDB:60,\r\n            brushRadius:1,\r\n            lazyRadius:1,\r\n            eraseRadius:10,\r\n            \r\n\r\n\r\n        })\r\n    const [timeSetBottonToggle,setTimeSetBottonToggle]=useState(false);\r\n\r\n\r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n\r\n\r\n    \r\n\r\n    const getMyCroquisSettings = ()=>{\r\n              dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDrawSetting({\r\n                    brushRadius:doc.data().brushRadius,\r\n                    lazyRadius:doc.data().lazyRadius,\r\n                    eraseRadius:doc.data().eraseRadius,\r\n                    croquisTimeDB:doc.data().croquisTimeDB,\r\n                    })\r\n                    setCroquisTime(doc.data().croquisTimeDB)\r\n                console.log(doc.data())\r\n               // console.log(croquisTime)\r\n                time.current+=doc.data().croquisTimeDB-60;\r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such setting document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n    }\r\n    const updateSetting =(event)=>{\r\n      // console.log(drawSetting.croquisTimeDB,typeof(drawSetting.croquisTimeDB))\r\n      // console.log(drawSetting.brushRadius,typeof(drawSetting.brushRadius))\r\n      // console.log(drawSetting.lazyRadius,typeof(drawSetting.lazyRadius))\r\n      // console.log(drawSetting.eraseRadius,typeof(drawSetting.eraseRadius))\r\n        dbService.collection(\"usersetting\").doc(userObj.uid).update({\r\n            brushRadius:drawSetting.brushRadius,\r\n            lazyRadius:drawSetting.lazyRadius,\r\n            croquisTimeDB:drawSetting.croquisTimeDB,\r\n            eraseRadius:drawSetting.eraseRadius,\r\n            \r\n        });\r\n    }\r\n    const refreshAndSubmit =()=>{\r\n        setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n            //console.log(\"timeout\",randomPinNum[pinID])\r\n            \r\n            time.current=croquisTime;\r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:croquisTime-min*60-sec,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:randomPinNum[pinID]\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n    useEffect(()=> {\r\n      \r\n      getMyCroquisSettings();\r\n     \r\n        timeId.current= setInterval(()=>{\r\n            setMin(parseInt(time.current/60));\r\n            setSec(time.current % 60);\r\n            time.current -= 1;\r\n        },1000);\r\n        return()=> clearInterval(timeId.current);\r\n    },[]);\r\n\r\n    useEffect(()=> {\r\n        if(time.current<=-1){\r\n            refreshAndSubmit();\r\n            \r\n            \r\n        }\r\n    },[sec]);\r\n\r\n    useEffect(()=> {\r\n      \r\n             \r\n     \r\n       \r\n             dbService.doc(`RefDB/refStrings`).get().then((doc) => {\r\n            if (doc.exists) {\r\n                //console.log(\"Document data:\", doc.data().refUrl);\r\n                //setRandomPinNum(doc.data().refUrl);\r\n                //console.log(\"doc\",doc.data().refUrl)\r\n                // const random=doc.data().refUrl.sort(() => Math.random() - 0.5);\r\n                // console.log(typeof(doc.data().refUrl))\r\n                // setRandomPinNum(random);\r\n                let array = []\r\n                let data = doc.data();\r\n                Object.keys(data).forEach((name) => {\r\n                  console.log(name);\r\n                  array.push({\"list\":name,\"url\":data[name]})\r\n                });\r\n                //console.log(array)\r\n                setCroquisList(array)\r\n                const random=Object.values(array[0].url).sort(() => Math.random() - 0.5);\r\n                setRandomPinNum(random);\r\n                \r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n       \r\n        // dbService.collection(\"Csubmit\").onSnapshot((snapshot) =>{\r\n        //     const CsubmitArray = snapshot.docs.map((doc)=>({\r\n        //         id: doc.id,\r\n        //         ...doc.data(),\r\n        //     }));\r\n            \r\n        //     setCsubmits(CsubmitArray);\r\n        //     //console.log(Csubmits);\r\n        // });\r\n\r\n        \r\n        \r\n\r\n    },[]);\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n        //  const data = canvasRef.current.getSaveData();\r\n        //  canvasRef.current.clear();\r\n     \r\n         \r\n        //  await dbService.collection(\"Csubmit\").add({\r\n        //      text:data,\r\n        //      createdAt: Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //      heart:(0),\r\n        //     //  refPhoto:{refPhoto},\r\n        //      //pinNumber:randomPinNum,\r\n        //  });\r\n        //  setCsubmit(\"\"); \r\n        refreshAndSubmit();\r\n     };\r\n     const onSubmitPinNum= (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(pinNum.match(\",\")){\r\n            \r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n         \r\n            pinNum.split(\",\").forEach(e => {\r\n                //console.log(e)\r\n                pinDocRef.update({\r\n                    [submitField]:firebase.firestore.FieldValue.arrayUnion(e)\r\n            }); \r\n            \r\n        });\r\n        }else{\r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n            pinDocRef.update({\r\n                [submitField]:firebase.firestore.FieldValue.arrayUnion(pinNum)\r\n        });\r\n        }\r\n\r\n        \r\n           \r\n        setPinNum(\"\")\r\n\r\n     }\r\n     const onChange = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setPinNum(value);\r\n     }\r\n     const onChangeTime = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setCroquisTime(value);\r\n         setDrawSetting(prevState=>({...prevState, croquisTimeDB: event.target.value }))\r\n         \r\n     }\r\n\r\n     const onSubmitTime= (event) => {\r\n        event.preventDefault();\r\n        setTimeSetBottonToggle(false)\r\n        \r\n        //setCroquisTime(0)\r\n     }\r\n     const noRefreshAndSubmit =()=>{\r\n        \r\n      //console.log(\"timeout\",randomPinNum[pinID])\r\n      \r\n      time.current=croquisTime;\r\n      \r\n      const data = canvasRef.current.getSaveData();\r\n      const dataUrl=canvasRef.current.getDataURL();\r\n      canvasRef.current.clear();\r\n  \r\n      \r\n      dbService.collection(\"Csubmit\").add({\r\n          text:data,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          drawingTime:croquisTime-min*60-sec,\r\n          heart:(0),\r\n          dataUrl:dataUrl,\r\n          refPinUrl:randomPinNum[pinID]\r\n         //  refPhoto:{refPhoto},\r\n          //pinNumber:randomPinNum,\r\n      });\r\n      \r\n      setCsubmit(\"\"); \r\n\r\n      //clearInterval(timeId.current);\r\n}\r\n     const onSubmitOnlyCanvas= (event) => {\r\n      event.preventDefault();\r\n  \r\n     noRefreshAndSubmit();\r\n  };\r\n\r\n     const onDeletePinClick= () => {\r\n      \r\n      const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n      pinDocRef.update({\r\n          [submitField]:firebase.firestore.FieldValue.arrayRemove(randomPinNum[pinID])\r\n  });\r\n  setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n    };\r\n \r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n      if(ok){\r\n        canvasRef.current.clear();\r\n          \r\n      }\r\n    };\r\n     const onUndoClick= () => {\r\n        canvasRef.current.undo();\r\n    };\r\n     const onEraseClick= () => {\r\n        setBrushColor(\"erase\")\r\n        \r\n    };\r\n     const onBrushClick= () => {\r\n        setBrushColor(\"#444\")\r\n       \r\n    };\r\n    const onShadowClick= () => {\r\n      setBrushColor(\"shadow\")\r\n      \r\n  };\r\n\r\n    function ordinal_suffix_of(i) {\r\n        var j = i % 10,\r\n            k = i % 100;\r\n        if (j == 1 && k != 11) {\r\n            return i + \"st\";\r\n        }\r\n        if (j == 2 && k != 12) {\r\n            return i + \"nd\";\r\n        }\r\n        if (j == 3 && k != 13) {\r\n            return i + \"rd\";\r\n        }\r\n        return i + \"th\";\r\n    }\r\n    function sexagesimal(i) {\r\n        if(i <= 9){\r\n            return \"0\"+i;\r\n        }else{\r\n            return i;\r\n        }\r\n    }\r\n\r\n    const selectChange = (e) => {\r\n\t\t// event handler\r\n\t\t// console.log(e.target.value);\r\n\t\t// console.log(croquisList[e.target.value].list);\r\n\t\tsetSubmitField(croquisList[e.target.value].list)\r\n\t\t// console.log(typeof(Object.values(croquisList[e.target.value].url)));\r\n     \r\n        const random=Object.values(croquisList[e.target.value].url).sort(() => Math.random() - 0.5);\r\n                setRandomPinNum(random);\r\n\t};\r\n    //  const onChange = (event)=> {\r\n    //      const {\r\n    //          target:{value},\r\n    //      }=event;\r\n    //      setCsubmit(value);\r\n    //  }\r\n\r\n    //  const onSubmitImage= async(event) => {\r\n    //     event.preventDefault();\r\n    //     const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n    //     const response = await fileRef.putString(imageString,\"data_url\");\r\n    //     const imageUrl =await response.ref.getDownloadURL();\r\n    //     setImageString(\"\");\r\n    //  }\r\n    //  const onFileChange= (event)=>{\r\n    //     const {\r\n    //         target:{files}\r\n    //     }= event;\r\n    //     const theFile = files[0];\r\n    //     const reader= new FileReader();\r\n    //     reader.onloadend = (finishedEvent)=>{\r\n    //         const {\r\n    //             currentTarget:{result},\r\n    //         }=finishedEvent;\r\n            \r\n    //         setImageString(result);\r\n    //     }\r\n    //     reader.readAsDataURL(theFile);\r\n    //  }\r\n\r\n  return(\r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        if (keyName == \"ctrl+z\") { onUndoClick(); }\r\n        if (keyName == \"c\") {\r\n          if (brushColor != \"erase\") { onEraseClick(); }\r\n          else if (brushColor == \"erase\") { onBrushClick(); }\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n    ></Hotkeys>\r\n    <div>\r\n        {/* <PieChart style={{ height: '35px' }}\r\n    data={[{ value: 1, key: 1, color: '#E38627' }]}\r\n    startAngle={-90}\r\n    reveal={-100*(min*60+sec)/croquisTime}\r\n    lineWidth={100}\r\n    // background=\"#f3f3f3\"\r\n    lengthAngle={360}\r\n    /> */}\r\n        {/* <div style={{ float: 'right' }}>\r\n          {timeSetBottonToggle ? (<>\r\n            <form onSubmit={onSubmitTime}>\r\n              <input value={croquisTime} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n              <input type={\"submit\"} value=\"Set Time\" />\r\n\r\n            </form>\r\n          </>) : (<>\r\n            {ordinal_suffix_of(pinID + 1)}\r\n            <button onClick={(e) => { setTimeSetBottonToggle(true); } }>\r\n              Set Croquis Time</button>\r\n\r\n          </>)}\r\n          <button onClick={updateSetting}>Update Setting</button> */}\r\n          <div style={{ float: 'right' }}>\r\n          {timeSetBottonToggle ? (<>\r\n            <form onSubmit={onSubmitTime}>\r\n              <input value={croquisTime} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n              <input type={\"submit\"} value=\"Set Time\" />\r\n\r\n            </form>\r\n            <button onClick={onDeletePinClick}>Delete Pin</button>\r\n          </>) : (<>\r\n            {ordinal_suffix_of(pinID + 1)}\r\n            <button onClick={(e) => { setTimeSetBottonToggle(true); } }>\r\n              Set Time</button>\r\n\r\n          </>)}\r\n          <button onClick={updateSetting}>Update Setting</button>\r\n\r\n          \r\n          {/* <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.pinWidth}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, pinWidth: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.pinHeight}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, pinHeight: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.canvasWidth}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, canvasWidth: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.canvasHeight}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, canvasHeight: e.target.value }))\r\n          }\r\n        /> */}\r\n        </div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmitOnlyCanvas}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload&Redraw\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          width: '70px',\r\n          textAlign: 'center',\r\n\r\n          background: 'linear-gradient(to left,#FFC365 ' + (min * 60 + sec) * 100 / croquisTime + '%,#E8E8E8 ' + (min * 60 + sec) * 100 / croquisTime + '%)'\r\n        }}>\r\n          {min}: {sexagesimal(sec)}\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <form  onSubmit={onSubmitPinNum}>\r\n          <select  defaultValue={1} onChange={selectChange} >\r\n    {croquisList.map((e, key) => {\r\n        return <option key={e.list} value={key}>{e.list}</option>;\r\n    })}\r\n</select>\r\n            <input value={pinNum} onChange={onChange} type={\"text\"} placeholder=\"You Can Upload Pinterst Pin By Url Number\" />\r\n            <input type={\"submit\"} value=\"Upload Pin\" />\r\n\r\n          </form>\r\n          {/* <button onClick={onDeletePinClick}>Delete Pin</button> */}\r\n\r\n         \r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          <iframe key={pinReload} src={\"https://assets.pinterest.com/ext/embed.html?id=\" + randomPinNum[pinID]} height={770} width={400} frameBorder={0} scrolling=\"no\"></iframe>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n              \r\n\r\n\r\n            </div>\r\n            \r\n            <div style={{ float: 'left' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'left' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n\r\n\r\n            </div>\r\n            <div style={{ float: 'left' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>\r\n\r\n            \r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor}\r\n\r\n              allowOnlyPointerType={allowPointerType[pointerTypeIndex]} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* <form onSubmit={onSubmitImage}>\r\n          <input type={\"file\"} accept=\"image/*\" onChange={onFileChange}/>\r\n          <input type={\"submit\"} value=\"Upload Croquis Images\"/>\r\n    </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        {/* <div>\r\n        {Csubmits.map((Csubmit)=>(\r\n            <CCsubmit key={Csubmit.id} CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} />\r\n        ))}\r\n    </div> */}\r\n      </div></>\r\n  )\r\n };\r\n ","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\n\r\nexport default ({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const canvasRef = useRef();\r\n    const [drawSetting,setDrawSetting]=useState({\r\n       \r\n        brushRadius:0.8,\r\n        lazyRadius:0,\r\n       \r\n        \r\n\r\n\r\n    })\r\n    const [youtubeUrlIndex,setYoutubeUrlIndex]=useState(0);\r\n    const [youtubeUrls,setYoutubeUrls]=useState([\r\n        \"https://www.adorkastock.com/sketch/\",\r\n        \"https://line-of-action.com/\"\r\n    ])\r\n\r\n    \r\n            \r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n   \r\n    useEffect(()=> {\r\n      dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n          if (doc.exists) {\r\n              setDrawSetting({\r\n                  brushRadius:doc.data().brushRadius,\r\n                  lazyRadius:doc.data().lazyRadius,\r\n                  })\r\n                  \r\n              //console.log(doc.data())\r\n              \r\n              \r\n             \r\n              \r\n              \r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such setting document!\");\r\n          }\r\n      }).catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n           \r\n      });\r\n\r\n\r\n\r\n    \r\n  },[]);\r\n    \r\n    const refreshAndSubmit =()=>{\r\n        \r\n            \r\n           \r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:0,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:\"\"\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n     \r\n        refreshAndSubmit();\r\n     };\r\n     \r\n     \r\n\r\n\r\n     const onClearClick= () => {\r\n        canvasRef.current.clear();\r\n    };\r\n    const onUndoClick= () => {\r\n      canvasRef.current.undo();\r\n  };\r\n   const onEraseClick= () => {\r\n      setBrushColor(\"erase\")\r\n      \r\n  };\r\n   const onBrushClick= () => {\r\n      setBrushColor(\"#444\")\r\n      \r\n  };\r\n  const onShadowClick= () => {\r\n    setBrushColor(\"shadow\")\r\n    \r\n};\r\n    \r\n    \r\n\r\n  return(\r\n    \r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        \r\n        if(keyName == \"ctrl+z\"){onUndoClick();}\r\n        if(keyName == \"c\"){\r\n        if(brushColor != \"erase\"){onEraseClick()}\r\n        else if(brushColor == \"erase\"){onBrushClick()}\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n      // onKeyUp={(keyName, e, handle) => {\r\n      //   console.log(\"test:onKeyUp\", e, handle);\r\n      //   setOutput(`onKeyUp ${keyName}`);\r\n      // } }\r\n    ></Hotkeys>\r\n    \r\n    \r\n    <div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n\r\n          <label>videos:</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max={youtubeUrls.length - 1}\r\n            style={{ width: \"30px\" }}\r\n            value={youtubeUrlIndex}\r\n            onChange={e => {\r\n              setYoutubeUrlIndex(e.target.value);\r\n              setPinreload(pinReload + 1);\r\n            } } />\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        {/* <div style={{ float: 'left' }}>\r\n          <iframe key={pinReload} src={youtubeUrls[youtubeUrlIndex]} height={600} width={450} frameBorder={0} ></iframe>\r\n        </div> */}\r\n        <div style={{ float: 'left' }}>\r\n          <iframe is=\"x-frame-bypass\" key={pinReload} src={youtubeUrls[youtubeUrlIndex]} height={600} width={450} frameBorder={0} ></iframe>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n              <div style={{ float: 'right' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>\r\n\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload Drawing\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div></>\r\n  )\r\n };","customElements.define('x-frame-bypass', class extends HTMLIFrameElement {\n\tstatic get observedAttributes() {\n\t\treturn ['src']\n\t}\n\tconstructor () {\n\t\tsuper()\n\t}\n\tattributeChangedCallback () {\n\t\tthis.load(this.src)\n\t}\n\tconnectedCallback () {\n\t\tthis.sandbox = '' + this.sandbox || 'allow-forms allow-modals allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation' // all except allow-top-navigation\n\t}\n\tload (url, options) {\n\t\tif (!url || !url.startsWith('http'))\n\t\t\tthrow new Error(`X-Frame-Bypass src ${url} does not start with http(s)://`)\n\t\tconsole.log('X-Frame-Bypass loading:', url)\n\t\tthis.srcdoc = `<html>\n<head>\n\t<style>\n\t.loader {\n\t\tposition: absolute;\n\t\ttop: calc(50% - 25px);\n\t\tleft: calc(50% - 25px);\n\t\twidth: 50px;\n\t\theight: 50px;\n\t\tbackground-color: #333;\n\t\tborder-radius: 50%;  \n\t\tanimation: loader 1s infinite ease-in-out;\n\t}\n\t@keyframes loader {\n\t\t0% {\n\t\ttransform: scale(0);\n\t\t}\n\t\t100% {\n\t\ttransform: scale(1);\n\t\topacity: 0;\n\t\t}\n\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"loader\"></div>\n</body>\n</html>`\n\t\tthis.fetchProxy(url, options, 0).then(res => res.text()).then(data => {\n\t\t\tif (data)\n\t\t\t\tthis.srcdoc = data.replace(/<head([^>]*)>/i, `<head$1>\n\t<base href=\"${url}\">\n\t<script>\n\t// X-Frame-Bypass navigation event handlers\n\tdocument.addEventListener('click', e => {\n\t\tif (frameElement && document.activeElement && document.activeElement.href) {\n\t\t\te.preventDefault()\n\t\t\tframeElement.load(document.activeElement.href)\n\t\t}\n\t})\n\tdocument.addEventListener('submit', e => {\n\t\tif (frameElement && document.activeElement && document.activeElement.form && document.activeElement.form.action) {\n\t\t\te.preventDefault()\n\t\t\tif (document.activeElement.form.method === 'post')\n\t\t\t\tframeElement.load(document.activeElement.form.action, {method: 'post', body: new FormData(document.activeElement.form)})\n\t\t\telse\n\t\t\t\tframeElement.load(document.activeElement.form.action + '?' + new URLSearchParams(new FormData(document.activeElement.form)))\n\t\t}\n\t})\n\t</script>`)\n\t\t}).catch(e => console.error('Cannot load X-Frame-Bypass:', e))\n\t}\n\tfetchProxy (url, options, i) {\n\t\tconst proxies = (options || {}).proxies || [\n\t\t\t'https://croquistoolcors.herokuapp.com/',\n\t\t\t'https://cors-anywhere.herokuapp.com/',\n\t\t\t'https://yacdn.org/proxy/',\n\t\t\t'https://api.codetabs.com/v1/proxy/?quest='\n\t\t]\n\t\treturn fetch(proxies[i] + url, options).then(res => {\n\t\t\tif (!res.ok)\n\t\t\t\tthrow new Error(`${res.status} ${res.statusText}`);\n\t\t\treturn res\n\t\t}).catch(error => {\n\t\t\tif (i === proxies.length - 1)\n\t\t\t\tthrow error\n\t\t\treturn this.fetchProxy(url, options, i + 1)\n\t\t})\n\t}\n}, {extends: 'iframe'})\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\nimport bypass from \"./x-frame-bypass\"\r\nexport default ({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const canvasRef = useRef();\r\n    const [drawSetting,setDrawSetting]=useState({\r\n       \r\n        brushRadius:0.8,\r\n        lazyRadius:0,\r\n       \r\n        \r\n\r\n\r\n    })\r\n    const [youtubeUrlIndex,setYoutubeUrlIndex]=useState(0);\r\n    const [youtubeUrls,setYoutubeUrls]=useState([\r\n        \r\n        \"https://line-of-action.com/\"\r\n    ])\r\n\r\n    \r\n            \r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n   \r\n    useEffect(()=> {\r\n      dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n          if (doc.exists) {\r\n              setDrawSetting({\r\n                  brushRadius:doc.data().brushRadius,\r\n                  lazyRadius:doc.data().lazyRadius,\r\n                  })\r\n                  \r\n              //console.log(doc.data())\r\n              \r\n              \r\n             \r\n              \r\n              \r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such setting document!\");\r\n          }\r\n      }).catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n           \r\n      });\r\n\r\n\r\n\r\n    \r\n  },[]);\r\n    \r\n    const refreshAndSubmit =()=>{\r\n        \r\n            \r\n           \r\n            \r\n            const data = canvasRef.current.getSaveData();\r\n            const dataUrl=canvasRef.current.getDataURL();\r\n            canvasRef.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:0,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:\"\"\r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n     \r\n        refreshAndSubmit();\r\n     };\r\n     \r\n     \r\n\r\n\r\n     const onClearClick= () => {\r\n        canvasRef.current.clear();\r\n    };\r\n    const onUndoClick= () => {\r\n      canvasRef.current.undo();\r\n  };\r\n   const onEraseClick= () => {\r\n      setBrushColor(\"erase\")\r\n      \r\n  };\r\n   const onBrushClick= () => {\r\n      setBrushColor(\"#444\")\r\n      \r\n  };\r\n  const onShadowClick= () => {\r\n    setBrushColor(\"shadow\")\r\n    \r\n};\r\n    \r\n    \r\n\r\n  return(\r\n    \r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        \r\n        if(keyName == \"ctrl+z\"){onUndoClick();}\r\n        if(keyName == \"c\"){\r\n        if(brushColor != \"erase\"){onEraseClick()}\r\n        else if(brushColor == \"erase\"){onBrushClick()}\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n      // onKeyUp={(keyName, e, handle) => {\r\n      //   console.log(\"test:onKeyUp\", e, handle);\r\n      //   setOutput(`onKeyUp ${keyName}`);\r\n      // } }\r\n    ></Hotkeys>\r\n    \r\n    \r\n    <div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n\r\n          <label>videos:</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max={youtubeUrls.length - 1}\r\n            style={{ width: \"30px\" }}\r\n            value={youtubeUrlIndex}\r\n            onChange={e => {\r\n              setYoutubeUrlIndex(e.target.value);\r\n              setPinreload(pinReload + 1);\r\n            } } />\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          <iframe is=\"x-frame-bypass\" key={pinReload} src={youtubeUrls[youtubeUrlIndex]} height={600} width={450} frameBorder={0} ></iframe>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>\r\n\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload Drawing\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div></>\r\n  )\r\n };","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasDraw from \"../../src/canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport PinchZoomPan from \"PinchZoomPan\";\r\nimport Hotkeys from \"react-hot-keys\";\r\n\r\n\r\n\r\n\r\nexport default ({userObj}) => {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    // const [Csubmits,setCsubmits]= useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const canvasRef3 = useRef();\r\n    const [drawSetting,setDrawSetting]=useState({\r\n       \r\n        brushRadius:1,\r\n        lazyRadius:0,\r\n       \r\n        \r\n\r\n\r\n    })\r\n    \r\n\r\n    const [twitterUrl,setTwitterUrl]=useState(\"HourlyLizards\");\r\n    \r\n\r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n\r\n    \r\n\r\n    useEffect(()=> {\r\n        dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDrawSetting({\r\n                    brushRadius:doc.data().brushRadius,\r\n                    lazyRadius:doc.data().lazyRadius,\r\n                    })\r\n                    \r\n                console.log(doc.data())\r\n                \r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such setting document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n\r\n    },[]);\r\n            \r\n    \r\n \r\n \r\n    \r\n    const refreshAndSubmit =()=>{\r\n        \r\n            \r\n      \r\n            \r\n            const data = canvasRef3.current.getSaveData();\r\n            const dataUrl=canvasRef3.current.getDataURL();\r\n            canvasRef3.current.clear();\r\n        \r\n            \r\n            dbService.collection(\"Csubmit\").add({\r\n                text:data,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                drawingTime:0,\r\n                heart:(0),\r\n                dataUrl:dataUrl,\r\n                refPinUrl:\"\",\r\n                \r\n               //  refPhoto:{refPhoto},\r\n                //pinNumber:randomPinNum,\r\n            });\r\n            \r\n            setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n     \r\n        refreshAndSubmit();\r\n     };\r\n     \r\n     \r\n\r\n\r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n      if(ok){\r\n        canvasRef3.current.clear();\r\n          \r\n      }\r\n    };\r\n    const onUndoClick= () => {\r\n      canvasRef3.current.undo();\r\n  };\r\n   const onEraseClick= () => {\r\n      setBrushColor(\"erase\")\r\n      \r\n  };\r\n   const onBrushClick= () => {\r\n      setBrushColor(\"#444\")\r\n      \r\n  };\r\n  const onShadowClick= () => {\r\n    setBrushColor(\"shadow\")\r\n    \r\n};\r\n   const onSubmitTwitter= (event) => {\r\n    event.preventDefault();\r\n    setPinreload(pinReload + 1);\r\n      \r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n    document.getElementsByClassName(\"twitter-timeline\")[0].appendChild(script);\r\n}, [pinReload]);\r\n\r\n  return(\r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        if (keyName == \"ctrl+z\") { onUndoClick(); }\r\n        if (keyName == \"c\") {\r\n          if (brushColor != \"erase\") { onEraseClick(); }\r\n          else if (brushColor == \"erase\") { onBrushClick(); }\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n    ></Hotkeys>\r\n    <div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n\r\n          {/* <button onClick={ongetUrl}>geturls</button>\r\n    <button onClick={submitsoty}>submitsoty</button>\r\n     */}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n\r\n          \r\n          \r\n           \r\n            <form onSubmit={onSubmitTwitter}>\r\n            <input value={twitterUrl} onChange={e => {\r\n              setTwitterUrl(e.target.value);\r\n              \r\n            } } type={\"text\"} placeholder=\"@name\" />\r\n            <input type={\"submit\"} value=\"Go\" />\r\n\r\n          </form>\r\n\r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          {/* <iframe key={pinReload} src={\"https://www.youtube.com/embed/videoseries?list=\"+youtubeUrls[youtubeUrlIndex]+\"&cc_load_policy=1&cc_lang_pref=ko\"} height={450} width={450} frameBorder={0} scrolling=\"no\" ></iframe> */}\r\n          \r\n          <div key={pinReload} style={{ width: '450px', height: '770px' }}>\r\n          \r\n\r\n          <a  class={\"twitter-timeline\"} data-width={\"450\"} data-height={\"770\"} href={\"https://twitter.com/\"+twitterUrl+\"?ref_src=twsrc%5Etfw\"}></a>\r\n           {/* <script async src={\"https://platform.twitter.com/widgets.js\"} charset=\"utf-8\"></script> */}\r\n          </div>\r\n         \r\n\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'right' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n            \r\n\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n            {brushColor}\r\n\r\n            </div>\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Upload Drawing\" />\r\n\r\n              </form>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef3}\r\n              brushColor={brushColor} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div></>\r\n  )\r\n };","//import CCsubmit from \"../components/Csubmit\";\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { dbService ,storageService} from \"fbase\";\r\nimport React, { useEffect, useRef, useState,useCallback } from \"react\";\r\nimport CanvasDraw from \"../canvasDrawIndex\";\r\nimport   firebase from \"firebase/compat/app\";\r\nimport Hotkeys from \"react-hot-keys\";\r\nimport Soche from \"./soche.png\";\r\nimport Soche2 from \"./soche2.png\";\r\n// import Soche3 from \"./soche3.png\";\r\nimport { combineDrawing } from \"combinedrawing\";\r\n\r\nexport default ({userObj}) =>  {\r\n    const [Csubmit,setCsubmit]= useState(\"\");\r\n    const [Csubmits,setCsubmits]= useState([]);\r\n    const [Line,setLine]= useState([]);\r\n    const [croquisList,setCroquisList]= useState([]);\r\n    const [submitField,setSubmitField]= useState(\"\");\r\n    const canvasRef = useRef();\r\n    const [pinNum,setPinNum]=useState(\"\");\r\n    const [randomPinNum,setRandomPinNum]=useState([]);\r\n    const [pinReload,setPinreload]=useState(0);\r\n    const [pinID,setPinID]=useState(0);\r\n    const [croquisTime,setCroquisTime]=useState(60);\r\n    const allowPointerType=[\"all\",\"mouse\",\"touch\",\"pen\"]\r\n    const [pointerTypeIndex,setPointerTypeIndex]=useState(3)\r\n    //allowpointertype으로 터치허용유무설정가능 일단 펜만 가능하게함. 나중에하는걸로\r\n        const [min,setMin]=useState(0);\r\n        const [sec,setSec]=useState(0);\r\n        const time=useRef(croquisTime);\r\n        const timeId=useRef(null);\r\n        const [drawSetting,setDrawSetting]=useState({\r\n            croquisTimeDB:60,\r\n            brushRadius:1,\r\n            lazyRadius:1,\r\n            eraseRadius:10,\r\n            \r\n\r\n\r\n        })\r\n    const [timeSetBottonToggle,setTimeSetBottonToggle]=useState(false);\r\n\r\n\r\n    const [brushColor,setBrushColor]=useState(\"#444\")\r\n    const [socheNum,setSocheNum]=useState(1);\r\n    const [isSelect,setIsSelect]=useState(false);\r\n\r\n\r\n    \r\n\r\n    const getMyCroquisSettings = ()=>{\r\n              dbService.doc(\"usersetting/\"+userObj.uid).get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDrawSetting({\r\n                    brushRadius:doc.data().brushRadius,\r\n                    lazyRadius:doc.data().lazyRadius,\r\n                    eraseRadius:doc.data().eraseRadius,\r\n                    croquisTimeDB:doc.data().croquisTimeDB,\r\n                    })\r\n                    setCroquisTime(doc.data().croquisTimeDB)\r\n                console.log(doc.data())\r\n               // console.log(croquisTime)\r\n                time.current+=doc.data().croquisTimeDB-60;\r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such setting document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n    }\r\n    const updateSetting =(event)=>{\r\n      // console.log(drawSetting.croquisTimeDB,typeof(drawSetting.croquisTimeDB))\r\n      // console.log(drawSetting.brushRadius,typeof(drawSetting.brushRadius))\r\n      // console.log(drawSetting.lazyRadius,typeof(drawSetting.lazyRadius))\r\n      // console.log(drawSetting.eraseRadius,typeof(drawSetting.eraseRadius))\r\n        dbService.collection(\"usersetting\").doc(userObj.uid).update({\r\n            brushRadius:drawSetting.brushRadius,\r\n            lazyRadius:drawSetting.lazyRadius,\r\n            \r\n            eraseRadius:drawSetting.eraseRadius,\r\n            \r\n        });\r\n    }\r\n    const refreshAndSubmit =()=>{\r\n        setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n            //console.log(\"timeout\",randomPinNum[pinID])\r\n            \r\n            // time.current=croquisTime;\r\n            \r\n\r\n\r\n\r\n            // const data = canvasRef.current.getSaveData();\r\n            // const dataUrl=canvasRef.current.getDataURL();\r\n            // canvasRef.current.clear();\r\n        \r\n            \r\n            // dbService.collection(\"Csubmit\").add({\r\n            //     text:data,\r\n            //     createdAt: Date.now(),\r\n            //     creatorId: userObj.uid,\r\n            //     drawingTime:croquisTime-min*60-sec,\r\n            //     heart:(0),\r\n            //     dataUrl:dataUrl,\r\n            //     refPinUrl:randomPinNum[pinID]\r\n\r\n\r\n\r\n            //    //  refPhoto:{refPhoto},\r\n            //     //pinNumber:randomPinNum,\r\n\r\n\r\n            // });\r\n            \r\n            // setCsubmit(\"\"); \r\n\r\n            //clearInterval(timeId.current);\r\n    }\r\n    // useEffect(()=> {\r\n      \r\n    //   getMyCroquisSettings();\r\n     \r\n    //     timeId.current= setInterval(()=>{\r\n    //         setMin(parseInt(time.current/60));\r\n    //         setSec(time.current % 60);\r\n    //         time.current -= 1;\r\n    //     },1000);\r\n    //     return()=> clearInterval(timeId.current);\r\n    // },[]);\r\n\r\n    // useEffect(()=> {\r\n    //     if(time.current<=-1){\r\n    //         refreshAndSubmit();\r\n            \r\n            \r\n    //     }\r\n    // },[sec]);\r\n\r\n    useEffect(()=> {\r\n      \r\n             \r\n     \r\n       \r\n             dbService.doc(`RefDB/refStrings`).get().then((doc) => {\r\n            if (doc.exists) {\r\n                //console.log(\"Document data:\", doc.data().refUrl);\r\n                //setRandomPinNum(doc.data().refUrl);\r\n                //console.log(\"doc\",doc.data().refUrl)\r\n                // const random=doc.data().refUrl.sort(() => Math.random() - 0.5);\r\n                // console.log(typeof(doc.data().refUrl))\r\n                // setRandomPinNum(random);\r\n                let array = []\r\n                let data = doc.data();\r\n                Object.keys(data).forEach((name) => {\r\n                  console.log(name);\r\n                  array.push({\"list\":name,\"url\":data[name]})\r\n                });\r\n                //console.log(array)\r\n                setCroquisList(array)\r\n                const random=Object.values(array[0].url).sort(() => Math.random() - 0.5);\r\n                setRandomPinNum(random);\r\n                \r\n                \r\n               \r\n                \r\n                \r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n             \r\n        });\r\n\r\n\r\n       \r\n        // dbService.collection(\"Csubmit\").onSnapshot((snapshot) =>{\r\n        //     const CsubmitArray = snapshot.docs.map((doc)=>({\r\n        //         id: doc.id,\r\n        //         ...doc.data(),\r\n        //     }));\r\n            \r\n        //     setCsubmits(CsubmitArray);\r\n        //     //console.log(Csubmits);\r\n        // });\r\n\r\n        \r\n        \r\n\r\n    },[]);\r\n     const onSubmit= (event) => {\r\n         event.preventDefault();\r\n        //  const data = canvasRef.current.getSaveData();\r\n        //  canvasRef.current.clear();\r\n     \r\n         \r\n        //  await dbService.collection(\"Csubmit\").add({\r\n        //      text:data,\r\n        //      createdAt: Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //      heart:(0),\r\n        //     //  refPhoto:{refPhoto},\r\n        //      //pinNumber:randomPinNum,\r\n        //  });\r\n        //  setCsubmit(\"\"); \r\n        refreshAndSubmit();\r\n     };\r\n     const onSubmitPinNum= (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(pinNum.match(\",\")){\r\n            \r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n         \r\n            pinNum.split(\",\").forEach(e => {\r\n                //console.log(e)\r\n                pinDocRef.update({\r\n                    [submitField]:firebase.firestore.FieldValue.arrayUnion(e)\r\n            }); \r\n            \r\n        });\r\n        }else{\r\n            const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n            pinDocRef.update({\r\n                [submitField]:firebase.firestore.FieldValue.arrayUnion(pinNum)\r\n        });\r\n        }\r\n\r\n        \r\n           \r\n        setPinNum(\"\")\r\n\r\n     }\r\n     const onChange = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setPinNum(value);\r\n     }\r\n     const onChangeTime = (event)=> {\r\n         const {\r\n             target:{value},\r\n         }=event;\r\n         setCroquisTime(value);\r\n         setDrawSetting(prevState=>({...prevState, croquisTimeDB: event.target.value }))\r\n         \r\n     }\r\n\r\n     const onSubmitTime= (event) => {\r\n        event.preventDefault();\r\n        setTimeSetBottonToggle(false)\r\n        \r\n        //setCroquisTime(0)\r\n     }\r\n     const noRefreshAndSubmit =()=>{\r\n        \r\n      //console.log(\"timeout\",randomPinNum[pinID])\r\n      \r\n      time.current=croquisTime;\r\n      \r\n      const data = canvasRef.current.getSaveData();\r\n      const dataUrl=canvasRef.current.getDataURL();\r\n      \r\n\r\n// with img\r\n    //   const width = canvasRef.current.props.canvasWidth;\r\n    // const height = canvasRef.current.props.canvasHeight;\r\n    // const background = canvasRef.current.canvasContainer.children[0]; \r\n    // const drawing = canvasRef.current.canvasContainer.children[1]; \r\n    // const canvas = document.createElement('canvas');\r\n    // canvas.width = width;\r\n    // canvas.height = height;\r\n\r\n    // // composite now\r\n    // canvas.getContext('2d').drawImage(background, 0, 0);\r\n    // // canvas.getContext('2d').globalAlpha = 1.0; \r\n    // canvas.getContext('2d').drawImage(drawing, 0, 0);\r\n\r\n    // const dataUrl = canvas.toDataURL('image/png');\r\n\r\n\r\n      \r\n\r\n\r\n      // canvasRef.current.clear();\r\n      // noclearcanvas\r\n  \r\n      \r\n      dbService.collection(\"Dsubmit\").add({\r\n          text:data,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          drawingTime:croquisTime-min*60-sec,\r\n          heart:(0),\r\n          dataUrl:dataUrl,\r\n          refPinUrl:randomPinNum[pinID]\r\n         //  refPhoto:{refPhoto},\r\n          //pinNumber:randomPinNum,\r\n      });\r\n      \r\n      setCsubmit(\"\"); \r\n\r\n      //clearInterval(timeId.current);\r\n}\r\n     const onSubmitOnlyCanvas= (event) => {\r\n      event.preventDefault();\r\n      setIsSelect(true)\r\n     noRefreshAndSubmit();\r\n     setTimeout(() =>setIsSelect(false),500)\r\n  };\r\n     const noRefreshAndSubmitWithImg =()=>{\r\n        \r\n      //console.log(\"timeout\",randomPinNum[pinID])\r\n      \r\n      time.current=croquisTime;\r\n      \r\n      const data = canvasRef.current.getSaveData();\r\n      // const dataUrl=canvasRef.current.getDataURL();\r\n      \r\n\r\n// with img\r\n      const width = canvasRef.current.props.canvasWidth;\r\n    const height = canvasRef.current.props.canvasHeight;\r\n    const background = canvasRef.current.canvasContainer.children[0]; \r\n    const drawing = canvasRef.current.canvasContainer.children[1]; \r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    // composite now\r\n    canvas.getContext('2d').drawImage(background, 0, 0);\r\n    // canvas.getContext('2d').globalAlpha = 1.0; \r\n    canvas.getContext('2d').drawImage(drawing, 0, 0);\r\n\r\n    const dataUrl = canvas.toDataURL('image/png');\r\n\r\n\r\n      \r\n\r\n\r\n      // canvasRef.current.clear();\r\n      // noclearcanvas\r\n  \r\n      \r\n      dbService.collection(\"Dsubmit\").add({\r\n          text:data,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          drawingTime:croquisTime-min*60-sec,\r\n          heart:(0),\r\n          dataUrl:dataUrl,\r\n          refPinUrl:randomPinNum[pinID]\r\n         //  refPhoto:{refPhoto},\r\n          //pinNumber:randomPinNum,\r\n      });\r\n      \r\n      setCsubmit(\"\"); \r\n\r\n      //clearInterval(timeId.current);\r\n}\r\n     const onSubmitOnlyCanvasWithImg= (event) => {\r\n      event.preventDefault();\r\n      setIsSelect(true)\r\n     noRefreshAndSubmitWithImg();\r\n     setTimeout(() =>setIsSelect(false),500)\r\n  };\r\n\r\n     const onDeletePinClick= () => {\r\n      \r\n      const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n      pinDocRef.update({\r\n          [submitField]:firebase.firestore.FieldValue.arrayRemove(randomPinNum[pinID])\r\n  });\r\n  setPinreload(pinReload+1);\r\n            \r\n            setPinID(pinID+1);\r\n    };\r\n \r\n     const onClearClick= () => {\r\n      const ok = window.confirm(\"wanna clear this?\")\r\n      if(ok){\r\n        canvasRef.current.clear();\r\n          \r\n      }\r\n    };\r\n     const onUndoClick= () => {\r\n        canvasRef.current.undo();\r\n    };\r\n     const onEraseClick= () => {\r\n        setBrushColor(\"erase\")\r\n        \r\n    };\r\n     const onBrushClick= () => {\r\n        setBrushColor(\"#444\")\r\n       \r\n    };\r\n    const onShadowClick= () => {\r\n      setBrushColor(\"shadow\")\r\n      \r\n  };\r\n\r\n    function ordinal_suffix_of(i) {\r\n        var j = i % 10,\r\n            k = i % 100;\r\n        if (j == 1 && k != 11) {\r\n            return i + \"st\";\r\n        }\r\n        if (j == 2 && k != 12) {\r\n            return i + \"nd\";\r\n        }\r\n        if (j == 3 && k != 13) {\r\n            return i + \"rd\";\r\n        }\r\n        return i + \"th\";\r\n    }\r\n    function sexagesimal(i) {\r\n        if(i <= 9){\r\n            return \"0\"+i;\r\n        }else{\r\n            return i;\r\n        }\r\n    }\r\n\r\n    const selectChange = (e) => {\r\n\t\t// event handler\r\n\t\t// console.log(e.target.value);\r\n\t\t// console.log(croquisList[e.target.value].list);\r\n\t\tsetSubmitField(croquisList[e.target.value].list)\r\n\t\t// console.log(typeof(Object.values(croquisList[e.target.value].url)));\r\n     \r\n        const random=Object.values(croquisList[e.target.value].url).sort(() => Math.random() - 0.5);\r\n                setRandomPinNum(random);\r\n\t};\r\n    //  const onChange = (event)=> {\r\n    //      const {\r\n    //          target:{value},\r\n    //      }=event;\r\n    //      setCsubmit(value);\r\n    //  }\r\n\r\n    //  const onSubmitImage= async(event) => {\r\n    //     event.preventDefault();\r\n    //     const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n    //     const response = await fileRef.putString(imageString,\"data_url\");\r\n    //     const imageUrl =await response.ref.getDownloadURL();\r\n    //     setImageString(\"\");\r\n    //  }\r\n    //  const onFileChange= (event)=>{\r\n    //     const {\r\n    //         target:{files}\r\n    //     }= event;\r\n    //     const theFile = files[0];\r\n    //     const reader= new FileReader();\r\n    //     reader.onloadend = (finishedEvent)=>{\r\n    //         const {\r\n    //             currentTarget:{result},\r\n    //         }=finishedEvent;\r\n            \r\n    //         setImageString(result);\r\n    //     }\r\n    //     reader.readAsDataURL(theFile);\r\n    //  }\r\n\r\n  return(\r\n    <><Hotkeys\r\n      keyName=\"ctrl+z,c,x\"\r\n      onKeyDown={(keyName, e, handle) => {\r\n        //console.log(\"test:onKeyDown\", keyName);\r\n        if (keyName == \"ctrl+z\") { onUndoClick(); }\r\n        if (keyName == \"c\") {\r\n          if (brushColor != \"erase\") { onEraseClick(); }\r\n          else if (brushColor == \"erase\") { onBrushClick(); }\r\n        }\r\n        if (keyName == \"x\") {\r\n          if (brushColor != \"shadow\") { onShadowClick(); }\r\n          else if (brushColor == \"shadow\") { onBrushClick(); }\r\n        }\r\n      } }\r\n    ></Hotkeys>\r\n    <div>\r\n        {/* <PieChart style={{ height: '35px' }}\r\n    data={[{ value: 1, key: 1, color: '#E38627' }]}\r\n    startAngle={-90}\r\n    reveal={-100*(min*60+sec)/croquisTime}\r\n    lineWidth={100}\r\n    // background=\"#f3f3f3\"\r\n    lengthAngle={360}\r\n    /> */}\r\n        {/* <div style={{ float: 'right' }}>\r\n          {timeSetBottonToggle ? (<>\r\n            <form onSubmit={onSubmitTime}>\r\n              <input value={croquisTime} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n              <input type={\"submit\"} value=\"Set Time\" />\r\n\r\n            </form>\r\n          </>) : (<>\r\n            {ordinal_suffix_of(pinID + 1)}\r\n            <button onClick={(e) => { setTimeSetBottonToggle(true); } }>\r\n              Set Croquis Time</button>\r\n\r\n          </>)}\r\n          <button onClick={updateSetting}>Update Setting</button> */}\r\n          <div style={{ float: 'right' }}>\r\n          {timeSetBottonToggle ? (<>\r\n            <form onSubmit={onSubmitTime}>\r\n              <input value={croquisTime} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n              <input type={\"submit\"} value=\"Set Time\" />\r\n\r\n            </form>\r\n            <button onClick={onDeletePinClick}>Delete Pin</button>\r\n          </>) : (<>\r\n            {ordinal_suffix_of(pinID + 1)}\r\n            <button onClick={(e) => { setTimeSetBottonToggle(true); } }>\r\n              Set Time</button>\r\n\r\n          </>)}\r\n          <button onClick={updateSetting}>Update Setting</button>\r\n\r\n          \r\n          {/* <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.pinWidth}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, pinWidth: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.pinHeight}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, pinHeight: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.canvasWidth}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, canvasWidth: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          style={{ width: \"50px\" }}\r\n          value={drawSetting.canvasHeight}\r\n          onChange={e =>\r\n            setDrawSetting(prevState=>({...prevState, canvasHeight: e.target.value }))\r\n          }\r\n        /> */}\r\n        </div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n              <button onClick={onClearClick}>Clear Canvas</button>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            <button style={{ backgroundColor: isSelect ? 'green' : 'white'}} onClick={onSubmitOnlyCanvas}>Upload</button>\r\n            <button style={{ backgroundColor: isSelect ? 'green' : 'white'}} onClick={onSubmitOnlyCanvasWithImg}>With Img</button>\r\n              {/* <form onSubmit={onSubmitOnlyCanvas}>\r\n\r\n                 <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> \r\n                <input type={\"submit\"} value=\"Upload\" style={{background: '#E8E8E8'}} />\r\n\r\n              </form> */}\r\n            </div>\r\n\r\n        <div style={{ float: 'right' }}>\r\n              <form onSubmit={onSubmit}>\r\n\r\n                {/* <input value={Csubmit} onChange= {onChange} type={\"text\"} placeholder=\"what'on your mind?\" maxLength={120} /> */}\r\n                <input type={\"submit\"} value=\"Next\" />\r\n\r\n              </form>\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n            \r\n            <button onClick={e => {\r\n              setSocheNum(pre => 2); \r\n              \r\n            } }>{\"+2\"}</button>\r\n            </div>\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          width: '70px',\r\n          textAlign: 'center',\r\n\r\n          background: 'linear-gradient(to left,#FFC365 ' + (min * 60 + sec) * 100 / croquisTime + '%,#E8E8E8 ' + (min * 60 + sec) * 100 / croquisTime + '%)'\r\n        }}>\r\n          {min}: {sexagesimal(sec)}\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <form  onSubmit={onSubmitPinNum}>\r\n          <select  defaultValue={1} onChange={selectChange} >\r\n    {croquisList.map((e, key) => {\r\n        return <option key={e.list} value={key}>{e.list}</option>;\r\n    })}\r\n</select>\r\n            <input value={pinNum} onChange={onChange} type={\"text\"} placeholder=\"You Can Upload Pinterst Pin By Url Number\" />\r\n            <input type={\"submit\"} value=\"Upload Pin\" />\r\n\r\n          </form>\r\n          {/* <button onClick={onDeletePinClick}>Delete Pin</button> */}\r\n\r\n         \r\n\r\n        </div>\r\n\r\n\r\n        {/* <div>https://assets.pinterest.com/ext/embed.html?id={randomPinNum[pinID]}    {pinID}</div> */}\r\n        <div style={{ float: 'left' }}>\r\n          <iframe key={pinReload} src={\"https://assets.pinterest.com/ext/embed.html?id=\" + randomPinNum[pinID]} height={770} width={400} frameBorder={0} scrolling=\"no\"></iframe>\r\n        </div>\r\n\r\n        <div style={{ float: 'left' }}>\r\n          <div>\r\n\r\n\r\n\r\n            <div style={{ float: 'right' }}>\r\n              <label>Lazy:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.lazyRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n              {brushColor==\"erase\" ? (<>\r\n                <label>Erase Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.eraseRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\r\n\r\n              </>):(<>\r\n                <label>Brush Size:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                style={{ width: \"30px\" }}\r\n                value={drawSetting.brushRadius}\r\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\r\n              \r\n              </>)}\r\n              \r\n\r\n\r\n            </div>\r\n            \r\n            <div style={{ float: 'left' }}>\r\n              <button onClick={onUndoClick}>◀</button>\r\n            </div>\r\n\r\n            <div style={{ float: 'left' }}>\r\n              {(brushColor == \"erase\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\r\n\r\n\r\n            </div>\r\n            <div style={{ float: 'left' }}>\r\n              {(brushColor == \"shadow\") ? (\r\n                <><button onClick={onBrushClick}>brush</button></>\r\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\r\n\r\n            {brushColor}\r\n            </div>\r\n\r\n            \r\n\r\n\r\n          </div>\r\n          <div style={{ float: 'right' }}>\r\n            <CanvasDraw\r\n              imgSrc={(socheNum==1) ? Soche:\r\n                 Soche2 \r\n                }\r\n              canvasWidth={600}\r\n              canvasHeight={600}\r\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\r\n              lazyRadius={drawSetting.lazyRadius}\r\n              ref={canvasRef}\r\n              brushColor={brushColor}\r\n              refreshBackgroundImage={true}\r\n              allowOnlyPointerType={allowPointerType[pointerTypeIndex]} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* <form onSubmit={onSubmitImage}>\r\n          <input type={\"file\"} accept=\"image/*\" onChange={onFileChange}/>\r\n          <input type={\"submit\"} value=\"Upload Croquis Images\"/>\r\n    </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        {/* <div>\r\n        {Csubmits.map((Csubmit)=>(\r\n            <CCsubmit key={Csubmit.id} CsubmitObj={Csubmit} isOwner={Csubmit.creatorId=== userObj.uid} />\r\n        ))}\r\n    </div> */}\r\n      </div></>\r\n  )\r\n };\r\n ","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef,useState } from \"react\";\r\nimport CanvasDraw from \"../canvasDrawIndex\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport   firebase from \"firebase/compat/app\";\r\n\r\nconst CDsubmit =({DsubmitObj, isOwner,viewDeleyToggle})=>{\r\n    const [editing,setEditing]= useState(false);\r\n    const [newDsubmit,setnewDsubmit]=useState(DsubmitObj.text);\r\n    // const [givedHeart,setGivedHeart]=useState(false)\r\n    // const [yourheart,setYourHeart]=useState(DsubmitObj.heart);\r\n    const canvasRef2 = useRef();\r\n    const [onOff,setOnOff]=useState(true);\r\n    // const [onReview,setOnReview]= useState(false);\r\n    // const [offReview,setoffReview]= useState(false);\r\n    // // canvasRef2.current.loadSaveData(DsubmitObj.text);\r\n    let uploadDay= new Date(DsubmitObj.createdAt);\r\n    const [viewRefPin,setViewRefpin]=useState(false);\r\n    // useEffect(() => {\r\n    //    \r\n    //     //  if(viewsToggle && onOff){\r\n    //     //     canvasRef2.current.loadSaveData(DsubmitObj.text,true);\r\n    //     //     setOnOff(false)\r\n    //     //  }\r\n        \r\n    // },[editing]);\r\n    const onDeleteClick= () => {\r\n        const ok = window.confirm(\"wanna delete this?\")\r\n        if(ok){\r\n            dbService.doc(`Dsubmit/${DsubmitObj.id}`).delete();\r\n            \r\n        }\r\n    };\r\n    const toggleReview=()=> {\r\n        canvasRef2.current.clear();\r\n        // canvasRef2.current.loadSaveData(DsubmitObj.text);\r\n        canvasRef2.current.loadSaveData(DsubmitObj.text);\r\n        \r\n    };\r\n    const offReview=()=>{\r\n        setEditing(false);\r\n            // 강제 이미지추가\r\n            // console.log('none')\r\n            // const dataUrl=canvasRef2.current.getDataURL();\r\n        \r\n    \r\n        \r\n            // dbService.doc(`Dsubmit/${DsubmitObj.id}`).update({\r\n            \r\n            // dataUrl:dataUrl,\r\n           //  refPhoto:{refPhoto},\r\n            //pinNumber:randomPinNum,\r\n        // });\r\n        \r\n    }\r\n    const onReview=()=> {setEditing(true);\r\n        setTimeout(function() {\r\n            canvasRef2.current.loadSaveData(DsubmitObj.text);\r\n            \r\n            \r\n          }, 5);\r\n        }\r\n    const onSubmit = (event)=> {\r\n        event.preventDefault();\r\n        const data = canvasRef2.current.getSaveData();\r\n        const dataUrl=canvasRef2.current.getDataURL();\r\n        dbService.doc(`Dsubmit/${DsubmitObj.id}`).update({\r\n            text:data,\r\n            dataUrl:dataUrl\r\n        });\r\n        setEditing(false);\r\n\r\n    }\r\n    const onChange = (event)=> {\r\n        const {target:{value},\r\n        }=event;\r\n        setnewDsubmit(value);\r\n    }\r\n    //const toggleheart=()=> setYourHeart(prev => !prev);\r\n    const onHeartClick= async() =>{\r\n        setOnOff(prev => !prev);\r\n        await dbService.doc(`Dsubmit/${DsubmitObj.id}`).update({\r\n           heart:(1+(DsubmitObj.heart)),\r\n        })\r\n        console.log(DsubmitObj.heart)\r\n        const pinDocRef= dbService.doc(`RefDB/refStrings`);\r\n        pinDocRef.update({\r\n            heart:firebase.firestore.FieldValue.arrayUnion(DsubmitObj.refPinUrl)\r\n        });\r\n    }\r\n\r\n\r\n    \r\n     \r\n    return(\r\n        <div   style={{float:'left', border: '10px solid rgba(0, 0, 0, 0.05)',width:\"420px\"\r\n        }}>\r\n            \r\n        {\r\n            editing ? (\r\n            <>\r\n            <button onClick={onSubmit}>Edit</button>\r\n            {/* <form onSubmit={onSubmit}><input value={newDsubmit} required onChange={onChange}/>\r\n            <input type={\"submit\"} value=\"edit\"/>\r\n            </form> */}\r\n            \r\n            <div><CanvasDraw \r\n            // style={{ touchAction: 'disabled'  ? 'auto' : 'none' }}\r\n            ref={canvasRef2}\r\n            //  disabled\r\n            // hideInterface\r\n            brushRadius={0.6}\r\n              lazyRadius={0.5}\r\n              \r\n              brushColor={\"#df6161\"}\r\n              allowOnlyPointerType={\"pen\"}\r\n             loadTimeOffset={1}\r\n             /></div>\r\n             \r\n             <button onClick={toggleReview}>Rewind</button>\r\n             <button onClick={offReview}>Cancel</button>\r\n             \r\n            </>\r\n            ):(\r\n            <>\r\n            \r\n            <div style={{margin: '0 auto'}}>\r\n            <LazyLoadImage\r\n            \r\n      \r\n      height={400}\r\n      src={DsubmitObj.dataUrl} // use normal <img> attributes as props\r\n       />\r\n       \r\n      {/* <img src={DsubmitObj.dataUrl} height=\"400px\" ></img> */}\r\n      </div>\r\n            \r\n            \r\n        {isOwner ? (\r\n            <>\r\n\r\n            {/* <button disabled>❤ {DsubmitObj.heart}</button> */}\r\n            <button onClick={onHeartClick}>❤{DsubmitObj.heart}</button>\r\n            <button onClick={onDeleteClick}>Delete</button>\r\n            <button onClick={onReview}>Review</button>\r\n            \r\n            \r\n            </>\r\n        ):(\r\n            <>\r\n            <button onClick={onHeartClick}>❤ {DsubmitObj.heart}</button>\r\n            \r\n            </>\r\n        )}\r\n\r\n            \r\n            \r\n                \r\n            \r\n            \r\n            \r\n            \r\n        </>\r\n            \r\n            \r\n            \r\n            \r\n\r\n            )}\r\n            <button onClick={()=>{setViewRefpin(pre=>!pre)}}>Ref Pin</button>\r\n            {\"   \"}  {uploadDay.toLocaleString(navigator.language || navigator.userLanguage)}\r\n            {viewRefPin ? (<>\r\n                <div><iframe  src={\"https://assets.pinterest.com/ext/embed.html?id=\"+DsubmitObj.refPinUrl} height=\"600\" width=\"300\" frameBorder={0} scrolling=\"no\" ></iframe>\r\n                </div></>):(<></>)}\r\n    </div>\r\n)\r\n};\r\n    \r\n\r\nexport default CDsubmit;","import CDsubmit from \"components/Dsubmit\";\r\nimport { authService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport _ from 'lodash';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default ({userObj}) => {\r\n    const onLogOutClick = () => {\r\n      const ok = window.confirm(\"wanna logout?\")\r\n        if(ok){\r\n          authService.signOut();}\r\n        }\r\n    const [Dsubmits,setDsubmits]= useState([]);\r\n    const [viewToggle,setViewToggle]=useState(false);\r\n    const [viewDeleyToggle,setViewDeleyToggle]=useState(false);\r\n    const [Cdate, setCdate] = useState(new Date());\r\n    // const getMyCroquis = async()=>{\r\n    //     const croquisPost = await dbService.collection(\"Dsubmit\")\r\n    //     .where(\"creatorId\",\"==\",userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"desc\")\r\n    //     .get();\r\n    //     console.log(croquisPost.docs.map((doc)=>doc.data()));\r\n    //     setDsubmits(croquisPost.docs.map((doc)=>doc.data()));\r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //     getMyCroquis();\r\n    // },[]);\r\n    const [startDate,setStartDate]=useState(2658674800000)\r\n    const [listEnd,setListEnd]=useState(100)\r\n    const [isCalendar,setIsCalender]=useState(false)\r\n    // const [lastScrollTop, setLastScrollTop] = useState(0);\r\n    // const [bodyOffset, setBodyOffset] = useState(\r\n    //   document.body.getBoundingClientRect()\r\n    // );\r\n    // const [scrollY, setScrollY] = useState(bodyOffset.top);\r\n    // const [isLoading,setIsLoading] = useState(true)\r\n      \r\n    // const listener = e => {\r\n    //   // setBodyOffset(document.body.getBoundingClientRect());\r\n    //   // setScrollY(-bodyOffset.top);\r\n    //   // if(window.innerHeight + document.documentElement.scrollTop>document.documentElement.offsetHeight-10){\r\n    //   //   console.log(window.innerHeight)\r\n    //   //   console.log(document.documentElement.scrollTop)\r\n    //   //   console.log(document.documentElement.offsetHeight)\r\n    //   //   setListEnd(pre=>pre+10)\r\n    //   //   return;\r\n    //   // }\r\n    //   if((window.innerHeight + document.documentElement.scrollTop>document.documentElement.offsetHeight-100)&&isLoading){\r\n    //     setListEnd(pre=>pre+10)\r\n    //     setIsLoading(false)\r\n    //     console.log(\"scrolling down\");\r\n    //     return;\r\n    //   }\r\n    //   else {\r\n    //     setIsLoading(true)\r\n        \r\n    //   }\r\n    // };\r\n  \r\n    // useEffect(() => {\r\n    //   window.addEventListener(\"scroll\", _.throttle(listener, 100));\r\n    //   // console.log(scrollY)\r\n    //   // console.log(bodyOffset)\r\n    //   // console.log(\"d\")\r\n    //   return () => {\r\n    //     window.removeEventListener(\"scroll\", _.throttle(listener, 100));\r\n        \r\n    //   };\r\n    // });\r\n    // useEffect(() => {\r\n    //   const throttledCount = _.throttle(listener, 100);\r\n    //   window.addEventListener('scroll', throttledCount);\r\n    //   return () => window.removeEventListener('scroll', throttledCount);\r\n    // }, []);\r\n  \r\n  \r\n\r\n    useEffect(()=> {  \r\n    dbService.collection(\"Dsubmit\")\r\n        .where(\"creatorId\",\"==\",userObj.uid)\r\n        .orderBy(\"createdAt\",\"desc\")\r\n        // .endAt(Date.now()-listEnd)\r\n        .where(\"createdAt\", \"<\", startDate+86400000)\r\n        .limit(listEnd)\r\n        // .get((snapshot) =>{\r\n        .onSnapshot((snapshot) =>{\r\n        const DsubmitArray = snapshot.docs.map((doc)=>({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        \r\n        setDsubmits(DsubmitArray);\r\n        //console.log(Dsubmits);\r\n    });\r\n\r\n\r\n    },[startDate]);\r\n    // },[]);\r\n    const onChangeTime = (event)=> {\r\n      const {\r\n          target:{value},\r\n      }=event;\r\n      setListEnd(value);\r\n     \r\n      console.log(\"ddd\")\r\n\r\n      \r\n  }\r\n  const nextPage = ()=>{\r\n    setListEnd(pre=>pre+100);\r\n  }\r\n  const clickCroquisDate=(value)=>{\r\n    setStartDate(value.getTime())\r\n    console.log(value.getTime());\r\n  }\r\n\r\n\r\n  \r\n    return (\r\n    <>\r\n        \r\n        \r\n        <span>Profile</span>\r\n      \r\n      \r\n        \r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        <button onClick={()=>{setIsCalender(pre=>!pre)}}>Calender</button>\r\n      {  isCalendar?(<>\r\n        <Calendar \r\n          // onClickDay={setCdate} \r\n          value={Cdate} onClickDay={clickCroquisDate} calendarType={\"US\"} />\r\n      </>):(<></>)}\r\n        \r\n        <input value={listEnd} onChange={onChangeTime} type={\"number\"} placeholder=\"Input Croquis Time\" />\r\n        <div>\r\n          {Dsubmits.map((Dsubmit)=>(\r\n              \r\n              <CDsubmit \r\n            //   key={Dsubmit.id} \r\n              DsubmitObj={Dsubmit} isOwner={Dsubmit.creatorId=== userObj.uid} viewsToggle={viewDeleyToggle}  />\r\n              \r\n          ))}\r\n      \r\n      </div>\r\n      <div>\r\n      <button style={{\r\n           float: 'right',\r\n           \r\n           margin: '10px',\r\n           marginRight: '500px',\r\n          padding:'15px 30px'}} onClick={nextPage}>Next Page</button>\r\n      </div>\r\n      \r\n      \r\n      \r\n        {/* {viewToggle ?(<>\r\n            <button onClick={(e)=>{setViewToggle(false)}}>\r\n          Close Drawings</button>\r\n          \r\n      </>):(<>\r\n        <button onClick={(e)=>{setViewToggle(true)}}>\r\n        \r\n          Show Drawings</button>\r\n      \r\n        </>)} */}\r\n        \r\n       \r\n            {/* <button onClick={(e)=>{setViewToggle(true)}}>\r\n          Close Drawings</button>\r\n          <div>\r\n          {Dsubmits.map((Dsubmit)=>(\r\n              \r\n              <CDsubmit \r\n            //   key={Dsubmit.id} \r\n              DsubmitObj={Dsubmit} isOwner={Dsubmit.creatorId=== userObj.uid} viewsToggle={viewToggle}  />\r\n              \r\n          ))}\r\n      </div> */}\r\n         \r\n        \r\n    </>\r\n    \r\n    )\r\n};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport DoProko from \"routes/DoProko\";\r\nimport DoSoty from \"routes/DoSoty\";\r\nimport DoSakuga from \"routes/DoSakuga\";\r\nimport Special from \"routes/Special\";\r\nimport Adorka from \"routes/Adorka\";\r\nimport LineOfAction from \"routes/LineOfAction\";\r\nimport Twitter from \"routes/twitter\";\r\nimport ChaDesign from \"routes/ChaDesign\";\r\nimport ChaDesignDraw from \"routes/ChaDrawing\";\r\n\r\nconst AppRouter=({isLoggedIn,userObj}) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn &&<Navigation />}\r\n            <Switch>\r\n                {isLoggedIn ?(\r\n                    <>\r\n                        <Route exact path= \"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/profile\">\r\n                            <Profile userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/doProko\">\r\n                            <DoProko userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/doSoty\">\r\n                            <DoSoty userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/doSakugaBooru\">\r\n                            <DoSakuga userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/special\">\r\n                            <Special userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/adorka\">\r\n                            <Adorka userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/lineofaction\">\r\n                            <LineOfAction userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/twitter\">\r\n                            <Twitter userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/chadesign\">\r\n                            <ChaDesign userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path= \"/chadesigndraw\">\r\n                            <ChaDesignDraw userObj={userObj}/>\r\n                        </Route>\r\n                        <Redirect from={\"*\"} to={\"/\"} />\r\n                    </>\r\n                 ) : (\r\n                     <>\r\n                    <Route exact path= \"/\">\r\n                          <Auth /> \r\n                    </Route>\r\n                    <Redirect from={\"*\"} to={\"/\"} />\r\n                    </>\r\n                 )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter; ","\r\nimport { authService } from \"fbase\"; \r\nimport React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"./Router\";  \r\n//import { authService } from \"fbase\"; \r\n\r\nfunction App() {\r\n  const [init,setInit]= useState(false);\r\n  //console.log(authService.currentUser);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj,setUserObj]= useState(null);\r\n  useEffect(()=> {\r\n    \r\n    authService.onAuthStateChanged((user) => {\r\n    if(user){\r\n      setIsLoggedIn(true);\r\n      setUserObj(user);\r\n    }else{\r\n      setIsLoggedIn(false);\r\n    }\r\n    setInit(true);\r\n  });\r\n  }, []);\r\n  return (\r\n    <>\r\n    {init ? (<AppRouter  isLoggedIn= {isLoggedIn} userObj={userObj}/>\r\n    ):( \"Inisializing..\" )}\r\n    </>\r\n  ) \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\n\r\nimport App from './components/App';\r\nimport firebase from \"./fbase\";\r\nimport \"./styles.css\";\r\nconsole.log(firebase)\r\n \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/soche.bcadcf28.png\";","module.exports = __webpack_public_path__ + \"static/media/soche2.37afe263.png\";"],"sourceRoot":""}